{"ast":null,"code":"import _regeneratorRuntime from\"/home/bogdan/project-manager-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/bogdan/project-manager-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import React,{useEffect}from'react';import{useDispatch,useSelector}from'react-redux';import styles from'./SprintsList.module.css';import SprintsListItem from'./sprintsListItem/SprintsListItem';import{getSprintsSelector,loaderSelector}from'../../../redux/sprints/sprints-selectors';import{fetchSprints}from'../../../redux/sprints/sprints-operations';import{useParams,useHistory}from'react-router-dom';import Loader from'../../loader/Loader';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var SprintsList=function SprintsList(){var params=useParams();var sprints=useSelector(getSprintsSelector);var isLoading=useSelector(loaderSelector);var dispatch=useDispatch();var history=useHistory();useEffect(function(){var getResult=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return dispatch(fetchSprints(params.projectId));case 2:case\"end\":return _context.stop();}}},_callee);}));return function getResult(){return _ref.apply(this,arguments);};}();getResult();},[dispatch,params.projectId,history]);return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"div\",{children:[isLoading?/*#__PURE__*/_jsx(Loader,{}):!sprints.length&&/*#__PURE__*/_jsx(\"h2\",{className:styles.emptyMessage,children:\"Your sprint collection is empty, use the \\\"Create sprint\\\" button.\"}),!!sprints.length&&/*#__PURE__*/_jsx(\"ul\",{className:styles.sprintList,children:sprints.map(function(item,idx){return/*#__PURE__*/_jsx(SprintsListItem,{item:item},idx);})})]})});};export default SprintsList;","map":{"version":3,"sources":["/home/bogdan/project-manager-app/src/components/sprintsPageContent/sprintsList/SprintsList.jsx"],"names":["React","useEffect","useDispatch","useSelector","styles","SprintsListItem","getSprintsSelector","loaderSelector","fetchSprints","useParams","useHistory","Loader","SprintsList","params","sprints","isLoading","dispatch","history","getResult","projectId","length","emptyMessage","sprintList","map","item","idx"],"mappings":"mOAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,MAAOC,CAAAA,MAAP,KAAmB,0BAAnB,CACA,MAAOC,CAAAA,eAAP,KAA4B,mCAA5B,CACA,OACEC,kBADF,CAEEC,cAFF,KAGO,0CAHP,CAIA,OAASC,YAAT,KAA6B,2CAA7B,CACA,OAASC,SAAT,CAAoBC,UAApB,KAAsC,kBAAtC,CACA,MAAOC,CAAAA,MAAP,KAAmB,qBAAnB,C,wFAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACxB,GAAMC,CAAAA,MAAM,CAAGJ,SAAS,EAAxB,CACA,GAAMK,CAAAA,OAAO,CAAGX,WAAW,CAACG,kBAAD,CAA3B,CACA,GAAMS,CAAAA,SAAS,CAAGZ,WAAW,CAACI,cAAD,CAA7B,CACA,GAAMS,CAAAA,QAAQ,CAAGd,WAAW,EAA5B,CACA,GAAMe,CAAAA,OAAO,CAAGP,UAAU,EAA1B,CAEAT,SAAS,CAAC,UAAM,CACd,GAAMiB,CAAAA,SAAS,0FAAG,yJACVF,CAAAA,QAAQ,CAACR,YAAY,CAACK,MAAM,CAACM,SAAR,CAAb,CADE,uDAAH,kBAATD,CAAAA,SAAS,0CAAf,CAGAA,SAAS,GACV,CALQ,CAKN,CAACF,QAAD,CAAWH,MAAM,CAACM,SAAlB,CAA6BF,OAA7B,CALM,CAAT,CAOA,mBACE,kCACE,uBACGF,SAAS,cACR,KAAC,MAAD,IADQ,CAGR,CAACD,OAAO,CAACM,MAAT,eACE,WAAI,SAAS,CAAEhB,MAAM,CAACiB,YAAtB,gFALN,CAUG,CAAC,CAACP,OAAO,CAACM,MAAV,eACC,WAAI,SAAS,CAAEhB,MAAM,CAACkB,UAAtB,UACGR,OAAO,CAACS,GAAR,CAAY,SAACC,IAAD,CAAOC,GAAP,qBACX,KAAC,eAAD,EAAiB,IAAI,CAAED,IAAvB,EAAkCC,GAAlC,CADW,EAAZ,CADH,EAXJ,GADF,EADF,CAsBD,CApCD,CAsCA,cAAeb,CAAAA,WAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styles from './SprintsList.module.css';\nimport SprintsListItem from './sprintsListItem/SprintsListItem';\nimport {\n  getSprintsSelector,\n  loaderSelector,\n} from '../../../redux/sprints/sprints-selectors';\nimport { fetchSprints } from '../../../redux/sprints/sprints-operations';\nimport { useParams, useHistory } from 'react-router-dom';\nimport Loader from '../../loader/Loader';\n\nconst SprintsList = () => {\n  const params = useParams();\n  const sprints = useSelector(getSprintsSelector);\n  const isLoading = useSelector(loaderSelector);\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  useEffect(() => {\n    const getResult = async () => {\n      await dispatch(fetchSprints(params.projectId));\n    };\n    getResult();\n  }, [dispatch, params.projectId, history]);\n\n  return (\n    <div>\n      <div>\n        {isLoading ? (\n          <Loader />\n        ) : (\n          !sprints.length && (\n            <h2 className={styles.emptyMessage}>\n              Your sprint collection is empty, use the \"Create sprint\" button.\n            </h2>\n          )\n        )}\n        {!!sprints.length && (\n          <ul className={styles.sprintList}>\n            {sprints.map((item, idx) => (\n              <SprintsListItem item={item} key={idx} />\n            ))}\n          </ul>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default SprintsList;\n"]},"metadata":{},"sourceType":"module"}