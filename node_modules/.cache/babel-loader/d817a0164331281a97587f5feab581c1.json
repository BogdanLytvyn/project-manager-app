{"ast":null,"code":"import _slicedToArray from\"/home/bogdan/project-manager-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import RoundButton from'../../../shared/roundButton/RoundButton';import styles from'./SprintListSideBar.module.css';import MainModal from'../../../shared/mainModal/MainModal';import СreateSprintForm from'../../createSprintForm/CreateSprintForm';import{useSelector,useDispatch}from'react-redux';import{getSprintsSelector,loaderSelector}from'../../../redux/sprints/sprints-selectors';import{fetchSprints}from'../../../redux/sprints/sprints-operations';import{useParams,Link,NavLink}from'react-router-dom';import ButtonShow from'../../../shared/buttonShow/ButtonShow';import Loader from'../../loader/Loader';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var SprintList=function SprintList(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),showModal=_useState2[0],setShowModal=_useState2[1];var sprintsList=useSelector(getSprintsSelector);var isLoading=useSelector(loaderSelector);var params=useParams();var dispatch=useDispatch();useEffect(function(){dispatch(fetchSprints(params.projectId));},[dispatch,params.projectId,params.history]);useEffect(function(){var body=document.querySelector('body');body.style.overflow=showModal?'hidden':'auto';},[showModal]);return/*#__PURE__*/_jsxs(\"div\",{className:styles.sprintsContainer,children:[/*#__PURE__*/_jsxs(Link,{className:styles.sprintsButtonBackContainer,to:\"/projects/\".concat(params.projectId),children:[/*#__PURE__*/_jsx(ButtonShow,{}),/*#__PURE__*/_jsx(\"p\",{className:styles.showProject,children:\"Show sprints\"})]}),/*#__PURE__*/_jsx(\"div\",{className:styles.leftPanelSprintsContainer,children:/*#__PURE__*/_jsx(\"ul\",{className:styles.sprintsList,children:isLoading?/*#__PURE__*/_jsx(Loader,{}):sprintsList.map(function(_ref){var title=_ref.title,_id=_ref._id;return/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsxs(NavLink,{className:styles.item,activeClassName:styles.activeItem,to:\"\".concat(_id),children:[/*#__PURE__*/_jsx(\"div\",{className:styles.sprintIcon}),/*#__PURE__*/_jsx(\"p\",{children:title})]})},_id);})})}),/*#__PURE__*/_jsxs(\"div\",{className:styles.sideButtonBox,children:[/*#__PURE__*/_jsx(RoundButton,{onClick:function onClick(){return setShowModal(true);}}),/*#__PURE__*/_jsx(\"p\",{className:styles.buttonTag,children:\"Create sprint\"}),/*#__PURE__*/_jsx(MainModal,{showModal:showModal,setShowModal:setShowModal,onClose:function onClose(){return setShowModal(false);},children:/*#__PURE__*/_jsx(СreateSprintForm,{onClose:function onClose(){return setShowModal(false);}})})]})]});};export default SprintList;","map":{"version":3,"sources":["/home/bogdan/project-manager-app/src/components/taskPageContent/sprintListSideBar/SprintListSideBar.jsx"],"names":["React","useState","useEffect","RoundButton","styles","MainModal","СreateSprintForm","useSelector","useDispatch","getSprintsSelector","loaderSelector","fetchSprints","useParams","Link","NavLink","ButtonShow","Loader","SprintList","showModal","setShowModal","sprintsList","isLoading","params","dispatch","projectId","history","body","document","querySelector","style","overflow","sprintsContainer","sprintsButtonBackContainer","showProject","leftPanelSprintsContainer","map","title","_id","item","activeItem","sprintIcon","sideButtonBox","buttonTag"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport RoundButton from '../../../shared/roundButton/RoundButton';\r\nimport styles from './SprintListSideBar.module.css';\r\nimport MainModal from '../../../shared/mainModal/MainModal';\r\nimport СreateSprintForm from '../../createSprintForm/CreateSprintForm';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n  getSprintsSelector,\r\n  loaderSelector,\r\n} from '../../../redux/sprints/sprints-selectors';\r\nimport { fetchSprints } from '../../../redux/sprints/sprints-operations';\r\nimport { useParams, Link, NavLink } from 'react-router-dom';\r\nimport ButtonShow from '../../../shared/buttonShow/ButtonShow';\r\nimport Loader from '../../loader/Loader';\r\n\r\nconst SprintList = () => {\r\n  const [showModal, setShowModal] = useState(false);\r\n  const sprintsList = useSelector(getSprintsSelector);\r\n  const isLoading = useSelector(loaderSelector);\r\n\r\n  const params = useParams();\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchSprints(params.projectId));\r\n  }, [dispatch, params.projectId, params.history]);\r\n\r\n  useEffect(() => {\r\n    const body = document.querySelector('body');\r\n    body.style.overflow = showModal ? 'hidden' : 'auto';\r\n  }, [showModal]);\r\n\r\n  return (\r\n    <div className={styles.sprintsContainer}>\r\n      <Link\r\n        className={styles.sprintsButtonBackContainer}\r\n        to={`/projects/${params.projectId}`}\r\n      >\r\n        <ButtonShow />\r\n        <p className={styles.showProject}>Show sprints</p>\r\n      </Link>\r\n\r\n      <div className={styles.leftPanelSprintsContainer}>\r\n        <ul className={styles.sprintsList}>\r\n          {isLoading ? (\r\n            <Loader />\r\n          ) : (\r\n            sprintsList.map(({ title, _id }) => (\r\n              <li key={_id}>\r\n                <NavLink\r\n                  className={styles.item}\r\n                  activeClassName={styles.activeItem}\r\n                  to={`${_id}`}\r\n                >\r\n                  <div className={styles.sprintIcon}></div>\r\n                  <p>{title}</p>\r\n                </NavLink>\r\n              </li>\r\n            ))\r\n          )}\r\n        </ul>\r\n      </div>\r\n      <div className={styles.sideButtonBox}>\r\n        <RoundButton onClick={() => setShowModal(true)} />\r\n\r\n        <p className={styles.buttonTag}>Create sprint</p>\r\n        <MainModal\r\n          showModal={showModal}\r\n          setShowModal={setShowModal}\r\n          onClose={() => setShowModal(false)}\r\n        >\r\n          <СreateSprintForm onClose={() => setShowModal(false)} />\r\n        </MainModal>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SprintList;\r\n"]},"metadata":{},"sourceType":"module"}