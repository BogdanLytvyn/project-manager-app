{"ast":null,"code":"import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport { projectsRequest, projectsSuccess, projectsError, createProjectRequest, createProjectSuccess, createProjectError, deleteProjectRequest, deleteProjectSuccess, deleteProjectError, editProjectTitleRequest, editProjectTitleSuccess, editProjectTitleError, addMemberSuccess } from './projects-actions';\nconst initialProjectsState = [];\nconst projectsReducers = createReducer(initialProjectsState, {\n  [projectsSuccess]: (_, {\n    payload\n  }) => payload,\n  [createProjectSuccess]: (state, {\n    payload\n  }) => [...state, payload],\n  [editProjectTitleSuccess]: (state, {\n    payload\n  }) => {\n    const idx = state.findIndex(item => item._id === payload.projectId);\n    const project = state[idx];\n    return [...state.slice(0, idx), { ...project,\n      title: payload.title\n    }, ...state.slice(idx + 1)];\n  },\n  [addMemberSuccess]: (state, {\n    payload\n  }) => state.map(project => project._id === payload.projectId ? { ...project,\n    members: payload.members\n  } : project),\n  [deleteProjectSuccess]: (state, {\n    payload\n  }) => state.filter(item => item._id !== payload)\n});\nconst loadingReducer = createReducer(false, {\n  [projectsRequest]: () => true,\n  [projectsSuccess]: () => false,\n  [projectsError]: () => false,\n  [createProjectRequest]: () => true,\n  [createProjectSuccess]: () => false,\n  [createProjectError]: () => false,\n  [deleteProjectRequest]: () => true,\n  [deleteProjectSuccess]: () => false,\n  [deleteProjectError]: () => false,\n  [editProjectTitleRequest]: () => true,\n  [editProjectTitleSuccess]: () => false,\n  [editProjectTitleError]: () => false\n});\n\nconst handleError = (_, {\n  payload\n}) => {\n  var _payload$response;\n\n  return payload === null || payload === void 0 ? void 0 : (_payload$response = payload.response) === null || _payload$response === void 0 ? void 0 : _payload$response.data;\n};\n\nconst clearError = () => null;\n\nconst errorReducers = createReducer(null, {\n  [projectsRequest]: clearError,\n  [projectsError]: handleError,\n  [createProjectRequest]: clearError,\n  [createProjectError]: handleError,\n  [deleteProjectRequest]: clearError,\n  [deleteProjectError]: handleError,\n  [editProjectTitleRequest]: clearError,\n  [editProjectTitleError]: handleError\n}); //const errorReducers = createReducer(null, {});\n\nconst projects = combineReducers({\n  projects: projectsReducers,\n  loading: loadingReducer,\n  error: errorReducers\n});\nexport default projects;","map":{"version":3,"sources":["/home/bogdan/project-manager-app/src/redux/projects/projects-reducers.js"],"names":["combineReducers","createReducer","projectsRequest","projectsSuccess","projectsError","createProjectRequest","createProjectSuccess","createProjectError","deleteProjectRequest","deleteProjectSuccess","deleteProjectError","editProjectTitleRequest","editProjectTitleSuccess","editProjectTitleError","addMemberSuccess","initialProjectsState","projectsReducers","_","payload","state","idx","findIndex","item","_id","projectId","project","slice","title","map","members","filter","loadingReducer","handleError","response","data","clearError","errorReducers","projects","loading","error"],"mappings":"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","sourcesContent":["import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n  projectsRequest,\n  projectsSuccess,\n  projectsError,\n  createProjectRequest,\n  createProjectSuccess,\n  createProjectError,\n  deleteProjectRequest,\n  deleteProjectSuccess,\n  deleteProjectError,\n  editProjectTitleRequest,\n  editProjectTitleSuccess,\n  editProjectTitleError,\n  addMemberSuccess,\n} from './projects-actions';\n\nconst initialProjectsState = [];\n\nconst projectsReducers = createReducer(initialProjectsState, {\n  [projectsSuccess]: (_, { payload }) => payload,\n  [createProjectSuccess]: (state, { payload }) => [...state, payload],\n\n  [editProjectTitleSuccess]: (state, { payload }) => {\n    const idx = state.findIndex(item => item._id === payload.projectId);\n    const project = state[idx];\n    return [\n      ...state.slice(0, idx),\n      { ...project, title: payload.title },\n      ...state.slice(idx + 1),\n    ];\n  },\n  [addMemberSuccess]: (state, { payload }) =>\n    state.map(project =>\n      project._id === payload.projectId\n        ? { ...project, members: payload.members }\n        : project,\n    ),\n  [deleteProjectSuccess]: (state, { payload }) =>\n    state.filter(item => item._id !== payload),\n});\n\nconst loadingReducer = createReducer(false, {\n  [projectsRequest]: () => true,\n  [projectsSuccess]: () => false,\n  [projectsError]: () => false,\n  [createProjectRequest]: () => true,\n  [createProjectSuccess]: () => false,\n  [createProjectError]: () => false,\n  [deleteProjectRequest]: () => true,\n  [deleteProjectSuccess]: () => false,\n  [deleteProjectError]: () => false,\n  [editProjectTitleRequest]: () => true,\n  [editProjectTitleSuccess]: () => false,\n  [editProjectTitleError]: () => false,\n});\n\nconst handleError = (_, { payload }) => payload?.response?.data;\nconst clearError = () => null;\n\nconst errorReducers = createReducer(null, {\n  [projectsRequest]: clearError,\n  [projectsError]: handleError,\n  [createProjectRequest]: clearError,\n  [createProjectError]: handleError,\n  [deleteProjectRequest]: clearError,\n  [deleteProjectError]: handleError,\n  [editProjectTitleRequest]: clearError,\n  [editProjectTitleError]: handleError,\n});\n\n//const errorReducers = createReducer(null, {});\n\nconst projects = combineReducers({\n  projects: projectsReducers,\n  loading: loadingReducer,\n  error: errorReducers,\n});\nexport default projects;\n"]},"metadata":{},"sourceType":"module"}