{"ast":null,"code":"var _jsxFileName = \"/home/bogdan/project-manager-app/src/components/sprintsPageContent/sprintsList/SprintsList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styles from './SprintsList.module.css';\nimport SprintsListItem from './sprintsListItem/SprintsListItem';\nimport { getSprintsSelector, loaderSelector } from '../../../redux/sprints/sprints-selectors';\nimport { fetchSprints } from '../../../redux/sprints/sprints-operations';\nimport { useParams, useHistory } from 'react-router-dom';\nimport Loader from '../../loader/Loader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SprintsList = () => {\n  _s();\n\n  const params = useParams();\n  const sprints = useSelector(getSprintsSelector);\n  const isLoading = useSelector(loaderSelector);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  useEffect(() => {\n    const getResult = async () => {\n      await dispatch(fetchSprints(params.projectId));\n    };\n\n    getResult();\n  }, [dispatch, params.projectId, history]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [isLoading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this) : !sprints.length && /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: styles.emptyMessage,\n        children: \"Your sprint collection is empty, use the \\\"Create sprint\\\" button.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this), !!sprints.length && /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: styles.sprintList,\n        children: sprints.map((item, idx) => /*#__PURE__*/_jsxDEV(SprintsListItem, {\n          item: item\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SprintsList, \"iOQ7cTws3Qt5k4s1z9oTgikV4Kw=\", false, function () {\n  return [useParams, useSelector, useSelector, useDispatch, useHistory];\n});\n\n_c = SprintsList;\nexport default SprintsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"SprintsList\");","map":{"version":3,"sources":["/home/bogdan/project-manager-app/src/components/sprintsPageContent/sprintsList/SprintsList.jsx"],"names":["React","useEffect","useDispatch","useSelector","styles","SprintsListItem","getSprintsSelector","loaderSelector","fetchSprints","useParams","useHistory","Loader","SprintsList","params","sprints","isLoading","dispatch","history","getResult","projectId","length","emptyMessage","sprintList","map","item","idx"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,eAAP,MAA4B,mCAA5B;AACA,SACEC,kBADF,EAEEC,cAFF,QAGO,0CAHP;AAIA,SAASC,YAAT,QAA6B,2CAA7B;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,kBAAtC;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAMC,MAAM,GAAGJ,SAAS,EAAxB;AACA,QAAMK,OAAO,GAAGX,WAAW,CAACG,kBAAD,CAA3B;AACA,QAAMS,SAAS,GAAGZ,WAAW,CAACI,cAAD,CAA7B;AACA,QAAMS,QAAQ,GAAGd,WAAW,EAA5B;AACA,QAAMe,OAAO,GAAGP,UAAU,EAA1B;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMiB,SAAS,GAAG,YAAY;AAC5B,YAAMF,QAAQ,CAACR,YAAY,CAACK,MAAM,CAACM,SAAR,CAAb,CAAd;AACD,KAFD;;AAGAD,IAAAA,SAAS;AACV,GALQ,EAKN,CAACF,QAAD,EAAWH,MAAM,CAACM,SAAlB,EAA6BF,OAA7B,CALM,CAAT;AAOA,sBACE;AAAA,2BACE;AAAA,iBACGF,SAAS,gBACR,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADQ,GAGR,CAACD,OAAO,CAACM,MAAT,iBACE;AAAI,QAAA,SAAS,EAAEhB,MAAM,CAACiB,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALN,EAUG,CAAC,CAACP,OAAO,CAACM,MAAV,iBACC;AAAI,QAAA,SAAS,EAAEhB,MAAM,CAACkB,UAAtB;AAAA,kBACGR,OAAO,CAACS,GAAR,CAAY,CAACC,IAAD,EAAOC,GAAP,kBACX,QAAC,eAAD;AAAiB,UAAA,IAAI,EAAED;AAAvB,WAAkCC,GAAlC;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cAXJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD,CApCD;;GAAMb,W;UACWH,S,EACCN,W,EACEA,W,EACDD,W,EACDQ,U;;;KALZE,W;AAsCN,eAAeA,WAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styles from './SprintsList.module.css';\nimport SprintsListItem from './sprintsListItem/SprintsListItem';\nimport {\n  getSprintsSelector,\n  loaderSelector,\n} from '../../../redux/sprints/sprints-selectors';\nimport { fetchSprints } from '../../../redux/sprints/sprints-operations';\nimport { useParams, useHistory } from 'react-router-dom';\nimport Loader from '../../loader/Loader';\n\nconst SprintsList = () => {\n  const params = useParams();\n  const sprints = useSelector(getSprintsSelector);\n  const isLoading = useSelector(loaderSelector);\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  useEffect(() => {\n    const getResult = async () => {\n      await dispatch(fetchSprints(params.projectId));\n    };\n    getResult();\n  }, [dispatch, params.projectId, history]);\n\n  return (\n    <div>\n      <div>\n        {isLoading ? (\n          <Loader />\n        ) : (\n          !sprints.length && (\n            <h2 className={styles.emptyMessage}>\n              Your sprint collection is empty, use the \"Create sprint\" button.\n            </h2>\n          )\n        )}\n        {!!sprints.length && (\n          <ul className={styles.sprintList}>\n            {sprints.map((item, idx) => (\n              <SprintsListItem item={item} key={idx} />\n            ))}\n          </ul>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default SprintsList;\n"]},"metadata":{},"sourceType":"module"}