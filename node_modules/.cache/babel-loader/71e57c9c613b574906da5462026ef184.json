{"ast":null,"code":"var _jsxFileName = \"/home/bogdan/project-manager-app/src/components/taskListItem/TaskListItem.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport styles from './TaskListItem.module.css';\nimport sprite from \"../../icons/symbol-defs.svg\";\nimport { useDispatch } from 'react-redux';\nimport { deleteTask, changeTask } from '../../redux/tasks/task-operations.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TaskListItem = ({\n  item,\n  taskDate\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n\n  const deleteItem = () => dispatch(deleteTask(item._id));\n\n  const [hours, setHours] = useState(0);\n  useEffect(() => {\n    var _item$hoursWastedPerD;\n\n    setHours((_item$hoursWastedPerD = item.hoursWastedPerDay.find(item => new Date(item.currentDay).getDate() === new Date(taskDate).getDate())) === null || _item$hoursWastedPerD === void 0 ? void 0 : _item$hoursWastedPerD.singleHoursWasted);\n  }, [taskDate, item]);\n\n  const onHandleChange = e => {\n    const hours = Number(e.target.value);\n    if (hours > 8) return;\n\n    if (hours) {\n      setHours(hours);\n    }\n  };\n\n  const onHandleSubmit = e => {\n    e.preventDefault();\n    const date = new Date(taskDate);\n    const day = `${date.getFullYear()}-${(date.getMonth() + 1).toString().padStart(2, '0')}-${date.getDate().toString().padStart(2, '0')}`;\n    dispatch(changeTask(hours, item._id, day));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.card,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: styles.title,\n      children: item.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: styles.list,\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        className: styles.item,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles.itemName,\n          children: \"Scheduled hours\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: item.hoursPlanned\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: styles.item,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles.itemName,\n          children: \"Hours spent / per day\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), new Date(item === null || item === void 0 ? void 0 : item.hoursWastedPerDay[0].currentDay).getDate() > new Date(taskDate).getDate() ? /*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles.itemName,\n          children: \"0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n          className: styles.input,\n          type: \"number\",\n          onChange: onHandleChange,\n          onBlur: onHandleSubmit,\n          value: hours\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: styles.item,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles.itemName,\n          children: \"Hours spent\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: item.hoursWasted\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: styles.item,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: deleteItem,\n          className: styles.button,\n          type: \"button\",\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            className: styles.icon,\n            children: /*#__PURE__*/_jsxDEV(\"use\", {\n              href: sprite + '#icon-delete-bin'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TaskListItem, \"yvz73v+NNlsBRiJTstYtdvIVo4k=\", false, function () {\n  return [useDispatch];\n});\n\n_c = TaskListItem;\nexport default TaskListItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskListItem\");","map":{"version":3,"sources":["/home/bogdan/project-manager-app/src/components/taskListItem/TaskListItem.jsx"],"names":["React","useEffect","useState","styles","useDispatch","deleteTask","changeTask","TaskListItem","item","taskDate","dispatch","deleteItem","_id","hours","setHours","hoursWastedPerDay","find","Date","currentDay","getDate","singleHoursWasted","onHandleChange","e","Number","target","value","onHandleSubmit","preventDefault","date","day","getFullYear","getMonth","toString","padStart","card","title","list","itemName","hoursPlanned","input","hoursWasted","button","icon","sprite"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport styles from './TaskListItem.module.css';\nimport sprite from '../../icons/symbol-defs.svg';\nimport { useDispatch } from 'react-redux';\nimport { deleteTask, changeTask } from '../../redux/tasks/task-operations.js';\n\nconst TaskListItem = ({ item, taskDate }) => {\n  const dispatch = useDispatch();\n  const deleteItem = () => dispatch(deleteTask(item._id));\n  const [hours, setHours] = useState(0);\n\n  useEffect(() => {\n    setHours(\n      item.hoursWastedPerDay.find(\n        item =>\n          new Date(item.currentDay).getDate() === new Date(taskDate).getDate(),\n      )?.singleHoursWasted,\n    );\n  }, [taskDate, item]);\n\n  const onHandleChange = e => {\n    const hours = Number(e.target.value);\n    if (hours > 8) return;\n\n    if (hours) {\n      setHours(hours);\n    }\n  };\n\n  const onHandleSubmit = e => {\n    e.preventDefault();\n    const date = new Date(taskDate);\n    const day = `${date.getFullYear()}-${(date.getMonth() + 1)\n      .toString()\n      .padStart(2, '0')}-${date.getDate().toString().padStart(2, '0')}`;\n    dispatch(changeTask(hours, item._id, day));\n  };\n\n  return (\n    <div className={styles.card}>\n      <h2 className={styles.title}>{item.title}</h2>\n      <ul className={styles.list}>\n        <li className={styles.item}>\n          <span className={styles.itemName}>Scheduled hours</span>\n          <span>{item.hoursPlanned}</span>\n        </li>\n        <li className={styles.item}>\n          <span className={styles.itemName}>Hours spent / per day</span>\n          {new Date(item?.hoursWastedPerDay[0].currentDay).getDate() >\n          new Date(taskDate).getDate() ? (\n            <span className={styles.itemName}>0</span>\n          ) : (\n            <input\n              className={styles.input}\n              type=\"number\"\n              onChange={onHandleChange}\n              onBlur={onHandleSubmit}\n              value={hours}\n            />\n          )}\n        </li>\n        <li className={styles.item}>\n          <span className={styles.itemName}>Hours spent</span>\n          <span>{item.hoursWasted}</span>\n        </li>\n        <li className={styles.item}>\n          <span></span>\n          <button onClick={deleteItem} className={styles.button} type=\"button\">\n            <svg className={styles.icon}>\n              <use href={sprite + '#icon-delete-bin'} />\n            </svg>\n          </button>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default TaskListItem;\n"]},"metadata":{},"sourceType":"module"}