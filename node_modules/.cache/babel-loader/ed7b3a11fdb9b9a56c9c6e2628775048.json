{"ast":null,"code":"import _slicedToArray from\"/home/bogdan/project-manager-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import styles from'./TaskListItem.module.css';import sprite from\"../../icons/symbol-defs.svg\";import{useDispatch}from'react-redux';import{deleteTask,changeTask}from'../../redux/tasks/task-operations.js';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var TaskListItem=function TaskListItem(_ref){var item=_ref.item,taskDate=_ref.taskDate;var dispatch=useDispatch();var deleteItem=function deleteItem(){return dispatch(deleteTask(item._id));};var _useState=useState(0),_useState2=_slicedToArray(_useState,2),hours=_useState2[0],setHours=_useState2[1];useEffect(function(){var _item$hoursWastedPerD;setHours((_item$hoursWastedPerD=item.hoursWastedPerDay.find(function(item){return new Date(item.currentDay).getDate()===new Date(taskDate).getDate();}))===null||_item$hoursWastedPerD===void 0?void 0:_item$hoursWastedPerD.singleHoursWasted);},[taskDate,item]);var onHandleChange=function onHandleChange(e){var hours=Number(e.target.value);if(hours>8)return;if(hours){setHours(hours);}};var onHandleSubmit=function onHandleSubmit(e){e.preventDefault();var date=new Date(taskDate);var day=\"\".concat(date.getFullYear(),\"-\").concat((date.getMonth()+1).toString().padStart(2,'0'),\"-\").concat(date.getDate().toString().padStart(2,'0'));dispatch(changeTask(hours,item._id,day));};return/*#__PURE__*/_jsxs(\"div\",{className:styles.card,children:[/*#__PURE__*/_jsx(\"h2\",{className:styles.title,children:item.title}),/*#__PURE__*/_jsxs(\"ul\",{className:styles.list,children:[/*#__PURE__*/_jsxs(\"li\",{className:styles.item,children:[/*#__PURE__*/_jsx(\"span\",{className:styles.itemName,children:\"Scheduled hours\"}),/*#__PURE__*/_jsx(\"span\",{children:item.hoursPlanned})]}),/*#__PURE__*/_jsxs(\"li\",{className:styles.item,children:[/*#__PURE__*/_jsx(\"span\",{className:styles.itemName,children:\"Hours spent / per day\"}),new Date(item===null||item===void 0?void 0:item.hoursWastedPerDay[0].currentDay).getDate()>new Date(taskDate).getDate()?/*#__PURE__*/_jsx(\"span\",{className:styles.itemName,children:\"0\"}):/*#__PURE__*/_jsx(\"input\",{className:styles.input,type:\"number\",onChange:onHandleChange,onBlur:onHandleSubmit,value:hours})]}),/*#__PURE__*/_jsxs(\"li\",{className:styles.item,children:[/*#__PURE__*/_jsx(\"span\",{className:styles.itemName,children:\"Hours spent\"}),/*#__PURE__*/_jsx(\"span\",{children:item.hoursWasted})]}),/*#__PURE__*/_jsxs(\"li\",{className:styles.item,children:[/*#__PURE__*/_jsx(\"span\",{}),/*#__PURE__*/_jsx(\"button\",{onClick:deleteItem,className:styles.button,type:\"button\",children:/*#__PURE__*/_jsx(\"svg\",{className:styles.icon,children:/*#__PURE__*/_jsx(\"use\",{href:sprite+'#icon-delete-bin'})})})]})]})]});};export default TaskListItem;","map":{"version":3,"sources":["/home/bogdan/project-manager-app/src/components/taskListItem/TaskListItem.jsx"],"names":["React","useEffect","useState","styles","useDispatch","deleteTask","changeTask","TaskListItem","item","taskDate","dispatch","deleteItem","_id","hours","setHours","hoursWastedPerDay","find","Date","currentDay","getDate","singleHoursWasted","onHandleChange","e","Number","target","value","onHandleSubmit","preventDefault","date","day","getFullYear","getMonth","toString","padStart","card","title","list","itemName","hoursPlanned","input","hoursWasted","button","icon","sprite"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport styles from './TaskListItem.module.css';\nimport sprite from '../../icons/symbol-defs.svg';\nimport { useDispatch } from 'react-redux';\nimport { deleteTask, changeTask } from '../../redux/tasks/task-operations.js';\n\nconst TaskListItem = ({ item, taskDate }) => {\n  const dispatch = useDispatch();\n  const deleteItem = () => dispatch(deleteTask(item._id));\n  const [hours, setHours] = useState(0);\n\n  useEffect(() => {\n    setHours(\n      item.hoursWastedPerDay.find(\n        item =>\n          new Date(item.currentDay).getDate() === new Date(taskDate).getDate(),\n      )?.singleHoursWasted,\n    );\n  }, [taskDate, item]);\n\n  const onHandleChange = e => {\n    const hours = Number(e.target.value);\n    if (hours > 8) return;\n\n    if (hours) {\n      setHours(hours);\n    }\n  };\n\n  const onHandleSubmit = e => {\n    e.preventDefault();\n    const date = new Date(taskDate);\n    const day = `${date.getFullYear()}-${(date.getMonth() + 1)\n      .toString()\n      .padStart(2, '0')}-${date.getDate().toString().padStart(2, '0')}`;\n    dispatch(changeTask(hours, item._id, day));\n  };\n\n  return (\n    <div className={styles.card}>\n      <h2 className={styles.title}>{item.title}</h2>\n      <ul className={styles.list}>\n        <li className={styles.item}>\n          <span className={styles.itemName}>Scheduled hours</span>\n          <span>{item.hoursPlanned}</span>\n        </li>\n        <li className={styles.item}>\n          <span className={styles.itemName}>Hours spent / per day</span>\n          {new Date(item?.hoursWastedPerDay[0].currentDay).getDate() >\n          new Date(taskDate).getDate() ? (\n            <span className={styles.itemName}>0</span>\n          ) : (\n            <input\n              className={styles.input}\n              type=\"number\"\n              onChange={onHandleChange}\n              onBlur={onHandleSubmit}\n              value={hours}\n            />\n          )}\n        </li>\n        <li className={styles.item}>\n          <span className={styles.itemName}>Hours spent</span>\n          <span>{item.hoursWasted}</span>\n        </li>\n        <li className={styles.item}>\n          <span></span>\n          <button onClick={deleteItem} className={styles.button} type=\"button\">\n            <svg className={styles.icon}>\n              <use href={sprite + '#icon-delete-bin'} />\n            </svg>\n          </button>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default TaskListItem;\n"]},"metadata":{},"sourceType":"module"}