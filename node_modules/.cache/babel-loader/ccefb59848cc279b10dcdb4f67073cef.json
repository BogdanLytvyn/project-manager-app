{"ast":null,"code":"var _jsxFileName = \"/home/bogdan/project-manager-app/src/components/titleEditor/TitleEditor.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport styles from './TitleEditor.module.css';\nimport sprite from \"../../icons/symbol-defs.svg\";\nimport { editTitle } from '../../redux/sprints/sprints-operations';\nimport { getSprintsSelector } from '../../redux/sprints/sprints-selectors';\nimport AutosizeInput from './AutosizeInput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ChangeTitle() {\n  _s();\n\n  const dispatch = useDispatch();\n  const [input, setInput] = useState();\n  const [isUpdate, setUpdate] = useState(true);\n  const {\n    sprintId\n  } = useParams();\n  const sprints = useSelector(getSprintsSelector);\n  const sprint = sprints.find(sprint => sprint._id === sprintId);\n  const [isActive, setActive] = useState(true);\n\n  const onChangeTitle = e => {\n    setActive(() => setActive(false));\n    setUpdate(!isUpdate);\n    setInput(sprint.title);\n  };\n\n  const onHandleChange = e => {\n    setInput(e.target.value);\n  };\n\n  const onFormSubmit = e => {\n    e.preventDefault();\n    dispatch(editTitle(sprintId, input));\n    setUpdate(!isUpdate);\n    setActive(() => setActive(true));\n  };\n\n  if (isActive) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.wrapper,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: styles.sprintTitle,\n        onClick: onChangeTitle,\n        children: sprint === null || sprint === void 0 ? void 0 : sprint.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: onChangeTitle,\n        className: styles.changeTitleButton,\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          className: styles.changeTitleButton,\n          children: /*#__PURE__*/_jsxDEV(\"use\", {\n            href: sprite + '#icon-pencil'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (!isActive) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: styles.wrapper,\n        children: [/*#__PURE__*/_jsxDEV(AutosizeInput, {\n          type: \"text\",\n          name: \"edit\",\n          value: input,\n          onChange: onHandleChange,\n          onBlur: onFormSubmit,\n          maxLength: \"22\",\n          inputClassName: styles.titleChangeInput,\n          autoFocus: true,\n          autoComplete: \"off\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.changeTitleButton,\n          type: \"submit\",\n          onClick: onFormSubmit,\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            className: styles.changeTitleButton2,\n            children: /*#__PURE__*/_jsxDEV(\"use\", {\n              href: sprite + '#icon-save'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n}\n\n_s(ChangeTitle, \"sO8hX2bmeTAyqP1oe7aoB7NZDOE=\", false, function () {\n  return [useDispatch, useParams, useSelector];\n});\n\n_c = ChangeTitle;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChangeTitle\");","map":{"version":3,"sources":["/home/bogdan/project-manager-app/src/components/titleEditor/TitleEditor.jsx"],"names":["React","useState","useSelector","useDispatch","useParams","styles","editTitle","getSprintsSelector","AutosizeInput","ChangeTitle","dispatch","input","setInput","isUpdate","setUpdate","sprintId","sprints","sprint","find","_id","isActive","setActive","onChangeTitle","e","title","onHandleChange","target","value","onFormSubmit","preventDefault","wrapper","sprintTitle","changeTitleButton","sprite","titleChangeInput","changeTitleButton2"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport styles from './TitleEditor.module.css';\nimport sprite from '../../icons/symbol-defs.svg';\nimport { editTitle } from '../../redux/sprints/sprints-operations';\nimport { getSprintsSelector } from '../../redux/sprints/sprints-selectors';\nimport AutosizeInput from './AutosizeInput';\n\n\nexport default function ChangeTitle() {\n  const dispatch = useDispatch();\n  const [input, setInput] = useState();\n  const [isUpdate, setUpdate] = useState(true);\n  const { sprintId } = useParams();\n  const sprints = useSelector(getSprintsSelector);\n  const sprint = sprints.find(sprint => sprint._id === sprintId);\n  const [isActive, setActive] = useState(true);\n\n\n  const onChangeTitle = e => {\n    setActive(() => setActive(false));\n    setUpdate(!isUpdate);\n    setInput(sprint.title);\n  };\n\n  const onHandleChange = e => {\n    setInput(e.target.value);\n  };\n\n  const onFormSubmit = e => {\n    e.preventDefault();\n    dispatch(editTitle(sprintId, input));\n    setUpdate(!isUpdate);\n    setActive(() => setActive(true));\n  };\n\n  if (isActive) {\n    return (\n      <div className={styles.wrapper}>\n\n        <h1 className={styles.sprintTitle} onClick={onChangeTitle}>\n          {sprint?.title}\n        </h1>\n        <button\n          type=\"button\"\n          onClick={onChangeTitle}\n          className={styles.changeTitleButton}\n        >\n          <svg className={styles.changeTitleButton}>\n            <use href={sprite + '#icon-pencil'}></use>\n          </svg>\n        </button>\n        </div>\n    );\n  }\n\n  if (!isActive) {\n    return (\n      <>\n        <form className={styles.wrapper}>\n          <AutosizeInput\n            type=\"text\"\n            name=\"edit\"\n            value={input}\n            onChange={onHandleChange}\n            onBlur={onFormSubmit}\n            maxLength=\"22\"\n            inputClassName={styles.titleChangeInput}\n            autoFocus\n            autoComplete=\"off\"\n          />\n          <button\n            className={styles.changeTitleButton}\n            type=\"submit\"\n            onClick={onFormSubmit}\n          >\n            <svg className={styles.changeTitleButton2}>\n              <use href={sprite + '#icon-save'}></use>\n            </svg>\n          </button>\n        </form>\n      </>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}