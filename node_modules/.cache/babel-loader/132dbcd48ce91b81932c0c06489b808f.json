{"ast":null,"code":"import React,{useEffect}from'react';import{useDispatch,useSelector}from'react-redux';import styles from'./TaskList.module.css';import TaskListItem from'../../../components/taskListItem/TaskListItem';import{getLoading,getVisibleTasks}from'../../../redux/tasks/task-selectors';import{fetchTasks}from'../../../redux/tasks/task-operations';import{useParams}from'react-router-dom';import ChartModal from'../../graph/modal/ChartModal';import Loader from'../../loader/Loader';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var TaskList=function TaskList(_ref){var taskDate=_ref.taskDate;var _useParams=useParams(),sprintId=_useParams.sprintId;var tasks=useSelector(getVisibleTasks);var isLoading=useSelector(getLoading);var dispatch=useDispatch();useEffect(function(){dispatch(fetchTasks(sprintId));},[dispatch,sprintId]);return/*#__PURE__*/_jsxs(_Fragment,{children:[isLoading?/*#__PURE__*/_jsx(Loader,{}):!tasks.length&&/*#__PURE__*/_jsx(\"div\",{className:styles.emptyMessageBox,children:/*#__PURE__*/_jsx(\"h2\",{className:styles.emptyMessage,children:\"Your task collection is empty, use the \\\"Create task\\\" button.\"})}),!!tasks.length&&/*#__PURE__*/_jsx(\"ul\",{className:styles.taskList,children:tasks.map(function(item){return/*#__PURE__*/_jsx(\"li\",{className:styles.taskCard,children:/*#__PURE__*/_jsx(TaskListItem,{item:item,taskDate:taskDate})},item._id);})}),/*#__PURE__*/_jsx(ChartModal,{})]});};export default TaskList;","map":{"version":3,"sources":["/home/bogdan/project-manager-app/src/components/taskPageContent/taskList/TaskList.jsx"],"names":["React","useEffect","useDispatch","useSelector","styles","TaskListItem","getLoading","getVisibleTasks","fetchTasks","useParams","ChartModal","Loader","TaskList","taskDate","sprintId","tasks","isLoading","dispatch","length","emptyMessageBox","emptyMessage","taskList","map","item","taskCard","_id"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,MAAOC,CAAAA,MAAP,KAAmB,uBAAnB,CACA,MAAOC,CAAAA,YAAP,KAAyB,+CAAzB,CACA,OACEC,UADF,CAEEC,eAFF,KAGO,qCAHP,CAIA,OAASC,UAAT,KAA2B,sCAA3B,CACA,OAASC,SAAT,KAA0B,kBAA1B,CACA,MAAOC,CAAAA,UAAP,KAAuB,8BAAvB,CACA,MAAOC,CAAAA,MAAP,KAAmB,qBAAnB,C,6IAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,MAAkB,IAAfC,CAAAA,QAAe,MAAfA,QAAe,gBACZJ,SAAS,EADG,CACzBK,QADyB,YACzBA,QADyB,CAEjC,GAAMC,CAAAA,KAAK,CAAGZ,WAAW,CAACI,eAAD,CAAzB,CACA,GAAMS,CAAAA,SAAS,CAAGb,WAAW,CAACG,UAAD,CAA7B,CAEA,GAAMW,CAAAA,QAAQ,CAAGf,WAAW,EAA5B,CAEAD,SAAS,CAAC,UAAM,CACdgB,QAAQ,CAACT,UAAU,CAACM,QAAD,CAAX,CAAR,CACD,CAFQ,CAEN,CAACG,QAAD,CAAWH,QAAX,CAFM,CAAT,CAGA,mBACE,2BACGE,SAAS,cACR,KAAC,MAAD,IADQ,CAGR,CAACD,KAAK,CAACG,MAAP,eACE,YAAK,SAAS,CAAEd,MAAM,CAACe,eAAvB,uBACE,WAAI,SAAS,CAAEf,MAAM,CAACgB,YAAtB,4EADF,EALN,CAYG,CAAC,CAACL,KAAK,CAACG,MAAR,eACC,WAAI,SAAS,CAAEd,MAAM,CAACiB,QAAtB,UACGN,KAAK,CAACO,GAAN,CAAU,SAAAC,IAAI,qBACb,WAAmB,SAAS,CAAEnB,MAAM,CAACoB,QAArC,uBACE,KAAC,YAAD,EAAc,IAAI,CAAED,IAApB,CAA0B,QAAQ,CAAEV,QAApC,EADF,EAASU,IAAI,CAACE,GAAd,CADa,EAAd,CADH,EAbJ,cAqBE,KAAC,UAAD,IArBF,GADF,CAyBD,CAnCD,CAqCA,cAAeb,CAAAA,QAAf","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport styles from './TaskList.module.css';\r\nimport TaskListItem from '../../../components/taskListItem/TaskListItem';\r\nimport {\r\n  getLoading,\r\n  getVisibleTasks,\r\n} from '../../../redux/tasks/task-selectors';\r\nimport { fetchTasks } from '../../../redux/tasks/task-operations';\r\nimport { useParams } from 'react-router-dom';\r\nimport ChartModal from '../../graph/modal/ChartModal';\r\nimport Loader from '../../loader/Loader';\r\n\r\nconst TaskList = ({ taskDate }) => {\r\n  const { sprintId } = useParams();\r\n  const tasks = useSelector(getVisibleTasks);\r\n  const isLoading = useSelector(getLoading);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchTasks(sprintId));\r\n  }, [dispatch, sprintId]);\r\n  return (\r\n    <>\r\n      {isLoading ? (\r\n        <Loader />\r\n      ) : (\r\n        !tasks.length && (\r\n          <div className={styles.emptyMessageBox}>\r\n            <h2 className={styles.emptyMessage}>\r\n              Your task collection is empty, use the \"Create task\" button.\r\n            </h2>\r\n          </div>\r\n        )\r\n      )}\r\n      {!!tasks.length && (\r\n        <ul className={styles.taskList}>\r\n          {tasks.map(item => (\r\n            <li key={item._id} className={styles.taskCard}>\r\n              <TaskListItem item={item} taskDate={taskDate} />\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n      <ChartModal />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TaskList;\r\n"]},"metadata":{},"sourceType":"module"}