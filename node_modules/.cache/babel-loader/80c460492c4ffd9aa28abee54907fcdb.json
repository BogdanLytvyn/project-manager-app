{"ast":null,"code":"import _regeneratorRuntime from\"/home/bogdan/project-manager-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/bogdan/project-manager-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/bogdan/project-manager-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import{useState}from'react';import DatePicker from'react-datepicker';import'./datepicker.css';import{Formik,Form,Field,ErrorMessage}from'formik';import*as Yup from'yup';import Button from'../../shared/button/Button';import{addSprint}from'../../redux/sprints/sprints-operations';import{useDispatch}from'react-redux';import{useParams}from'react-router-dom';import styles from'./CreateSprintForm.module.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var formSchema=Yup.object().shape({title:Yup.string().min(3,'Too short!').required('* Sprint name is a required field'),duration:Yup.number().typeError('* Duration has to be a number').required('* Duration is a required field').positive('* Duration must be a positive number').integer('* Duration must be an integer')});var CreateSprintForm=function CreateSprintForm(_ref){var onClose=_ref.onClose;var dispatch=useDispatch();var params=useParams();var _useState=useState(new Date()),_useState2=_slicedToArray(_useState,2),startDate=_useState2[0],setStartDate=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),check=_useState4[0],setCheck=_useState4[1];var minDate=check?'':new Date();var onHandleSubmit=function onHandleSubmit(title,endDate,duration){addSprint(title,endDate,duration);dispatch(addSprint({title:title,endDate:endDate,duration:duration},params.projectId));};var onCheck=function onCheck(event){setCheck(function(prev){return!prev;});};var startToEndDay=function startToEndDay(inputDay,inputDuration){var dateToBackend=new Date(inputDay);dateToBackend.setDate(dateToBackend.getDate()+Number(inputDuration)-1);return dateToBackend;};return/*#__PURE__*/_jsxs(\"div\",{className:styles.formContainer,children:[/*#__PURE__*/_jsx(\"h2\",{className:styles.titleForm,children:\"Create a sprint\"}),/*#__PURE__*/_jsx(Formik,{initialValues:{title:'',duration:''},validationSchema:formSchema,onSubmit:/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(values){var title,duration,toBackEnd,endDate;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:title=values.title,duration=values.duration;toBackEnd=startToEndDay(startDate,duration);endDate=\"\".concat(toBackEnd.getFullYear(),\"-\").concat(1+toBackEnd.getMonth(),\"-\").concat(toBackEnd.getDate());onHandleSubmit(title,endDate,duration);onClose();case 5:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref2.apply(this,arguments);};}(),children:/*#__PURE__*/_jsxs(Form,{className:styles.form,children:[/*#__PURE__*/_jsx(Field,{className:styles.inputName,name:\"title\",type:\"text\",placeholder:\"The name of the sprint\"}),/*#__PURE__*/_jsx(ErrorMessage,{className:styles.errorName,component:\"span\",name:\"title\"}),/*#__PURE__*/_jsxs(\"label\",{className:styles.checkbox,children:[/*#__PURE__*/_jsx(Field,{type:\"checkbox\",name:\"pastDays\",checked:check,onClick:onCheck,placeholder:\"Includes past days\"}),/*#__PURE__*/_jsx(\"div\",{className:styles.checkbox__text,children:\"Include previous days\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:styles.tabletContainer,children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"picker\",className:styles.dataPickerContainer,children:/*#__PURE__*/_jsx(\"span\",{className:styles.dataPickerLabel,children:\"Start date\"})}),/*#__PURE__*/_jsx(DatePicker,{className:styles.dataPicker,selected:startDate,onChange:function onChange(date){return setStartDate(date);},minDate:minDate,id:\"picker\",dateFormat:\"MMMM dd\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:styles.formDuration,children:[/*#__PURE__*/_jsx(Field,{className:styles.inputTime,name:\"duration\",type:\"text\",placeholder:\"Duration (days)\"}),/*#__PURE__*/_jsx(ErrorMessage,{className:styles.errorTime,component:\"span\",name:\"duration\"})]})]}),/*#__PURE__*/_jsx(Button,{children:\"Done\"})]})})]});};export default CreateSprintForm;","map":{"version":3,"sources":["/home/bogdan/project-manager-app/src/components/createSprintForm/CreateSprintForm.jsx"],"names":["React","useState","DatePicker","Formik","Form","Field","ErrorMessage","Yup","Button","addSprint","useDispatch","useParams","styles","formSchema","object","shape","title","string","min","required","duration","number","typeError","positive","integer","CreateSprintForm","onClose","dispatch","params","Date","startDate","setStartDate","check","setCheck","minDate","onHandleSubmit","endDate","projectId","onCheck","event","prev","startToEndDay","inputDay","inputDuration","dateToBackend","setDate","getDate","Number","formContainer","titleForm","values","toBackEnd","getFullYear","getMonth","form","inputName","errorName","checkbox","checkbox__text","tabletContainer","dataPickerContainer","dataPickerLabel","dataPicker","date","formDuration","inputTime","errorTime"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useState } from 'react';\r\nimport DatePicker from 'react-datepicker';\r\nimport './datepicker.css';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport Button from '../../shared/button/Button';\r\nimport { addSprint } from '../../redux/sprints/sprints-operations';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\nimport styles from './CreateSprintForm.module.css';\r\n\r\nconst formSchema = Yup.object().shape({\r\n  title: Yup.string()\r\n    .min(3, 'Too short!')\r\n    .required('* Sprint name is a required field'),\r\n  duration: Yup.number()\r\n    .typeError('* Duration has to be a number')\r\n    .required('* Duration is a required field')\r\n    .positive('* Duration must be a positive number')\r\n    .integer('* Duration must be an integer'),\r\n});\r\n\r\nconst CreateSprintForm = ({ onClose }) => {\r\n  const dispatch = useDispatch();\r\n  const params = useParams();\r\n  const [startDate, setStartDate] = useState(new Date());\r\n  const [check, setCheck] = useState(false);\r\n\r\n  const minDate = check ? '' : new Date();\r\n\r\n  const onHandleSubmit = (title, endDate, duration) => {\r\n    addSprint(title, endDate, duration);\r\n    dispatch(addSprint({ title, endDate, duration }, params.projectId));\r\n  };\r\n\r\n  const onCheck = event => {\r\n    setCheck(prev => !prev);\r\n  };\r\n\r\n  const startToEndDay = (inputDay, inputDuration) => {\r\n    const dateToBackend = new Date(inputDay);\r\n    dateToBackend.setDate(dateToBackend.getDate() + Number(inputDuration) - 1);\r\n\r\n    return dateToBackend;\r\n  };\r\n\r\n  return (\r\n    <div className={styles.formContainer}>\r\n      <h2 className={styles.titleForm}>Create a sprint</h2>\r\n\r\n      <Formik\r\n        initialValues={{\r\n          title: '',\r\n          duration: '',\r\n        }}\r\n        validationSchema={formSchema}\r\n        onSubmit={async values => {\r\n          const { title, duration } = values;\r\n          const toBackEnd = startToEndDay(startDate, duration);\r\n\r\n          const endDate = `${toBackEnd.getFullYear()}-${\r\n            1 + toBackEnd.getMonth()\r\n          }-${toBackEnd.getDate()}`;\r\n          onHandleSubmit(title, endDate, duration);\r\n          onClose();\r\n        }}\r\n      >\r\n        <Form className={styles.form}>\r\n          <Field\r\n            className={styles.inputName}\r\n            name=\"title\"\r\n            type=\"text\"\r\n            placeholder=\"The name of the sprint\"\r\n          />\r\n          <ErrorMessage\r\n            className={styles.errorName}\r\n            component=\"span\"\r\n            name=\"title\"\r\n          />\r\n          <label className={styles.checkbox}>\r\n            <Field\r\n              type=\"checkbox\"\r\n              name=\"pastDays\"\r\n              checked={check}\r\n              onClick={onCheck}\r\n              placeholder=\"Includes past days\"\r\n            />\r\n            <div className={styles.checkbox__text}>Include previous days</div>\r\n          </label>\r\n          <div className={styles.tabletContainer}>\r\n            <div>\r\n              <label htmlFor=\"picker\" className={styles.dataPickerContainer}>\r\n                <span className={styles.dataPickerLabel}>Start date</span>\r\n              </label>\r\n\r\n              <DatePicker\r\n                className={styles.dataPicker}\r\n                selected={startDate}\r\n                onChange={date => setStartDate(date)}\r\n                minDate={minDate}\r\n                id=\"picker\"\r\n                dateFormat=\"MMMM dd\"\r\n              />\r\n            </div>\r\n\r\n            <div className={styles.formDuration}>\r\n              <Field\r\n                className={styles.inputTime}\r\n                name=\"duration\"\r\n                type=\"text\"\r\n                placeholder=\"Duration (days)\"\r\n              />\r\n\r\n              <ErrorMessage\r\n                className={styles.errorTime}\r\n                component=\"span\"\r\n                name=\"duration\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <Button>Done</Button>\r\n        </Form>\r\n      </Formik>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateSprintForm;\r\n"]},"metadata":{},"sourceType":"module"}