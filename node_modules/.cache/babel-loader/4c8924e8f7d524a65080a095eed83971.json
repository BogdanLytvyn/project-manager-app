{"ast":null,"code":"var _jsxFileName = \"/home/bogdan/project-manager-app/src/components/graph/Chart.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { getTasks } from '../../redux/tasks/task-selectors';\nimport styles from './Chart.module.css';\nimport { Line } from 'react-chartjs-2';\nimport _ from 'lodash';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LineDemo() {\n  _s();\n\n  const getAll = useSelector(getTasks);\n  const months = ['', 'JAN', 'FEB', 'MAR', 'APR', 'MAY', 'JUN', 'JUL', 'AUG', 'SEP', 'OCT', 'NOV', 'DEC'];\n  const sumRedLine = getAll.reduce(function (cnt, getAll) {\n    return cnt + getAll.hoursPlanned;\n  }, 0);\n\n  const otherDaysRedLine = () => {\n    let arr = [];\n    let sumAllRedLine = sumRedLine;\n\n    for (let i = 0; i <= getAll[0].hoursWastedPerDay.length; i++) {\n      sumAllRedLine -= sumRedLine / getAll[0].hoursWastedPerDay.length;\n      arr.push(sumAllRedLine);\n    }\n\n    return arr;\n  };\n\n  const otherDaysBlueLine = () => {\n    let arrBlueLine = [];\n\n    let multipleHoursWasted = _.flattenDeep(_.map(getAll, 'hoursWastedPerDay'));\n\n    multipleHoursWasted = _.groupBy(multipleHoursWasted, 'currentDay');\n    arrBlueLine = _.map(multipleHoursWasted, i => {\n      return _.sumBy(i, i => i.singleHoursWasted);\n    });\n    return arrBlueLine;\n  };\n\n  const labelsDate = getAll[0].hoursWastedPerDay.map(i => i.currentDay);\n  const result = labelsDate.map(day => {\n    const arr = day.split('-');\n    return `${arr[2]} ${months[arr[1].replace(/(^|\\s)0/g, '$1')]}`;\n  });\n  const data = {\n    labels: result,\n    datasets: [{\n      label: 'Actual remaining labor in hours',\n      fill: false,\n      lineTension: 0.1,\n      backgroundColor: 'rgba(75,192,192,0.4)',\n      borderColor: 'blue',\n      borderCapStyle: 'butt',\n      borderDash: [],\n      borderDashOffset: 0.0,\n      borderJoinStyle: 'miter',\n      pointBorderColor: 'rgba(75,192,192,1)',\n      pointBackgroundColor: '#fff',\n      pointBorderWidth: 1,\n      pointHoverRadius: 5,\n      pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n      pointHoverBorderColor: 'rgba(220,220,220,1)',\n      pointHoverBorderWidth: 2,\n      pointRadius: 3,\n      pointHitRadius: 10,\n      data: [sumRedLine, ...otherDaysBlueLine()]\n    }, {\n      label: 'Planned remaining work in hours',\n      fill: false,\n      lineTension: 0.1,\n      backgroundColor: 'rgba(150,150,0,0.4)',\n      borderColor: 'red',\n      borderCapStyle: 'butt',\n      borderDash: [],\n      borderDashOffset: 0.0,\n      borderJoinStyle: 'miter',\n      pointBorderColor: 'rgba(75,192,192,1)',\n      pointBackgroundColor: '#fff',\n      pointBorderWidth: 1,\n      pointHoverRadius: 5,\n      pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n      pointHoverBorderColor: 'rgba(220,220,220,1)',\n      pointHoverBorderWidth: 2,\n      pointRadius: 3,\n      pointHitRadius: 10,\n      data: [sumRedLine, ...otherDaysRedLine()]\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.chartContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Burndown Chart (Calendar Team)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.graphcontainer,\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        data: data // (windows.width = 1200 ? 900 : 500)\n        ,\n        width: 900,\n        height: 460,\n        options: {\n          maintainAspectRatio: false\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LineDemo, \"zJP1NoO9Nb9t26Gq9Q3lRsR9dvg=\", false, function () {\n  return [useSelector];\n});\n\n_c = LineDemo;\nexport default LineDemo;\n\nvar _c;\n\n$RefreshReg$(_c, \"LineDemo\");","map":{"version":3,"sources":["/home/bogdan/project-manager-app/src/components/graph/Chart.jsx"],"names":["React","useSelector","getTasks","styles","Line","_","LineDemo","getAll","months","sumRedLine","reduce","cnt","hoursPlanned","otherDaysRedLine","arr","sumAllRedLine","i","hoursWastedPerDay","length","push","otherDaysBlueLine","arrBlueLine","multipleHoursWasted","flattenDeep","map","groupBy","sumBy","singleHoursWasted","labelsDate","currentDay","result","day","split","replace","data","labels","datasets","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","chartContainer","graphcontainer","maintainAspectRatio"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { getTasks } from '../../redux/tasks/task-selectors';\nimport styles from './Chart.module.css';\nimport { Line } from 'react-chartjs-2';\nimport _ from 'lodash';\n\nfunction LineDemo() {\n  const getAll = useSelector(getTasks);\n  const months = [\n    '',\n    'JAN',\n    'FEB',\n    'MAR',\n    'APR',\n    'MAY',\n    'JUN',\n    'JUL',\n    'AUG',\n    'SEP',\n    'OCT',\n    'NOV',\n    'DEC',\n  ];\n\n  const sumRedLine = getAll.reduce(function (cnt, getAll) {\n    return cnt + getAll.hoursPlanned;\n  }, 0);\n\n  const otherDaysRedLine = () => {\n    let arr = [];\n    let sumAllRedLine = sumRedLine;\n\n    for (let i = 0; i <= getAll[0].hoursWastedPerDay.length; i++) {\n      sumAllRedLine -= sumRedLine / getAll[0].hoursWastedPerDay.length;\n      arr.push(sumAllRedLine);\n    }\n    return arr;\n  };\n\n  const otherDaysBlueLine = () => {\n    let arrBlueLine = [];\n    let multipleHoursWasted = _.flattenDeep(_.map(getAll, 'hoursWastedPerDay'));\n    multipleHoursWasted = _.groupBy(multipleHoursWasted, 'currentDay');\n    arrBlueLine = _.map(multipleHoursWasted, i => {\n      return _.sumBy(i, i => i.singleHoursWasted);\n    });\n    return arrBlueLine;\n  };\n\n  const labelsDate = getAll[0].hoursWastedPerDay.map(i => i.currentDay);\n\n  const result = labelsDate.map(day => {\n    const arr = day.split('-');\n    return `${arr[2]} ${months[arr[1].replace(/(^|\\s)0/g, '$1')]}`;\n  });\n  const data = {\n    labels: result,\n    datasets: [\n      {\n        label: 'Actual remaining labor in hours',\n        fill: false,\n        lineTension: 0.1,\n        backgroundColor: 'rgba(75,192,192,0.4)',\n        borderColor: 'blue',\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: 'miter',\n        pointBorderColor: 'rgba(75,192,192,1)',\n        pointBackgroundColor: '#fff',\n        pointBorderWidth: 1,\n        pointHoverRadius: 5,\n        pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n        pointHoverBorderColor: 'rgba(220,220,220,1)',\n        pointHoverBorderWidth: 2,\n        pointRadius: 3,\n        pointHitRadius: 10,\n        data: [sumRedLine, ...otherDaysBlueLine()],\n      },\n      {\n        label: 'Planned remaining work in hours',\n        fill: false,\n        lineTension: 0.1,\n        backgroundColor: 'rgba(150,150,0,0.4)',\n        borderColor: 'red',\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: 'miter',\n        pointBorderColor: 'rgba(75,192,192,1)',\n        pointBackgroundColor: '#fff',\n        pointBorderWidth: 1,\n        pointHoverRadius: 5,\n        pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n        pointHoverBorderColor: 'rgba(220,220,220,1)',\n        pointHoverBorderWidth: 2,\n        pointRadius: 3,\n        pointHitRadius: 10,\n        data: [sumRedLine, ...otherDaysRedLine()],\n      },\n    ],\n  };\n\n  return (\n    <div className={styles.chartContainer}>\n      <h2>Burndown Chart (Calendar Team)</h2>\n      <div className={styles.graphcontainer}>\n        <Line\n          data={data}\n          // (windows.width = 1200 ? 900 : 500)\n          width={900}\n          height={460}\n          options={{ maintainAspectRatio: false }}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default LineDemo;\n"]},"metadata":{},"sourceType":"module"}