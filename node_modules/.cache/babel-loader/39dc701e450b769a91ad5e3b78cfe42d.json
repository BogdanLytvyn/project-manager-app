{"ast":null,"code":"import axios from 'axios';\nimport { refreshTemplate } from '../projects/projects-operations.js';\nimport { fetchTaskRequest, fetchTaskSuccess, fetchTaskError, createTaskRequest, createTaskSuccess, createTaskError, deleteTaskRequest, deleteTaskSuccess, deleteTaskError, changeTaskRequest, changeTaskSuccess, changeTaskError } from './task-actions.js';\naxios.defaults.baseURL = 'https://sbc-backend.goit.global';\n\nconst fetchTasks = sprintId => async dispatch => {\n  dispatch(fetchTaskRequest());\n\n  try {\n    const {\n      data\n    } = await axios.get(`/task/${sprintId}`);\n    dispatch(fetchTaskSuccess(data.constructor.name === 'Array' ? data : []));\n  } catch (error) {\n    dispatch(fetchTaskError(error === null || error === void 0 ? void 0 : error.message));\n    refreshTemplate(() => fetchTasks(sprintId), error, dispatch);\n  }\n};\n\nconst createTask = (task, sprintId) => async dispatch => {\n  dispatch(createTaskRequest());\n\n  try {\n    const {\n      data\n    } = await axios.post(`/task/${sprintId}`, task);\n    dispatch(createTaskSuccess({ ...data,\n      _id: data.id\n    }));\n  } catch (error) {\n    dispatch(createTaskError(error === null || error === void 0 ? void 0 : error.message));\n    refreshTemplate(() => createTask(task, sprintId), error, dispatch);\n  }\n};\n\nconst deleteTask = taskId => async dispatch => {\n  dispatch(deleteTaskRequest());\n\n  try {\n    await axios.delete(`/task/${taskId}`);\n    dispatch(deleteTaskSuccess(taskId));\n  } catch (error) {\n    dispatch(deleteTaskError(error === null || error === void 0 ? void 0 : error.message));\n    refreshTemplate(() => deleteTask(taskId), error, dispatch);\n  }\n};\n\nconst changeTask = (hoursWasted, taskId, currentDay) => async dispatch => {\n  dispatch(changeTaskRequest());\n\n  try {\n    const {\n      data\n    } = await axios.patch(`/task/${taskId}`, {\n      date: currentDay,\n      hours: hoursWasted\n    });\n    dispatch(changeTaskSuccess({\n      currentDay: data.day.currentDay,\n      singleHoursWasted: data.day.singleHoursWasted,\n      hoursWasted: data.newWastedHours,\n      taskId\n    }));\n  } catch (error) {\n    dispatch(changeTaskError(error === null || error === void 0 ? void 0 : error.message));\n    refreshTemplate(() => changeTask(hoursWasted, taskId, currentDay), error, dispatch);\n  }\n};\n\nexport { fetchTasks, createTask, deleteTask, changeTask };","map":{"version":3,"sources":["/home/bogdan/project-manager-app/src/redux/tasks/task-operations.js"],"names":["axios","refreshTemplate","fetchTaskRequest","fetchTaskSuccess","fetchTaskError","createTaskRequest","createTaskSuccess","createTaskError","deleteTaskRequest","deleteTaskSuccess","deleteTaskError","changeTaskRequest","changeTaskSuccess","changeTaskError","defaults","baseURL","fetchTasks","sprintId","dispatch","data","get","constructor","name","error","message","createTask","task","post","_id","id","deleteTask","taskId","delete","changeTask","hoursWasted","currentDay","patch","date","hours","day","singleHoursWasted","newWastedHours"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { refreshTemplate } from '../projects/projects-operations.js';\nimport {\n  fetchTaskRequest,\n  fetchTaskSuccess,\n  fetchTaskError,\n  createTaskRequest,\n  createTaskSuccess,\n  createTaskError,\n  deleteTaskRequest,\n  deleteTaskSuccess,\n  deleteTaskError,\n  changeTaskRequest,\n  changeTaskSuccess,\n  changeTaskError,\n} from './task-actions.js';\n\naxios.defaults.baseURL = 'https://sbc-backend.goit.global';\n\nconst fetchTasks = sprintId => async dispatch => {\n  dispatch(fetchTaskRequest());\n  try {\n    const { data } = await axios.get(`/task/${sprintId}`);\n    dispatch(fetchTaskSuccess(data.constructor.name === 'Array' ? data : []));\n  } catch (error) {\n    dispatch(fetchTaskError(error?.message));\n    refreshTemplate(() => fetchTasks(sprintId), error, dispatch);\n  }\n};\n\nconst createTask = (task, sprintId) => async dispatch => {\n  dispatch(createTaskRequest());\n  try {\n    const { data } = await axios.post(`/task/${sprintId}`, task);\n    dispatch(createTaskSuccess({ ...data, _id: data.id }));\n  } catch (error) {\n    dispatch(createTaskError(error?.message));\n    refreshTemplate(() => createTask(task, sprintId), error, dispatch);\n  }\n};\n\nconst deleteTask = taskId => async dispatch => {\n  dispatch(deleteTaskRequest());\n  try {\n    await axios.delete(`/task/${taskId}`);\n    dispatch(deleteTaskSuccess(taskId));\n  } catch (error) {\n    dispatch(deleteTaskError(error?.message));\n    refreshTemplate(() => deleteTask(taskId), error, dispatch);\n  }\n};\n\nconst changeTask = (hoursWasted, taskId, currentDay) => async dispatch => {\n  dispatch(changeTaskRequest());\n  try {\n    const { data } = await axios.patch(`/task/${taskId}`, {\n      date: currentDay,\n      hours: hoursWasted,\n    });\n    dispatch(\n      changeTaskSuccess({\n        currentDay: data.day.currentDay,\n        singleHoursWasted: data.day.singleHoursWasted,\n        hoursWasted: data.newWastedHours,\n        taskId,\n      }),\n    );\n  } catch (error) {\n    dispatch(changeTaskError(error?.message));\n    refreshTemplate(\n      () => changeTask(hoursWasted, taskId, currentDay),\n      error,\n      dispatch,\n    );\n  }\n};\n\nexport { fetchTasks, createTask, deleteTask, changeTask };\n"]},"metadata":{},"sourceType":"module"}