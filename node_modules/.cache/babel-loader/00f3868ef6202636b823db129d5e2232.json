{"ast":null,"code":"import axios from 'axios';\nimport { registerRequest, registerError, loginRequest, loginSuccess, loginError, logoutRequest, logoutSuccess, logoutError, refreshRequest, refreshSuccess, refreshError } from './auth-actions';\naxios.defaults.baseURL = 'https://sbc-backend.goit.global';\nexport const token = {\n  token: '',\n\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n    this.token = `Bearer ${token}`;\n  },\n\n  get() {\n    return this.token;\n  },\n\n  refresh(refreshToken) {\n    this.token = refreshToken;\n    axios.defaults.headers.common.Authorization = refreshToken;\n  },\n\n  unset() {\n    axios.defaults.headers.common.Authorization = '';\n    this.token = '';\n  }\n\n};\n\nconst register = user => async dispatch => {\n  dispatch(registerRequest());\n\n  try {\n    await axios.post('/auth/register', user);\n    dispatch(logIn(user));\n  } catch (error) {\n    dispatch(registerError(error === null || error === void 0 ? void 0 : error.message));\n  }\n};\n\nconst logIn = user => async dispatch => {\n  dispatch(loginRequest());\n\n  try {\n    const response = await axios.post('/auth/login', user);\n    token.set(response.data.accessToken);\n    dispatch(loginSuccess({\n      accessToken: token.get(),\n      refreshToken: `Bearer ${response.data.refreshToken}`,\n      sid: response.data.sid,\n      email: response.data.data.email\n    }));\n  } catch (error) {\n    dispatch(loginError(error === null || error === void 0 ? void 0 : error.message));\n  }\n};\n\nconst logOut = () => async dispatch => {\n  dispatch(logoutRequest());\n\n  try {\n    await axios.post('/auth/logout');\n    token.unset();\n    dispatch(logoutSuccess());\n    window.location.reload();\n  } catch (error) {\n    dispatch(logoutError(error === null || error === void 0 ? void 0 : error.message));\n  }\n};\n\nconst refreshOperation = () => async (dispatch, getState) => {\n  const {\n    refreshToken,\n    sid\n  } = getState().auth.token;\n  token.refresh(refreshToken);\n  dispatch(refreshRequest());\n\n  try {\n    const response = await axios.post('auth/refresh', {\n      sid: sid\n    });\n    dispatch(refreshSuccess({\n      accessToken: `Bearer ${response.data.newAccessToken}`,\n      refreshToken: `Bearer ${response.data.newRefreshToken}`,\n      sid: response.data.newSid\n    }));\n  } catch (error) {\n    dispatch(refreshError(error === null || error === void 0 ? void 0 : error.message));\n    throw new Error(error === null || error === void 0 ? void 0 : error.message);\n  }\n};\n\nexport { register, logIn, logOut, refreshOperation };","map":{"version":3,"sources":["/home/bogdan/project-manager-app/src/redux/auth/auth-operations.js"],"names":["axios","registerRequest","registerError","loginRequest","loginSuccess","loginError","logoutRequest","logoutSuccess","logoutError","refreshRequest","refreshSuccess","refreshError","defaults","baseURL","token","set","headers","common","Authorization","get","refresh","refreshToken","unset","register","user","dispatch","post","logIn","error","message","response","data","accessToken","sid","email","logOut","window","location","reload","refreshOperation","getState","auth","newAccessToken","newRefreshToken","newSid","Error"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport {\n  registerRequest,\n  registerError,\n  loginRequest,\n  loginSuccess,\n  loginError,\n  logoutRequest,\n  logoutSuccess,\n  logoutError,\n  refreshRequest,\n  refreshSuccess,\n  refreshError,\n} from './auth-actions';\n\naxios.defaults.baseURL = 'https://sbc-backend.goit.global';\n\nexport const token = {\n  token: '',\n\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n    this.token = `Bearer ${token}`;\n  },\n  get() {\n    return this.token;\n  },\n  refresh(refreshToken) {\n    this.token = refreshToken;\n    axios.defaults.headers.common.Authorization = refreshToken;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = '';\n    this.token = '';\n  },\n};\n\nconst register = user => async dispatch => {\n  dispatch(registerRequest());\n  try {\n    await axios.post('/auth/register', user);\n    dispatch(logIn(user));\n  } catch (error) {\n    dispatch(registerError(error?.message));\n  }\n};\n\nconst logIn = user => async dispatch => {\n  dispatch(loginRequest());\n  try {\n    const response = await axios.post('/auth/login', user);\n    token.set(response.data.accessToken);\n    dispatch(\n      loginSuccess({\n        accessToken: token.get(),\n        refreshToken: `Bearer ${response.data.refreshToken}`,\n        sid: response.data.sid,\n        email: response.data.data.email,\n      }),\n    );\n  } catch (error) {\n    dispatch(loginError(error?.message));\n  }\n};\n\nconst logOut = () => async dispatch => {\n  dispatch(logoutRequest());\n  try {\n    await axios.post('/auth/logout');\n    token.unset();\n    dispatch(logoutSuccess());\n    window.location.reload();\n  } catch (error) {\n    dispatch(logoutError(error?.message));\n  }\n};\n\nconst refreshOperation = () => async (dispatch, getState) => {\n  const { refreshToken, sid } = getState().auth.token;\n  token.refresh(refreshToken);\n  dispatch(refreshRequest());\n\n  try {\n    const response = await axios.post('auth/refresh', { sid: sid });\n\n    dispatch(\n      refreshSuccess({\n        accessToken: `Bearer ${response.data.newAccessToken}`,\n        refreshToken: `Bearer ${response.data.newRefreshToken}`,\n        sid: response.data.newSid,\n      }),\n    );\n  } catch (error) {\n    dispatch(refreshError(error?.message));\n\n    throw new Error(error?.message);\n  }\n};\nexport { register, logIn, logOut, refreshOperation };\n"]},"metadata":{},"sourceType":"module"}