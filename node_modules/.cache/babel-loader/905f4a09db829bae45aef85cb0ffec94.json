{"ast":null,"code":"import axios from 'axios';\nimport { refreshOperation, token } from '../auth/auth-operations';\nimport { createProjectError, createProjectRequest, createProjectSuccess, projectsSuccess, deleteProjectRequest, deleteProjectSuccess, deleteProjectError, editProjectTitleRequest, editProjectTitleSuccess, editProjectTitleError, projectsRequest, addMemberError, addMemberRequest, addMemberSuccess, projectsError } from './projects-actions';\nexport const refreshTemplate = async (callback, error, dispatch) => {\n  var _error$response, _error$response2;\n\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401 || ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) === 404) {\n    try {\n      await dispatch(refreshOperation());\n      dispatch(callback());\n    } catch (error) {\n      token.unset();\n    }\n  }\n};\n\nconst getProjects = () => async dispatch => {\n  dispatch(projectsRequest());\n\n  try {\n    const response = await axios.get('https://sbc-backend.goit.global/project');\n    dispatch(projectsSuccess(response.data.constructor.name === 'Array' ? response.data : []));\n  } catch (error) {\n    dispatch(projectsError(error === null || error === void 0 ? void 0 : error.message));\n    refreshTemplate(getProjects, error, dispatch);\n  }\n};\n\nconst createProject = project => async dispatch => {\n  dispatch(createProjectRequest());\n\n  try {\n    const {\n      data\n    } = await axios.post('https://sbc-backend.goit.global/project', project);\n    dispatch(createProjectSuccess({ ...data,\n      _id: data.id\n    }));\n  } catch (error) {\n    dispatch(createProjectError(error === null || error === void 0 ? void 0 : error.message));\n    refreshTemplate(() => createProject(project), error, dispatch);\n  }\n};\n\nconst deleteProject = projectId => async dispatch => {\n  const newID = projectId;\n  dispatch(deleteProjectRequest());\n\n  try {\n    axios.delete(`https://sbc-backend.goit.global/project/${newID}`);\n    dispatch(deleteProjectSuccess(newID));\n  } catch (error) {\n    dispatch(deleteProjectError(error === null || error === void 0 ? void 0 : error.message));\n    refreshTemplate(() => deleteProject(projectId), error, dispatch);\n  }\n};\n\naxios.defaults.baseURL = 'https://sbc-backend.goit.global';\n\nconst addMember = (email, projectId) => async dispatch => {\n  dispatch(addMemberRequest());\n\n  try {\n    const {\n      data\n    } = await axios.patch(`/project/contributor/${projectId}`, email);\n    dispatch(addMemberSuccess({\n      members: data.newMembers,\n      projectId\n    }));\n  } catch (error) {\n    dispatch(addMemberError(error === null || error === void 0 ? void 0 : error.message));\n    refreshTemplate(() => addMember(email, projectId), error, dispatch);\n  }\n};\n\nconst editTitle = (projectId, title) => async dispatch => {\n  dispatch(editProjectTitleRequest());\n\n  try {\n    await axios.patch(`/project/title/${projectId}`, {\n      title\n    });\n    dispatch(editProjectTitleSuccess({\n      projectId,\n      title\n    }));\n  } catch (error) {\n    dispatch(editProjectTitleError(error === null || error === void 0 ? void 0 : error.message));\n    refreshTemplate(() => editTitle(projectId, title), error, dispatch);\n  }\n};\n\nexport { getProjects, createProject, deleteProject, editTitle, addMember };","map":{"version":3,"sources":["/home/bogdan/project-manager-app/src/redux/projects/projects-operations.js"],"names":["axios","refreshOperation","token","createProjectError","createProjectRequest","createProjectSuccess","projectsSuccess","deleteProjectRequest","deleteProjectSuccess","deleteProjectError","editProjectTitleRequest","editProjectTitleSuccess","editProjectTitleError","projectsRequest","addMemberError","addMemberRequest","addMemberSuccess","projectsError","refreshTemplate","callback","error","dispatch","response","status","unset","getProjects","get","data","constructor","name","message","createProject","project","post","_id","id","deleteProject","projectId","newID","delete","defaults","baseURL","addMember","email","patch","members","newMembers","editTitle","title"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,EAA2BC,KAA3B,QAAwC,yBAAxC;AACA,SACEC,kBADF,EAEEC,oBAFF,EAGEC,oBAHF,EAIEC,eAJF,EAKEC,oBALF,EAMEC,oBANF,EAOEC,kBAPF,EAQEC,uBARF,EASEC,uBATF,EAUEC,qBAVF,EAWEC,eAXF,EAYEC,cAZF,EAaEC,gBAbF,EAcEC,gBAdF,EAeEC,aAfF,QAgBO,oBAhBP;AAkBA,OAAO,MAAMC,eAAe,GAAG,OAAOC,QAAP,EAAiBC,KAAjB,EAAwBC,QAAxB,KAAqC;AAAA;;AAClE,MAAI,oBAAAD,KAAK,CAACE,QAAN,oEAAgBC,MAAhB,MAA2B,GAA3B,IAAkC,qBAAAH,KAAK,CAACE,QAAN,sEAAgBC,MAAhB,MAA2B,GAAjE,EAAsE;AACpE,QAAI;AACF,YAAMF,QAAQ,CAACpB,gBAAgB,EAAjB,CAAd;AACAoB,MAAAA,QAAQ,CAACF,QAAQ,EAAT,CAAR;AACD,KAHD,CAGE,OAAOC,KAAP,EAAc;AACdlB,MAAAA,KAAK,CAACsB,KAAN;AACD;AACF;AACF,CATM;;AAWP,MAAMC,WAAW,GAAG,MAAM,MAAMJ,QAAN,IAAkB;AAC1CA,EAAAA,QAAQ,CAACR,eAAe,EAAhB,CAAR;;AACA,MAAI;AACF,UAAMS,QAAQ,GAAG,MAAMtB,KAAK,CAAC0B,GAAN,CAAU,yCAAV,CAAvB;AAEAL,IAAAA,QAAQ,CACNf,eAAe,CACbgB,QAAQ,CAACK,IAAT,CAAcC,WAAd,CAA0BC,IAA1B,KAAmC,OAAnC,GAA6CP,QAAQ,CAACK,IAAtD,GAA6D,EADhD,CADT,CAAR;AAKD,GARD,CAQE,OAAOP,KAAP,EAAc;AACdC,IAAAA,QAAQ,CAACJ,aAAa,CAACG,KAAD,aAACA,KAAD,uBAACA,KAAK,CAAEU,OAAR,CAAd,CAAR;AACAZ,IAAAA,eAAe,CAACO,WAAD,EAAcL,KAAd,EAAqBC,QAArB,CAAf;AACD;AACF,CAdD;;AAgBA,MAAMU,aAAa,GAAGC,OAAO,IAAI,MAAMX,QAAN,IAAkB;AACjDA,EAAAA,QAAQ,CAACjB,oBAAoB,EAArB,CAAR;;AAEA,MAAI;AACF,UAAM;AAAEuB,MAAAA;AAAF,QAAW,MAAM3B,KAAK,CAACiC,IAAN,CACrB,yCADqB,EAErBD,OAFqB,CAAvB;AAIAX,IAAAA,QAAQ,CAAChB,oBAAoB,CAAC,EAAE,GAAGsB,IAAL;AAAWO,MAAAA,GAAG,EAAEP,IAAI,CAACQ;AAArB,KAAD,CAArB,CAAR;AACD,GAND,CAME,OAAOf,KAAP,EAAc;AACdC,IAAAA,QAAQ,CAAClB,kBAAkB,CAACiB,KAAD,aAACA,KAAD,uBAACA,KAAK,CAAEU,OAAR,CAAnB,CAAR;AACAZ,IAAAA,eAAe,CAAC,MAAMa,aAAa,CAACC,OAAD,CAApB,EAA+BZ,KAA/B,EAAsCC,QAAtC,CAAf;AACD;AACF,CAbD;;AAeA,MAAMe,aAAa,GAAGC,SAAS,IAAI,MAAMhB,QAAN,IAAkB;AACnD,QAAMiB,KAAK,GAAGD,SAAd;AACAhB,EAAAA,QAAQ,CAACd,oBAAoB,EAArB,CAAR;;AAEA,MAAI;AACFP,IAAAA,KAAK,CAACuC,MAAN,CAAc,2CAA0CD,KAAM,EAA9D;AAEAjB,IAAAA,QAAQ,CAACb,oBAAoB,CAAC8B,KAAD,CAArB,CAAR;AACD,GAJD,CAIE,OAAOlB,KAAP,EAAc;AACdC,IAAAA,QAAQ,CAACZ,kBAAkB,CAACW,KAAD,aAACA,KAAD,uBAACA,KAAK,CAAEU,OAAR,CAAnB,CAAR;AACAZ,IAAAA,eAAe,CAAC,MAAMkB,aAAa,CAACC,SAAD,CAApB,EAAiCjB,KAAjC,EAAwCC,QAAxC,CAAf;AACD;AACF,CAZD;;AAcArB,KAAK,CAACwC,QAAN,CAAeC,OAAf,GAAyB,iCAAzB;;AAEA,MAAMC,SAAS,GAAG,CAACC,KAAD,EAAQN,SAAR,KAAsB,MAAMhB,QAAN,IAAkB;AACxDA,EAAAA,QAAQ,CAACN,gBAAgB,EAAjB,CAAR;;AACA,MAAI;AACF,UAAM;AAAEY,MAAAA;AAAF,QAAW,MAAM3B,KAAK,CAAC4C,KAAN,CACpB,wBAAuBP,SAAU,EADb,EAErBM,KAFqB,CAAvB;AAIAtB,IAAAA,QAAQ,CACNL,gBAAgB,CAAC;AACf6B,MAAAA,OAAO,EAAElB,IAAI,CAACmB,UADC;AAEfT,MAAAA;AAFe,KAAD,CADV,CAAR;AAMD,GAXD,CAWE,OAAOjB,KAAP,EAAc;AACdC,IAAAA,QAAQ,CAACP,cAAc,CAACM,KAAD,aAACA,KAAD,uBAACA,KAAK,CAAEU,OAAR,CAAf,CAAR;AACAZ,IAAAA,eAAe,CAAC,MAAMwB,SAAS,CAACC,KAAD,EAAQN,SAAR,CAAhB,EAAoCjB,KAApC,EAA2CC,QAA3C,CAAf;AACD;AACF,CAjBD;;AAmBA,MAAM0B,SAAS,GAAG,CAACV,SAAD,EAAYW,KAAZ,KAAsB,MAAM3B,QAAN,IAAkB;AACxDA,EAAAA,QAAQ,CAACX,uBAAuB,EAAxB,CAAR;;AAEA,MAAI;AACF,UAAMV,KAAK,CAAC4C,KAAN,CAAa,kBAAiBP,SAAU,EAAxC,EAA2C;AAAEW,MAAAA;AAAF,KAA3C,CAAN;AACA3B,IAAAA,QAAQ,CAACV,uBAAuB,CAAC;AAAE0B,MAAAA,SAAF;AAAaW,MAAAA;AAAb,KAAD,CAAxB,CAAR;AACD,GAHD,CAGE,OAAO5B,KAAP,EAAc;AACdC,IAAAA,QAAQ,CAACT,qBAAqB,CAACQ,KAAD,aAACA,KAAD,uBAACA,KAAK,CAAEU,OAAR,CAAtB,CAAR;AACAZ,IAAAA,eAAe,CAAC,MAAM6B,SAAS,CAACV,SAAD,EAAYW,KAAZ,CAAhB,EAAoC5B,KAApC,EAA2CC,QAA3C,CAAf;AACD;AACF,CAVD;;AAYA,SAASI,WAAT,EAAsBM,aAAtB,EAAqCK,aAArC,EAAoDW,SAApD,EAA+DL,SAA/D","sourcesContent":["import axios from 'axios';\nimport { refreshOperation, token } from '../auth/auth-operations';\nimport {\n  createProjectError,\n  createProjectRequest,\n  createProjectSuccess,\n  projectsSuccess,\n  deleteProjectRequest,\n  deleteProjectSuccess,\n  deleteProjectError,\n  editProjectTitleRequest,\n  editProjectTitleSuccess,\n  editProjectTitleError,\n  projectsRequest,\n  addMemberError,\n  addMemberRequest,\n  addMemberSuccess,\n  projectsError,\n} from './projects-actions';\n\nexport const refreshTemplate = async (callback, error, dispatch) => {\n  if (error.response?.status === 401 || error.response?.status === 404) {\n    try {\n      await dispatch(refreshOperation());\n      dispatch(callback());\n    } catch (error) {\n      token.unset();\n    }\n  }\n};\n\nconst getProjects = () => async dispatch => {\n  dispatch(projectsRequest());\n  try {\n    const response = await axios.get('https://sbc-backend.goit.global/project');\n\n    dispatch(\n      projectsSuccess(\n        response.data.constructor.name === 'Array' ? response.data : [],\n      ),\n    );\n  } catch (error) {\n    dispatch(projectsError(error?.message));\n    refreshTemplate(getProjects, error, dispatch);\n  }\n};\n\nconst createProject = project => async dispatch => {\n  dispatch(createProjectRequest());\n\n  try {\n    const { data } = await axios.post(\n      'https://sbc-backend.goit.global/project',\n      project,\n    );\n    dispatch(createProjectSuccess({ ...data, _id: data.id }));\n  } catch (error) {\n    dispatch(createProjectError(error?.message));\n    refreshTemplate(() => createProject(project), error, dispatch);\n  }\n};\n\nconst deleteProject = projectId => async dispatch => {\n  const newID = projectId;\n  dispatch(deleteProjectRequest());\n\n  try {\n    axios.delete(`https://sbc-backend.goit.global/project/${newID}`);\n\n    dispatch(deleteProjectSuccess(newID));\n  } catch (error) {\n    dispatch(deleteProjectError(error?.message));\n    refreshTemplate(() => deleteProject(projectId), error, dispatch);\n  }\n};\n\naxios.defaults.baseURL = 'https://sbc-backend.goit.global';\n\nconst addMember = (email, projectId) => async dispatch => {\n  dispatch(addMemberRequest());\n  try {\n    const { data } = await axios.patch(\n      `/project/contributor/${projectId}`,\n      email,\n    );\n    dispatch(\n      addMemberSuccess({\n        members: data.newMembers,\n        projectId,\n      }),\n    );\n  } catch (error) {\n    dispatch(addMemberError(error?.message));\n    refreshTemplate(() => addMember(email, projectId), error, dispatch);\n  }\n};\n\nconst editTitle = (projectId, title) => async dispatch => {\n  dispatch(editProjectTitleRequest());\n\n  try {\n    await axios.patch(`/project/title/${projectId}`, { title });\n    dispatch(editProjectTitleSuccess({ projectId, title }));\n  } catch (error) {\n    dispatch(editProjectTitleError(error?.message));\n    refreshTemplate(() => editTitle(projectId, title), error, dispatch);\n  }\n};\n\nexport { getProjects, createProject, deleteProject, editTitle, addMember };\n"]},"metadata":{},"sourceType":"module"}