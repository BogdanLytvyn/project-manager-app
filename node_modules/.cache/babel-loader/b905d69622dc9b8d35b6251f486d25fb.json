{"ast":null,"code":"import React from'react';import{useDispatch}from'react-redux';import styles from'./ProjectForm.module.css';import{Formik,Form,Field,ErrorMessage}from'formik';import*as Yup from'yup';import{createProject}from'../../redux/projects/projects-operations';import Button from'../../shared/button/Button';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var formSchema=Yup.object().shape({title:Yup.string().min(3,'Too short!').required('* Project Name is a required field'),description:Yup.string().min(4,'Too short!').required('* Description is a required field')});var ProjectForm=function ProjectForm(_ref){var onClose=_ref.onClose;var dispatch=useDispatch();return/*#__PURE__*/_jsxs(\"div\",{className:styles.formContainer,children:[/*#__PURE__*/_jsx(\"h2\",{className:styles.titleForm,children:\"Create new project\"}),/*#__PURE__*/_jsx(Formik,{initialValues:{title:'',description:''},validationSchema:formSchema,onSubmit:function onSubmit(values){createProject(values);dispatch(createProject(values));onClose();},children:/*#__PURE__*/_jsxs(Form,{className:styles.form,children:[/*#__PURE__*/_jsx(Field,{className:styles.inputName,name:\"title\",type:\"text\",placeholder:\"Project name\"}),/*#__PURE__*/_jsx(ErrorMessage,{className:styles.errorName,component:\"span\",name:\"title\"}),/*#__PURE__*/_jsx(Field,{className:styles.inputDescription,name:\"description\",type:\"text\",placeholder:\"Project description\"}),/*#__PURE__*/_jsx(ErrorMessage,{className:styles.errorDescription,component:\"span\",name:\"description\"}),/*#__PURE__*/_jsx(Button,{type:\"submit\",children:\"Done\"})]})})]});};export default ProjectForm;","map":{"version":3,"sources":["/home/bogdan/project-manager-app/src/components/projectForm/ProjectForm.jsx"],"names":["React","useDispatch","styles","Formik","Form","Field","ErrorMessage","Yup","createProject","Button","formSchema","object","shape","title","string","min","required","description","ProjectForm","onClose","dispatch","formContainer","titleForm","values","form","inputName","errorName","inputDescription","errorDescription"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,WAAT,KAA4B,aAA5B,CACA,MAAOC,CAAAA,MAAP,KAAmB,0BAAnB,CACA,OAASC,MAAT,CAAiBC,IAAjB,CAAuBC,KAAvB,CAA8BC,YAA9B,KAAkD,QAAlD,CACA,MAAO,GAAKC,CAAAA,GAAZ,KAAqB,KAArB,CACA,OAASC,aAAT,KAA8B,0CAA9B,CACA,MAAOC,CAAAA,MAAP,KAAmB,4BAAnB,C,wFAEA,GAAMC,CAAAA,UAAU,CAAGH,GAAG,CAACI,MAAJ,GAAaC,KAAb,CAAmB,CACpCC,KAAK,CAAEN,GAAG,CAACO,MAAJ,GACJC,GADI,CACA,CADA,CACG,YADH,EAEJC,QAFI,CAEK,oCAFL,CAD6B,CAIpCC,WAAW,CAAEV,GAAG,CAACO,MAAJ,GACVC,GADU,CACN,CADM,CACH,YADG,EAEVC,QAFU,CAED,mCAFC,CAJuB,CAAnB,CAAnB,CASA,GAAME,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,MAAiB,IAAdC,CAAAA,OAAc,MAAdA,OAAc,CACnC,GAAMC,CAAAA,QAAQ,CAAGnB,WAAW,EAA5B,CAEA,mBACE,aAAK,SAAS,CAAEC,MAAM,CAACmB,aAAvB,wBACE,WAAI,SAAS,CAAEnB,MAAM,CAACoB,SAAtB,gCADF,cAEE,KAAC,MAAD,EACE,aAAa,CAAE,CACbT,KAAK,CAAE,EADM,CAEbI,WAAW,CAAE,EAFA,CADjB,CAKE,gBAAgB,CAAEP,UALpB,CAME,QAAQ,CAAE,kBAAAa,MAAM,CAAI,CAClBf,aAAa,CAACe,MAAD,CAAb,CACAH,QAAQ,CAACZ,aAAa,CAACe,MAAD,CAAd,CAAR,CACAJ,OAAO,GACR,CAVH,uBAYE,MAAC,IAAD,EAAM,SAAS,CAAEjB,MAAM,CAACsB,IAAxB,wBACE,KAAC,KAAD,EACE,SAAS,CAAEtB,MAAM,CAACuB,SADpB,CAEE,IAAI,CAAC,OAFP,CAGE,IAAI,CAAC,MAHP,CAIE,WAAW,CAAC,cAJd,EADF,cAOE,KAAC,YAAD,EACE,SAAS,CAAEvB,MAAM,CAACwB,SADpB,CAEE,SAAS,CAAC,MAFZ,CAGE,IAAI,CAAC,OAHP,EAPF,cAaE,KAAC,KAAD,EACE,SAAS,CAAExB,MAAM,CAACyB,gBADpB,CAEE,IAAI,CAAC,aAFP,CAGE,IAAI,CAAC,MAHP,CAIE,WAAW,CAAC,qBAJd,EAbF,cAoBE,KAAC,YAAD,EACE,SAAS,CAAEzB,MAAM,CAAC0B,gBADpB,CAEE,SAAS,CAAC,MAFZ,CAGE,IAAI,CAAC,aAHP,EApBF,cAyBE,KAAC,MAAD,EAAQ,IAAI,CAAC,QAAb,kBAzBF,GAZF,EAFF,GADF,CA6CD,CAhDD,CAkDA,cAAeV,CAAAA,WAAf","sourcesContent":["import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport styles from './ProjectForm.module.css';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { createProject } from '../../redux/projects/projects-operations';\nimport Button from '../../shared/button/Button';\n\nconst formSchema = Yup.object().shape({\n  title: Yup.string()\n    .min(3, 'Too short!')\n    .required('* Project Name is a required field'),\n  description: Yup.string()\n    .min(4, 'Too short!')\n    .required('* Description is a required field'),\n});\n\nconst ProjectForm = ({ onClose }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <div className={styles.formContainer}>\n      <h2 className={styles.titleForm}>Create new project</h2>\n      <Formik\n        initialValues={{\n          title: '',\n          description: '',\n        }}\n        validationSchema={formSchema}\n        onSubmit={values => {\n          createProject(values);\n          dispatch(createProject(values));\n          onClose();\n        }}\n      >\n        <Form className={styles.form}>\n          <Field\n            className={styles.inputName}\n            name=\"title\"\n            type=\"text\"\n            placeholder=\"Project name\"\n          />\n          <ErrorMessage\n            className={styles.errorName}\n            component=\"span\"\n            name=\"title\"\n          />\n\n          <Field\n            className={styles.inputDescription}\n            name=\"description\"\n            type=\"text\"\n            placeholder=\"Project description\"\n          />\n\n          <ErrorMessage\n            className={styles.errorDescription}\n            component=\"span\"\n            name=\"description\"\n          />\n          <Button type=\"submit\">Done</Button>\n        </Form>\n      </Formik>\n    </div>\n  );\n};\n\nexport default ProjectForm;\n"]},"metadata":{},"sourceType":"module"}