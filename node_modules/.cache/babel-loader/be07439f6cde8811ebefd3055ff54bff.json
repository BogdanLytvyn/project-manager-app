{"ast":null,"code":"var _jsxFileName = \"/home/bogdan/project-manager-app/src/components/titleEditor/AutosizeInput.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types'; // import style from './TitleEditor.module.css';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst sizerStyle = {\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  visibility: 'hidden',\n  height: 0,\n  overflow: 'scroll',\n  whiteSpace: 'pre'\n};\nconst INPUT_PROPS_BLACKLIST = ['extraWidth', 'injectStyles', 'inputClassName', 'inputRef', 'inputStyle', 'minWidth', 'onAutosize', 'placeholderIsMinWidth'];\n\nconst cleanInputProps = inputProps => {\n  INPUT_PROPS_BLACKLIST.forEach(field => delete inputProps[field]);\n  return inputProps;\n};\n\nconst copyStyles = (styles, node) => {\n  node.style.fontSize = styles.fontSize;\n  node.style.fontFamily = styles.fontFamily;\n  node.style.fontWeight = styles.fontWeight;\n  node.style.fontStyle = styles.fontStyle;\n  node.style.letterSpacing = styles.letterSpacing;\n  node.style.textTransform = styles.textTransform;\n};\n\nconst isIE = typeof window !== 'undefined' && window.navigator ? /MSIE |Trident\\/|Edge\\//.test(window.navigator.userAgent) : false;\n\nconst generateId = () => {\n  // we only need an auto-generated ID for stylesheet injection, which is only\n  // used for IE. so if the browser is not IE, this should return undefined.\n  return isIE ? '_' + Math.random().toString(36).substr(2, 12) : undefined;\n};\n\nclass AutosizeInput extends Component {\n  static getDerivedStateFromProps(props, state) {\n    const {\n      id\n    } = props;\n    return id !== state.prevId ? {\n      inputId: id || generateId(),\n      prevId: id\n    } : null;\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.inputRef = el => {\n      this.input = el;\n\n      if (typeof this.props.inputRef === 'function') {\n        this.props.inputRef(el);\n      }\n    };\n\n    this.placeHolderSizerRef = el => {\n      this.placeHolderSizer = el;\n    };\n\n    this.sizerRef = el => {\n      this.sizer = el;\n    };\n\n    this.state = {\n      inputWidth: props.minWidth,\n      inputId: props.id || generateId(),\n      prevId: props.id\n    };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n    this.copyInputStyles();\n    this.updateInputWidth();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.inputWidth !== this.state.inputWidth) {\n      if (typeof this.props.onAutosize === 'function') {\n        this.props.onAutosize(this.state.inputWidth);\n      }\n    }\n\n    this.updateInputWidth();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  copyInputStyles() {\n    if (!this.mounted || !window.getComputedStyle) {\n      return;\n    }\n\n    const inputStyles = this.input && window.getComputedStyle(this.input);\n\n    if (!inputStyles) {\n      return;\n    }\n\n    copyStyles(inputStyles, this.sizer);\n\n    if (this.placeHolderSizer) {\n      copyStyles(inputStyles, this.placeHolderSizer);\n    }\n  }\n\n  updateInputWidth() {\n    if (!this.mounted || !this.sizer || typeof this.sizer.scrollWidth === 'undefined') {\n      return;\n    }\n\n    let newInputWidth;\n\n    if (this.props.placeholder && (!this.props.value || this.props.value && this.props.placeholderIsMinWidth)) {\n      newInputWidth = Math.max(this.sizer.scrollWidth, this.placeHolderSizer.scrollWidth) + 2;\n    } else {\n      newInputWidth = this.sizer.scrollWidth + 2;\n    } // add extraWidth to the detected width. for number types, this defaults to 16 to allow for the stepper UI\n\n\n    const extraWidth = this.props.type === 'number' && this.props.extraWidth === undefined ? 16 : parseInt(this.props.extraWidth) || 0;\n    newInputWidth += extraWidth;\n\n    if (newInputWidth < this.props.minWidth) {\n      newInputWidth = this.props.minWidth;\n    }\n\n    if (newInputWidth !== this.state.inputWidth) {\n      this.setState({\n        inputWidth: newInputWidth\n      });\n    }\n  }\n\n  getInput() {\n    return this.input;\n  }\n\n  focus() {\n    this.input.focus();\n  }\n\n  blur() {\n    this.input.blur();\n  }\n\n  select() {\n    this.input.select();\n  }\n\n  renderStyles() {\n    // this method injects styles to hide IE's clear indicator, which messes\n    // with input size detection. the stylesheet is only injected when the\n    // browser is IE, and can also be disabled by the `injectStyles` prop.\n    const {\n      injectStyles\n    } = this.props;\n    return isIE && injectStyles ? /*#__PURE__*/_jsxDEV(\"style\", {\n      dangerouslySetInnerHTML: {\n        __html: `input#${this.state.inputId}::-ms-clear {display: none;}`\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this) : null;\n  }\n\n  render() {\n    const sizerValue = [this.props.defaultValue, this.props.value, ''].reduce((previousValue, currentValue) => {\n      if (previousValue !== null && previousValue !== undefined) {\n        return previousValue;\n      }\n\n      return currentValue;\n    });\n    const wrapperStyle = { ...this.props.style\n    };\n    if (!wrapperStyle.display) wrapperStyle.display = 'inline-block';\n    const inputStyle = {\n      boxSizing: 'content-box',\n      width: `${this.state.inputWidth}px`,\n      fontSize: '36px',\n      fontFamily: 'Montserrat',\n      fontWeight: '500',\n      lineHeight: '44px',\n      letterSpacing: '0.04em',\n      color: '#181c27',\n      border: 'none',\n      outline: 'none'\n    };\n    const { ...inputProps\n    } = this.props;\n    cleanInputProps(inputProps);\n    inputProps.className = this.props.inputClassName;\n    inputProps.id = this.state.inputId;\n    inputProps.style = inputStyle;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: this.props.className,\n      style: wrapperStyle,\n      children: [this.renderStyles(), /*#__PURE__*/_jsxDEV(\"input\", { ...inputProps,\n        ref: this.inputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: this.sizerRef,\n        style: sizerStyle,\n        children: sizerValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this), this.props.placeholder ? /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: this.placeHolderSizerRef,\n        style: sizerStyle,\n        children: this.props.placeholder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nAutosizeInput.propTypes = {\n  className: PropTypes.string,\n  // className for the outer element\n  defaultValue: PropTypes.any,\n  // default field value\n  extraWidth: PropTypes.oneOfType([// additional width for input element\n  PropTypes.number, PropTypes.string]),\n  id: PropTypes.string,\n  // id to use for the input, can be set for consistent snapshots\n  injectStyles: PropTypes.bool,\n  // inject the custom stylesheet to hide clear UI, defaults to true\n  inputClassName: PropTypes.string,\n  // className for the input element\n  inputRef: PropTypes.func,\n  // ref callback for the input element\n  inputStyle: PropTypes.object,\n  // css styles for the input element\n  minWidth: PropTypes.oneOfType([// minimum width for input element\n  PropTypes.number, PropTypes.string]),\n  onAutosize: PropTypes.func,\n  // onAutosize handler: function(newWidth) {}\n  onChange: PropTypes.func,\n  // onChange handler: function(event) {}\n  placeholder: PropTypes.string,\n  // placeholder text\n  placeholderIsMinWidth: PropTypes.bool,\n  // don't collapse size to less than the placeholder\n  style: PropTypes.object,\n  // css styles for the outer element\n  value: PropTypes.any // field value\n\n};\nAutosizeInput.defaultProps = {\n  minWidth: 1,\n  injectStyles: true\n};\nexport default AutosizeInput;","map":{"version":3,"sources":["/home/bogdan/project-manager-app/src/components/titleEditor/AutosizeInput.js"],"names":["React","Component","PropTypes","sizerStyle","position","top","left","visibility","height","overflow","whiteSpace","INPUT_PROPS_BLACKLIST","cleanInputProps","inputProps","forEach","field","copyStyles","styles","node","style","fontSize","fontFamily","fontWeight","fontStyle","letterSpacing","textTransform","isIE","window","navigator","test","userAgent","generateId","Math","random","toString","substr","undefined","AutosizeInput","getDerivedStateFromProps","props","state","id","prevId","inputId","constructor","inputRef","el","input","placeHolderSizerRef","placeHolderSizer","sizerRef","sizer","inputWidth","minWidth","componentDidMount","mounted","copyInputStyles","updateInputWidth","componentDidUpdate","prevProps","prevState","onAutosize","componentWillUnmount","getComputedStyle","inputStyles","scrollWidth","newInputWidth","placeholder","value","placeholderIsMinWidth","max","extraWidth","type","parseInt","setState","getInput","focus","blur","select","renderStyles","injectStyles","__html","render","sizerValue","defaultValue","reduce","previousValue","currentValue","wrapperStyle","display","inputStyle","boxSizing","width","lineHeight","color","border","outline","className","inputClassName","propTypes","string","any","oneOfType","number","bool","func","object","onChange","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n// import style from './TitleEditor.module.css';\n\nconst sizerStyle = {\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  visibility: 'hidden',\n  height: 0,\n  overflow: 'scroll',\n  whiteSpace: 'pre',\n};\n\nconst INPUT_PROPS_BLACKLIST = [\n  'extraWidth',\n  'injectStyles',\n  'inputClassName',\n  'inputRef',\n  'inputStyle',\n  'minWidth',\n  'onAutosize',\n  'placeholderIsMinWidth',\n];\n\nconst cleanInputProps = inputProps => {\n  INPUT_PROPS_BLACKLIST.forEach(field => delete inputProps[field]);\n  return inputProps;\n};\n\nconst copyStyles = (styles, node) => {\n  node.style.fontSize = styles.fontSize;\n  node.style.fontFamily = styles.fontFamily;\n  node.style.fontWeight = styles.fontWeight;\n  node.style.fontStyle = styles.fontStyle;\n  node.style.letterSpacing = styles.letterSpacing;\n  node.style.textTransform = styles.textTransform;\n};\n\nconst isIE =\n  typeof window !== 'undefined' && window.navigator\n    ? /MSIE |Trident\\/|Edge\\//.test(window.navigator.userAgent)\n    : false;\n\nconst generateId = () => {\n  // we only need an auto-generated ID for stylesheet injection, which is only\n  // used for IE. so if the browser is not IE, this should return undefined.\n  return isIE ? '_' + Math.random().toString(36).substr(2, 12) : undefined;\n};\n\nclass AutosizeInput extends Component {\n  static getDerivedStateFromProps(props, state) {\n    const { id } = props;\n    return id !== state.prevId\n      ? { inputId: id || generateId(), prevId: id }\n      : null;\n  }\n  constructor(props) {\n    super(props);\n    this.state = {\n      inputWidth: props.minWidth,\n      inputId: props.id || generateId(),\n      prevId: props.id,\n    };\n  }\n  componentDidMount() {\n    this.mounted = true;\n    this.copyInputStyles();\n    this.updateInputWidth();\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.inputWidth !== this.state.inputWidth) {\n      if (typeof this.props.onAutosize === 'function') {\n        this.props.onAutosize(this.state.inputWidth);\n      }\n    }\n    this.updateInputWidth();\n  }\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n  inputRef = el => {\n    this.input = el;\n    if (typeof this.props.inputRef === 'function') {\n      this.props.inputRef(el);\n    }\n  };\n  placeHolderSizerRef = el => {\n    this.placeHolderSizer = el;\n  };\n  sizerRef = el => {\n    this.sizer = el;\n  };\n  copyInputStyles() {\n    if (!this.mounted || !window.getComputedStyle) {\n      return;\n    }\n    const inputStyles = this.input && window.getComputedStyle(this.input);\n    if (!inputStyles) {\n      return;\n    }\n    copyStyles(inputStyles, this.sizer);\n    if (this.placeHolderSizer) {\n      copyStyles(inputStyles, this.placeHolderSizer);\n    }\n  }\n  updateInputWidth() {\n    if (\n      !this.mounted ||\n      !this.sizer ||\n      typeof this.sizer.scrollWidth === 'undefined'\n    ) {\n      return;\n    }\n    let newInputWidth;\n    if (\n      this.props.placeholder &&\n      (!this.props.value ||\n        (this.props.value && this.props.placeholderIsMinWidth))\n    ) {\n      newInputWidth =\n        Math.max(this.sizer.scrollWidth, this.placeHolderSizer.scrollWidth) + 2;\n    } else {\n      newInputWidth = this.sizer.scrollWidth + 2;\n    }\n    // add extraWidth to the detected width. for number types, this defaults to 16 to allow for the stepper UI\n    const extraWidth =\n      this.props.type === 'number' && this.props.extraWidth === undefined\n        ? 16\n        : parseInt(this.props.extraWidth) || 0;\n    newInputWidth += extraWidth;\n    if (newInputWidth < this.props.minWidth) {\n      newInputWidth = this.props.minWidth;\n    }\n    if (newInputWidth !== this.state.inputWidth) {\n      this.setState({\n        inputWidth: newInputWidth,\n      });\n    }\n  }\n  getInput() {\n    return this.input;\n  }\n  focus() {\n    this.input.focus();\n  }\n  blur() {\n    this.input.blur();\n  }\n  select() {\n    this.input.select();\n  }\n  renderStyles() {\n    // this method injects styles to hide IE's clear indicator, which messes\n    // with input size detection. the stylesheet is only injected when the\n    // browser is IE, and can also be disabled by the `injectStyles` prop.\n    const { injectStyles } = this.props;\n    return isIE && injectStyles ? (\n      <style\n        dangerouslySetInnerHTML={{\n          __html: `input#${this.state.inputId}::-ms-clear {display: none;}`,\n        }}\n      />\n    ) : null;\n  }\n  render() {\n    const sizerValue = [this.props.defaultValue, this.props.value, ''].reduce(\n      (previousValue, currentValue) => {\n        if (previousValue !== null && previousValue !== undefined) {\n          return previousValue;\n        }\n        return currentValue;\n      },\n    );\n\n    const wrapperStyle = { ...this.props.style };\n    if (!wrapperStyle.display) wrapperStyle.display = 'inline-block';\n\n    const inputStyle = {\n      boxSizing: 'content-box',\n      width: `${this.state.inputWidth}px`,\n      fontSize: '36px',\n      fontFamily: 'Montserrat',\n      fontWeight: '500',\n      lineHeight: '44px',\n      letterSpacing: '0.04em',\n      color: '#181c27',\n      border: 'none',\n      outline: 'none',\n    };\n\n    const { ...inputProps } = this.props;\n    cleanInputProps(inputProps);\n    inputProps.className = this.props.inputClassName;\n    inputProps.id = this.state.inputId;\n    inputProps.style = inputStyle;\n\n    return (\n      <div className={this.props.className} style={wrapperStyle}>\n        {this.renderStyles()}\n        <input {...inputProps} ref={this.inputRef} />\n        <div ref={this.sizerRef} style={sizerStyle}>\n          {sizerValue}\n        </div>\n        {this.props.placeholder ? (\n          <div ref={this.placeHolderSizerRef} style={sizerStyle}>\n            {this.props.placeholder}\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nAutosizeInput.propTypes = {\n  className: PropTypes.string, // className for the outer element\n  defaultValue: PropTypes.any, // default field value\n  extraWidth: PropTypes.oneOfType([\n    // additional width for input element\n    PropTypes.number,\n    PropTypes.string,\n  ]),\n  id: PropTypes.string, // id to use for the input, can be set for consistent snapshots\n  injectStyles: PropTypes.bool, // inject the custom stylesheet to hide clear UI, defaults to true\n  inputClassName: PropTypes.string, // className for the input element\n  inputRef: PropTypes.func, // ref callback for the input element\n  inputStyle: PropTypes.object, // css styles for the input element\n  minWidth: PropTypes.oneOfType([\n    // minimum width for input element\n    PropTypes.number,\n    PropTypes.string,\n  ]),\n  onAutosize: PropTypes.func, // onAutosize handler: function(newWidth) {}\n  onChange: PropTypes.func, // onChange handler: function(event) {}\n  placeholder: PropTypes.string, // placeholder text\n  placeholderIsMinWidth: PropTypes.bool, // don't collapse size to less than the placeholder\n  style: PropTypes.object, // css styles for the outer element\n  value: PropTypes.any, // field value\n};\nAutosizeInput.defaultProps = {\n  minWidth: 1,\n  injectStyles: true,\n};\n\nexport default AutosizeInput;\n"]},"metadata":{},"sourceType":"module"}