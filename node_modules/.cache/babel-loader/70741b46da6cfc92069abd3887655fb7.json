{"ast":null,"code":"var _jsxFileName = \"/home/bogdan/project-manager-app/src/components/projectForm/ProjectForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport styles from './ProjectForm.module.css';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { createProject } from '../../redux/projects/projects-operations';\nimport Button from '../../shared/button/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst formSchema = Yup.object().shape({\n  title: Yup.string().min(3, 'Too short!').required('* Project Name is a required field'),\n  description: Yup.string().min(4, 'Too short!').required('* Description is a required field')\n});\n\nconst ProjectForm = ({\n  onClose\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.formContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: styles.titleForm,\n      children: \"Create new project\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        title: '',\n        description: ''\n      },\n      validationSchema: formSchema,\n      onSubmit: values => {\n        createProject(values);\n        dispatch(createProject(values));\n        onClose();\n      },\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        className: styles.form,\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          className: styles.inputName,\n          name: \"title\",\n          type: \"text\",\n          placeholder: \"Project name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          className: styles.errorName,\n          component: \"span\",\n          name: \"title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          className: styles.inputDescription,\n          name: \"description\",\n          type: \"text\",\n          placeholder: \"Project description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          className: styles.errorDescription,\n          component: \"span\",\n          name: \"description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"Done\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProjectForm, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c = ProjectForm;\nexport default ProjectForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProjectForm\");","map":{"version":3,"sources":["/home/bogdan/project-manager-app/src/components/projectForm/ProjectForm.jsx"],"names":["React","useDispatch","styles","Formik","Form","Field","ErrorMessage","Yup","createProject","Button","formSchema","object","shape","title","string","min","required","description","ProjectForm","onClose","dispatch","formContainer","titleForm","values","form","inputName","errorName","inputDescription","errorDescription"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,EAA8BC,YAA9B,QAAkD,QAAlD;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,aAAT,QAA8B,0CAA9B;AACA,OAAOC,MAAP,MAAmB,4BAAnB;;AAEA,MAAMC,UAAU,GAAGH,GAAG,CAACI,MAAJ,GAAaC,KAAb,CAAmB;AACpCC,EAAAA,KAAK,EAAEN,GAAG,CAACO,MAAJ,GACJC,GADI,CACA,CADA,EACG,YADH,EAEJC,QAFI,CAEK,oCAFL,CAD6B;AAIpCC,EAAAA,WAAW,EAAEV,GAAG,CAACO,MAAJ,GACVC,GADU,CACN,CADM,EACH,YADG,EAEVC,QAFU,CAED,mCAFC;AAJuB,CAAnB,CAAnB;;AASA,MAAME,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAAA;;AACnC,QAAMC,QAAQ,GAAGnB,WAAW,EAA5B;AAEA,sBACE;AAAK,IAAA,SAAS,EAAEC,MAAM,CAACmB,aAAvB;AAAA,4BACE;AAAI,MAAA,SAAS,EAAEnB,MAAM,CAACoB,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,MAAD;AACE,MAAA,aAAa,EAAE;AACbT,QAAAA,KAAK,EAAE,EADM;AAEbI,QAAAA,WAAW,EAAE;AAFA,OADjB;AAKE,MAAA,gBAAgB,EAAEP,UALpB;AAME,MAAA,QAAQ,EAAEa,MAAM,IAAI;AAClBf,QAAAA,aAAa,CAACe,MAAD,CAAb;AACAH,QAAAA,QAAQ,CAACZ,aAAa,CAACe,MAAD,CAAd,CAAR;AACAJ,QAAAA,OAAO;AACR,OAVH;AAAA,6BAYE,QAAC,IAAD;AAAM,QAAA,SAAS,EAAEjB,MAAM,CAACsB,IAAxB;AAAA,gCACE,QAAC,KAAD;AACE,UAAA,SAAS,EAAEtB,MAAM,CAACuB,SADpB;AAEE,UAAA,IAAI,EAAC,OAFP;AAGE,UAAA,IAAI,EAAC,MAHP;AAIE,UAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA,gBADF,eAOE,QAAC,YAAD;AACE,UAAA,SAAS,EAAEvB,MAAM,CAACwB,SADpB;AAEE,UAAA,SAAS,EAAC,MAFZ;AAGE,UAAA,IAAI,EAAC;AAHP;AAAA;AAAA;AAAA;AAAA,gBAPF,eAaE,QAAC,KAAD;AACE,UAAA,SAAS,EAAExB,MAAM,CAACyB,gBADpB;AAEE,UAAA,IAAI,EAAC,aAFP;AAGE,UAAA,IAAI,EAAC,MAHP;AAIE,UAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA,gBAbF,eAoBE,QAAC,YAAD;AACE,UAAA,SAAS,EAAEzB,MAAM,CAAC0B,gBADpB;AAEE,UAAA,SAAS,EAAC,MAFZ;AAGE,UAAA,IAAI,EAAC;AAHP;AAAA;AAAA;AAAA;AAAA,gBApBF,eAyBE,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAzBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAZF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6CD,CAhDD;;GAAMV,W;UACajB,W;;;KADbiB,W;AAkDN,eAAeA,WAAf","sourcesContent":["import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport styles from './ProjectForm.module.css';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { createProject } from '../../redux/projects/projects-operations';\nimport Button from '../../shared/button/Button';\n\nconst formSchema = Yup.object().shape({\n  title: Yup.string()\n    .min(3, 'Too short!')\n    .required('* Project Name is a required field'),\n  description: Yup.string()\n    .min(4, 'Too short!')\n    .required('* Description is a required field'),\n});\n\nconst ProjectForm = ({ onClose }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <div className={styles.formContainer}>\n      <h2 className={styles.titleForm}>Create new project</h2>\n      <Formik\n        initialValues={{\n          title: '',\n          description: '',\n        }}\n        validationSchema={formSchema}\n        onSubmit={values => {\n          createProject(values);\n          dispatch(createProject(values));\n          onClose();\n        }}\n      >\n        <Form className={styles.form}>\n          <Field\n            className={styles.inputName}\n            name=\"title\"\n            type=\"text\"\n            placeholder=\"Project name\"\n          />\n          <ErrorMessage\n            className={styles.errorName}\n            component=\"span\"\n            name=\"title\"\n          />\n\n          <Field\n            className={styles.inputDescription}\n            name=\"description\"\n            type=\"text\"\n            placeholder=\"Project description\"\n          />\n\n          <ErrorMessage\n            className={styles.errorDescription}\n            component=\"span\"\n            name=\"description\"\n          />\n          <Button type=\"submit\">Done</Button>\n        </Form>\n      </Formik>\n    </div>\n  );\n};\n\nexport default ProjectForm;\n"]},"metadata":{},"sourceType":"module"}