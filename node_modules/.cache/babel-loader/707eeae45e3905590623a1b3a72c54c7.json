{"ast":null,"code":"import _regeneratorRuntime from\"/home/bogdan/project-manager-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/bogdan/project-manager-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import MembersList from'../membersList/MembersList';import styles from'./AddMember.module.css';import{Formik,Form,Field,ErrorMessage}from'formik';import*as Yup from'yup';import{addMember}from'../../redux/projects/projects-operations';import{useParams}from'react-router-dom';import{useDispatch,useSelector}from'react-redux';import{getProjectsSelector}from'../../redux/projects/projects-selectors';import Button from'../../shared/button/Button';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var formSchema=Yup.object().shape({email:Yup.string().required('* Email is a required field').email('* Email must be valid')});var AddMember=function AddMember(){var _useParams=useParams(),projectId=_useParams.projectId;var dispatch=useDispatch();var projects=useSelector(getProjectsSelector);var members=projects.find(function(item){return item._id===projectId;}).members;return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"div\",{className:styles.formContainer,children:[/*#__PURE__*/_jsx(\"h2\",{className:styles.titleForm,children:\"Add new project member\"}),/*#__PURE__*/_jsx(Formik,{initialValues:{email:''},validationSchema:formSchema,onSubmit:/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(values,_ref){var resetForm;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:resetForm=_ref.resetForm;addMember(values);dispatch(addMember(values,projectId));resetForm({});case 4:case\"end\":return _context.stop();}}},_callee);}));return function(_x,_x2){return _ref2.apply(this,arguments);};}(),children:/*#__PURE__*/_jsxs(Form,{className:styles.memberForm,children:[/*#__PURE__*/_jsx(Field,{className:styles.input,name:\"email\",type:\"text\",placeholder:\"E-mail\"}),/*#__PURE__*/_jsx(ErrorMessage,{className:styles.error,component:\"span\",name:\"email\"}),/*#__PURE__*/_jsx(MembersList,{members:members}),/*#__PURE__*/_jsx(Button,{id:\"form\",children:\"Done\"})]})})]})});};export default AddMember;","map":{"version":3,"sources":["/home/bogdan/project-manager-app/src/components/addMember/AddMember.jsx"],"names":["MembersList","styles","Formik","Form","Field","ErrorMessage","Yup","addMember","useParams","useDispatch","useSelector","getProjectsSelector","Button","formSchema","object","shape","email","string","required","AddMember","projectId","dispatch","projects","members","find","item","_id","formContainer","titleForm","values","resetForm","memberForm","input","error"],"mappings":"mOAAA,MAAOA,CAAAA,WAAP,KAAwB,4BAAxB,CACA,MAAOC,CAAAA,MAAP,KAAmB,wBAAnB,CACA,OAASC,MAAT,CAAiBC,IAAjB,CAAuBC,KAAvB,CAA8BC,YAA9B,KAAkD,QAAlD,CACA,MAAO,GAAKC,CAAAA,GAAZ,KAAqB,KAArB,CACA,OAASC,SAAT,KAA0B,0CAA1B,CACA,OAASC,SAAT,KAA0B,kBAA1B,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OAASC,mBAAT,KAAoC,yCAApC,CACA,MAAOC,CAAAA,MAAP,KAAmB,4BAAnB,C,wFAEA,GAAMC,CAAAA,UAAU,CAAGP,GAAG,CAACQ,MAAJ,GAAaC,KAAb,CAAmB,CACpCC,KAAK,CAAEV,GAAG,CAACW,MAAJ,GACJC,QADI,CACK,6BADL,EAEJF,KAFI,CAEE,uBAFF,CAD6B,CAAnB,CAAnB,CAMA,GAAMG,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,gBACAX,SAAS,EADT,CACdY,SADc,YACdA,SADc,CAEtB,GAAMC,CAAAA,QAAQ,CAAGZ,WAAW,EAA5B,CACA,GAAMa,CAAAA,QAAQ,CAAGZ,WAAW,CAACC,mBAAD,CAA5B,CACA,GAAMY,CAAAA,OAAO,CAAGD,QAAQ,CAACE,IAAT,CAAc,SAAAC,IAAI,QAAIA,CAAAA,IAAI,CAACC,GAAL,GAAaN,SAAjB,EAAlB,EAA8CG,OAA9D,CAEA,mBACE,kCACE,aAAK,SAAS,CAAEtB,MAAM,CAAC0B,aAAvB,wBACE,WAAI,SAAS,CAAE1B,MAAM,CAAC2B,SAAtB,oCADF,cAEE,KAAC,MAAD,EACE,aAAa,CAAE,CAAEZ,KAAK,CAAE,EAAT,CADjB,CAEE,gBAAgB,CAAEH,UAFpB,CAGE,QAAQ,2FAAE,iBAAOgB,MAAP,qIAAiBC,SAAjB,MAAiBA,SAAjB,CACRvB,SAAS,CAACsB,MAAD,CAAT,CACAR,QAAQ,CAACd,SAAS,CAACsB,MAAD,CAAST,SAAT,CAAV,CAAR,CACAU,SAAS,CAAC,EAAD,CAAT,CAHQ,sDAAF,mEAHV,uBASE,MAAC,IAAD,EAAM,SAAS,CAAE7B,MAAM,CAAC8B,UAAxB,wBACE,KAAC,KAAD,EACE,SAAS,CAAE9B,MAAM,CAAC+B,KADpB,CAEE,IAAI,CAAC,OAFP,CAGE,IAAI,CAAC,MAHP,CAIE,WAAW,CAAC,QAJd,EADF,cAQE,KAAC,YAAD,EACE,SAAS,CAAE/B,MAAM,CAACgC,KADpB,CAEE,SAAS,CAAC,MAFZ,CAGE,IAAI,CAAC,OAHP,EARF,cAaE,KAAC,WAAD,EAAa,OAAO,CAAEV,OAAtB,EAbF,cAcE,KAAC,MAAD,EAAQ,EAAE,CAAC,MAAX,kBAdF,GATF,EAFF,GADF,EADF,CAiCD,CAvCD,CAyCA,cAAeJ,CAAAA,SAAf","sourcesContent":["import MembersList from '../membersList/MembersList';\nimport styles from './AddMember.module.css';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { addMember } from '../../redux/projects/projects-operations';\nimport { useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getProjectsSelector } from '../../redux/projects/projects-selectors';\nimport Button from '../../shared/button/Button';\n\nconst formSchema = Yup.object().shape({\n  email: Yup.string()\n    .required('* Email is a required field')\n    .email('* Email must be valid'),\n});\n\nconst AddMember = () => {\n  const { projectId } = useParams();\n  const dispatch = useDispatch();\n  const projects = useSelector(getProjectsSelector);\n  const members = projects.find(item => item._id === projectId).members;\n\n  return (\n    <div>\n      <div className={styles.formContainer}>\n        <h2 className={styles.titleForm}>Add new project member</h2>\n        <Formik\n          initialValues={{ email: '' }}\n          validationSchema={formSchema}\n          onSubmit={async (values, { resetForm }) => {\n            addMember(values);\n            dispatch(addMember(values, projectId));\n            resetForm({});\n          }}\n        >\n          <Form className={styles.memberForm}>\n            <Field\n              className={styles.input}\n              name=\"email\"\n              type=\"text\"\n              placeholder=\"E-mail\"\n            />\n\n            <ErrorMessage\n              className={styles.error}\n              component=\"span\"\n              name=\"email\"\n            />\n            <MembersList members={members} />\n            <Button id=\"form\">Done</Button>\n          </Form>\n        </Formik>\n      </div>\n    </div>\n  );\n};\n\nexport default AddMember;\n"]},"metadata":{},"sourceType":"module"}