{"ast":null,"code":"import axios from 'axios';\nimport { refreshTemplate } from '../projects/projects-operations';\nimport { addSprintRequest, addSprintSucces, addSprintError, deleteSprintRequest, deleteSprintSucces, deleteSprintError, fetchSprintsRequest, fetchSprintsSucces, fetchSprintsError, changeTitleRequest, changeTitleSuccess, changeTitleError } from './sprints-actions';\naxios.defaults.baseURL = 'https://sbc-backend.goit.global';\n\nconst fetchSprints = projectId => async dispatch => {\n  dispatch(fetchSprintsRequest());\n\n  try {\n    const {\n      data\n    } = await axios.get(`/sprint/${projectId}`);\n    dispatch(fetchSprintsSucces(data.sprints ? data.sprints : []));\n  } catch (error) {\n    dispatch(fetchSprintsError(error === null || error === void 0 ? void 0 : error.message));\n    refreshTemplate(() => fetchSprints(projectId), error, dispatch);\n  }\n};\n\nconst addSprint = (sprint, projectId) => async dispatch => {\n  dispatch(addSprintRequest());\n\n  try {\n    const {\n      data\n    } = await axios.post(`/sprint/${projectId}`, sprint);\n    dispatch(addSprintSucces({ ...data,\n      _id: data.id\n    }));\n  } catch (error) {\n    dispatch(addSprintError(error === null || error === void 0 ? void 0 : error.message));\n    refreshTemplate(() => addSprint(sprint, projectId), error, dispatch);\n  }\n};\n\nconst deleteSprint = sprintId => async dispatch => {\n  dispatch(deleteSprintRequest());\n\n  try {\n    axios.delete(`/sprint/${sprintId}`);\n    dispatch(deleteSprintSucces(sprintId));\n  } catch (error) {\n    dispatch(deleteSprintError(error === null || error === void 0 ? void 0 : error.message));\n    refreshTemplate(() => deleteSprint(sprintId), error, dispatch);\n  }\n};\n\nconst editTitle = (sprintId, title) => async dispatch => {\n  dispatch(changeTitleRequest());\n\n  try {\n    await axios.patch(`/sprint/title/${sprintId}`, {\n      title\n    });\n    dispatch(changeTitleSuccess({\n      sprintId,\n      title\n    }));\n  } catch (error) {\n    dispatch(changeTitleError(error === null || error === void 0 ? void 0 : error.message));\n    refreshTemplate(() => editTitle(sprintId, title), error, dispatch);\n  }\n};\n\nexport { addSprint, deleteSprint, fetchSprints, editTitle };","map":{"version":3,"sources":["/home/bogdan/project-manager-app/src/redux/sprints/sprints-operations.js"],"names":["axios","refreshTemplate","addSprintRequest","addSprintSucces","addSprintError","deleteSprintRequest","deleteSprintSucces","deleteSprintError","fetchSprintsRequest","fetchSprintsSucces","fetchSprintsError","changeTitleRequest","changeTitleSuccess","changeTitleError","defaults","baseURL","fetchSprints","projectId","dispatch","data","get","sprints","error","message","addSprint","sprint","post","_id","id","deleteSprint","sprintId","delete","editTitle","title","patch"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport { refreshTemplate } from '../projects/projects-operations';\r\nimport {\r\n  addSprintRequest,\r\n  addSprintSucces,\r\n  addSprintError,\r\n  deleteSprintRequest,\r\n  deleteSprintSucces,\r\n  deleteSprintError,\r\n  fetchSprintsRequest,\r\n  fetchSprintsSucces,\r\n  fetchSprintsError,\r\n  changeTitleRequest,\r\n  changeTitleSuccess,\r\n  changeTitleError,\r\n} from './sprints-actions';\r\n\r\naxios.defaults.baseURL = 'https://sbc-backend.goit.global';\r\n\r\nconst fetchSprints = projectId => async dispatch => {\r\n  dispatch(fetchSprintsRequest());\r\n\r\n  try {\r\n    const { data } = await axios.get(`/sprint/${projectId}`);\r\n    dispatch(fetchSprintsSucces(data.sprints ? data.sprints : []));\r\n  } catch (error) {\r\n    dispatch(fetchSprintsError(error?.message));\r\n    refreshTemplate(() => fetchSprints(projectId), error, dispatch);\r\n  }\r\n};\r\n\r\nconst addSprint = (sprint, projectId) => async dispatch => {\r\n  dispatch(addSprintRequest());\r\n  try {\r\n    const { data } = await axios.post(`/sprint/${projectId}`, sprint);\r\n    dispatch(addSprintSucces({ ...data, _id: data.id }));\r\n  } catch (error) {\r\n    dispatch(addSprintError(error?.message));\r\n    refreshTemplate(() => addSprint(sprint, projectId), error, dispatch);\r\n  }\r\n};\r\n\r\nconst deleteSprint = sprintId => async dispatch => {\r\n  dispatch(deleteSprintRequest());\r\n\r\n  try {\r\n    axios.delete(`/sprint/${sprintId}`);\r\n\r\n    dispatch(deleteSprintSucces(sprintId));\r\n  } catch (error) {\r\n    dispatch(deleteSprintError(error?.message));\r\n    refreshTemplate(() => deleteSprint(sprintId), error, dispatch);\r\n  }\r\n};\r\n\r\nconst editTitle = (sprintId, title) => async dispatch => {\r\n  dispatch(changeTitleRequest());\r\n\r\n  try {\r\n    await axios.patch(`/sprint/title/${sprintId}`, { title });\r\n    dispatch(changeTitleSuccess({ sprintId, title }));\r\n  } catch (error) {\r\n    dispatch(changeTitleError(error?.message));\r\n    refreshTemplate(() => editTitle(sprintId, title), error, dispatch);\r\n  }\r\n};\r\n\r\nexport { addSprint, deleteSprint, fetchSprints, editTitle };\r\n"]},"metadata":{},"sourceType":"module"}