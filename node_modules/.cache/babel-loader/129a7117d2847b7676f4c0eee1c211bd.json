{"ast":null,"code":"var _jsxFileName = \"/home/bogdan/project-manager-app/src/components/sprintsPageContent/editTitle/EditTitle.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport styles from './EditTitle.module.css';\nimport sprite from \"../../../icons/symbol-defs.svg\";\nimport { editTitle } from '../../../redux/projects/projects-operations';\nimport { getProjectLoading, getProjectsSelector } from '../../../redux/projects/projects-selectors';\nimport AutosizeInput from '../../titleEditor/AutosizeInput';\nimport Loader from '../../loader/Loader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst EditTitle = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [input, setInput] = useState();\n  const [isUpdate, setUpdate] = useState(true);\n  const {\n    projectId\n  } = useParams();\n  const projects = useSelector(getProjectsSelector);\n  const isLoading = useSelector(getProjectLoading);\n  const project = projects.find(item => item._id === projectId);\n  const [active, setActive] = useState(true);\n\n  const onEditTitle = () => {\n    setActive(() => setActive(false));\n    setUpdate(!isUpdate);\n    setInput(project.title);\n  };\n\n  const onHandleChange = evt => {\n    setInput(evt.target.value);\n  };\n\n  const onHandleSubmit = evt => {\n    evt.preventDefault();\n    dispatch(editTitle(projectId, input));\n    setUpdate(!isUpdate);\n    setActive(() => setActive(true));\n  };\n\n  if (active) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.box,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.current,\n        children: isLoading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: styles.pageTitle,\n            children: project === null || project === void 0 ? void 0 : project.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: onEditTitle,\n            type: \"button\",\n            className: styles.buttonFix,\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              className: styles.iconPencil,\n              children: /*#__PURE__*/_jsxDEV(\"use\", {\n                href: sprite + '#icon-pencil'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.description,\n        children: project === null || project === void 0 ? void 0 : project.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (!active) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.box,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.edit,\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: styles.editForm,\n          children: [/*#__PURE__*/_jsxDEV(AutosizeInput, {\n            type: \"text\",\n            name: \"edit\",\n            value: input,\n            autoComplete: \"off\",\n            onChange: onHandleChange,\n            onBlur: onHandleSubmit,\n            inputClassName: styles.editInput,\n            maxLength: \"30\",\n            autoFocus: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: styles.buttonSave,\n            onClick: onHandleSubmit,\n            type: \"submit\",\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              className: styles.iconSave,\n              children: /*#__PURE__*/_jsxDEV(\"use\", {\n                href: sprite + '#icon-save'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.description,\n        children: project === null || project === void 0 ? void 0 : project.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_s(EditTitle, \"vc48fzjF2oC+t5qLMnM40n44tVc=\", false, function () {\n  return [useDispatch, useParams, useSelector, useSelector];\n});\n\n_c = EditTitle;\nexport default EditTitle;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditTitle\");","map":{"version":3,"sources":["/home/bogdan/project-manager-app/src/components/sprintsPageContent/editTitle/EditTitle.jsx"],"names":["React","useState","useSelector","useDispatch","useParams","styles","editTitle","getProjectLoading","getProjectsSelector","AutosizeInput","Loader","EditTitle","dispatch","input","setInput","isUpdate","setUpdate","projectId","projects","isLoading","project","find","item","_id","active","setActive","onEditTitle","title","onHandleChange","evt","target","value","onHandleSubmit","preventDefault","box","current","pageTitle","buttonFix","iconPencil","sprite","description","edit","editForm","editInput","buttonSave","iconSave"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport styles from './EditTitle.module.css';\nimport sprite from '../../../icons/symbol-defs.svg';\nimport { editTitle } from '../../../redux/projects/projects-operations';\nimport { getProjectLoading, getProjectsSelector } from '../../../redux/projects/projects-selectors';\nimport AutosizeInput from '../../titleEditor/AutosizeInput';\nimport Loader from '../../loader/Loader';\n\n\nconst EditTitle = () => {\n  const dispatch = useDispatch();\n  const [input, setInput] = useState();\n  const [isUpdate, setUpdate] = useState(true);\n  const { projectId } = useParams();\n  const projects = useSelector(getProjectsSelector);\n  const isLoading = useSelector(getProjectLoading);\n  const project = projects.find(item => item._id === projectId);\n  const [active, setActive] = useState(true);\n\n  const onEditTitle = () => {\n    setActive(() => setActive(false));\n    setUpdate(!isUpdate);\n    setInput(project.title);\n  };\n\n  const onHandleChange = evt => {\n    setInput(evt.target.value);\n  };\n\n  const onHandleSubmit = evt => {\n    evt.preventDefault();\n    dispatch(editTitle(projectId, input));\n    setUpdate(!isUpdate);\n    setActive(() => setActive(true));\n  };\n\n  if (active) {\n    return (\n      <div className={styles.box}>\n        <div className={styles.current}>\n          {isLoading ? (\n              <Loader />\n          ) : (\n            <>\n              <h2 className={styles.pageTitle}>{project?.title}</h2>\n              <button\n                onClick={onEditTitle}\n                type=\"button\"\n                className={styles.buttonFix}\n              >\n                <svg className={styles.iconPencil}>\n                  <use href={sprite + '#icon-pencil'}></use>\n                </svg>\n              </button>\n            </>\n          )}\n        </div>\n        <p className={styles.description}>{project?.description}</p>\n      </div>\n    );\n  }\n\n  if (!active) {\n    return (\n      <div className={styles.box}>\n        <div className={styles.edit}>\n          <form className={styles.editForm}>\n            <AutosizeInput\n              type=\"text\"\n              name=\"edit\"\n              value={input}\n              autoComplete=\"off\"\n              onChange={onHandleChange}\n              onBlur={onHandleSubmit}\n              inputClassName={styles.editInput}\n              maxLength=\"30\"\n              autoFocus\n            />\n            <button\n              className={styles.buttonSave}\n              onClick={onHandleSubmit}\n              type=\"submit\"\n            >\n              <svg className={styles.iconSave}>\n                <use href={sprite + '#icon-save'}></use>\n              </svg>\n            </button>\n          </form>\n        </div>\n        <p className={styles.description}>{project?.description}</p>\n      </div>\n    );\n  }\n};\n\nexport default EditTitle;\n"]},"metadata":{},"sourceType":"module"}