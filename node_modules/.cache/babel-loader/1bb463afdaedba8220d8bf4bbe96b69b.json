{"ast":null,"code":"import _slicedToArray from\"/home/bogdan/project-manager-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import styles from'./TaskHeader.module.css';import MainModal from'../../../shared/mainModal/MainModal';import TaskForm from'../../taskForm/TaskForm';import ChangeTitle from'../../titleEditor/TitleEditor';import RoundButton from'../../../shared/roundButton/RoundButton';import TaskFilter from'../taskFilter/TaskFilter';import{useSelector}from'react-redux';import{getSprintsSelector}from'../../../redux/sprints/sprints-selectors';import{useParams}from'react-router-dom';import{getCurrentDay}from'../../../redux/tasks/task-selectors';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function SprintHeader(_ref){var _sprints$find,_sprints$find2,_sprints$find3;var setTaskDate=_ref.setTaskDate;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),showModal=_useState2[0],setShowModal=_useState2[1];var sprints=useSelector(getSprintsSelector);var _useParams=useParams(),sprintId=_useParams.sprintId;var startDate=(_sprints$find=sprints.find(function(item){return item._id===sprintId;}))===null||_sprints$find===void 0?void 0:_sprints$find.startDate;var duration=(_sprints$find2=sprints.find(function(item){return item._id===sprintId;}))===null||_sprints$find2===void 0?void 0:_sprints$find2.duration;var endDate=(_sprints$find3=sprints.find(function(item){return item._id===sprintId;}))===null||_sprints$find3===void 0?void 0:_sprints$find3.endDate;var _MS_PER_DAY=1000*60*60*24;var _useState3=useState(Date.now()),_useState4=_slicedToArray(_useState3,2),currentDay=_useState4[0],setCurrentDay=_useState4[1];var _useState5=useState(0),_useState6=_slicedToArray(_useState5,2),sprintDay=_useState6[0],setSprintDay=_useState6[1];var curDay=useSelector(getCurrentDay);useEffect(function(){var result=(Date.now()-Date.parse(startDate))/_MS_PER_DAY;setSprintDay(Math.floor(result+1));},[startDate,_MS_PER_DAY,sprintId]);useEffect(function(){setCurrentDay(curDay);},[sprintId,curDay]);useEffect(function(){setTaskDate(currentDay);},[sprintDay,setTaskDate,currentDay]);useEffect(function(){var body=document.querySelector('body');body.style.overflow=showModal?'hidden':'auto';},[showModal]);var onDecrement=function onDecrement(){setCurrentDay(function(prev){return prev-_MS_PER_DAY;});setSprintDay(function(prev){return prev-1;});};var onIncrement=function onIncrement(){setCurrentDay(function(prev){return prev+_MS_PER_DAY;});setSprintDay(function(prev){return prev+1;});};return/*#__PURE__*/_jsxs(\"div\",{className:styles.headerWrapper,children:[/*#__PURE__*/_jsxs(\"section\",{className:styles.sprintHeader,children:[/*#__PURE__*/_jsx(\"div\",{className:styles.controlAndSearchBlock,children:/*#__PURE__*/_jsxs(\"div\",{className:styles.controlPanel,children:[!!sprintDay&&!!duration&&Date.parse(startDate)<=currentDay&&/*#__PURE__*/_jsxs(\"div\",{className:styles.switch,children:[new Date(startDate).getDate()!==new Date(currentDay).getDate()?/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:styles.leftArrow,onClick:onDecrement,children:\"\\u1438\"}):/*#__PURE__*/_jsx(\"span\",{className:styles.invisibleArrow}),/*#__PURE__*/_jsx(\"span\",{className:styles.day,children:sprintDay}),/*#__PURE__*/_jsx(\"span\",{className:styles.separator,children:\"/\"}),/*#__PURE__*/_jsx(\"span\",{className:styles.totalDays,children:duration}),new Date(endDate).getDate()!==new Date(currentDay).getDate()?/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:styles.rightArrow,onClick:onIncrement,children:\"\\u1433\"}):/*#__PURE__*/_jsx(\"span\",{className:styles.invisibleArrow})]}),/*#__PURE__*/_jsx(\"span\",{className:styles.date,children:new Date(currentDay).toJSON().slice(0,10).split('-').reverse().join('.')})]})}),/*#__PURE__*/_jsxs(\"div\",{className:styles.control,children:[/*#__PURE__*/_jsx(\"div\",{className:styles.baseWrapper,children:/*#__PURE__*/_jsx(ChangeTitle,{})}),/*#__PURE__*/_jsxs(\"div\",{className:styles.buttonBox,children:[/*#__PURE__*/_jsx(RoundButton,{onClick:function onClick(){return setShowModal(true);}}),/*#__PURE__*/_jsx(\"p\",{className:styles.buttonDescription,children:\"Create task\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:styles.tasksHeader,children:[/*#__PURE__*/_jsx(\"p\",{className:styles.tasksHeaderText,children:\"Task\"}),/*#__PURE__*/_jsxs(\"p\",{className:styles.tasksHeaderText,children:[\"Scheduled \",/*#__PURE__*/_jsx(\"br\",{}),\"hours\"]}),/*#__PURE__*/_jsx(\"p\",{className:styles.tasksHeaderText,children:\"Hours spent / per day \"}),/*#__PURE__*/_jsx(\"p\",{className:styles.tasksHeaderText,children:\"Hours spent\"}),/*#__PURE__*/_jsx(TaskFilter,{})]})]}),/*#__PURE__*/_jsx(MainModal,{showModal:showModal,setShowModal:setShowModal,onClose:function onClose(){return setShowModal(false);},children:/*#__PURE__*/_jsx(TaskForm,{onClose:function onClose(){return setShowModal('');}})})]});}","map":{"version":3,"sources":["/home/bogdan/project-manager-app/src/components/taskPageContent/taskHeader/TaskHeader.jsx"],"names":["React","useEffect","useState","styles","MainModal","TaskForm","ChangeTitle","RoundButton","TaskFilter","useSelector","getSprintsSelector","useParams","getCurrentDay","SprintHeader","setTaskDate","showModal","setShowModal","sprints","sprintId","startDate","find","item","_id","duration","endDate","_MS_PER_DAY","Date","now","currentDay","setCurrentDay","sprintDay","setSprintDay","curDay","result","parse","Math","floor","body","document","querySelector","style","overflow","onDecrement","prev","onIncrement","headerWrapper","sprintHeader","controlAndSearchBlock","controlPanel","switch","getDate","leftArrow","invisibleArrow","day","separator","totalDays","rightArrow","date","toJSON","slice","split","reverse","join","control","baseWrapper","buttonBox","buttonDescription","tasksHeader","tasksHeaderText"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport styles from './TaskHeader.module.css';\r\nimport MainModal from '../../../shared/mainModal/MainModal';\r\nimport TaskForm from '../../taskForm/TaskForm';\r\nimport ChangeTitle from '../../titleEditor/TitleEditor';\r\nimport RoundButton from '../../../shared/roundButton/RoundButton';\r\nimport TaskFilter from '../taskFilter/TaskFilter';\r\nimport { useSelector } from 'react-redux';\r\nimport { getSprintsSelector } from '../../../redux/sprints/sprints-selectors';\r\nimport { useParams } from 'react-router-dom';\r\nimport { getCurrentDay } from '../../../redux/tasks/task-selectors';\r\n\r\nexport default function SprintHeader({ setTaskDate }) {\r\n  const [showModal, setShowModal] = useState(false);\r\n  const sprints = useSelector(getSprintsSelector);\r\n  const { sprintId } = useParams();\r\n  const startDate = sprints.find(item => item._id === sprintId)?.startDate;\r\n  const duration = sprints.find(item => item._id === sprintId)?.duration;\r\n  const endDate = sprints.find(item => item._id === sprintId)?.endDate;\r\n  const _MS_PER_DAY = 1000 * 60 * 60 * 24;\r\n  const [currentDay, setCurrentDay] = useState(Date.now());\r\n  const [sprintDay, setSprintDay] = useState(0);\r\n  const curDay = useSelector(getCurrentDay);\r\n\r\n  useEffect(() => {\r\n    const result = (Date.now() - Date.parse(startDate)) / _MS_PER_DAY;\r\n    setSprintDay(Math.floor(result + 1));\r\n  }, [startDate, _MS_PER_DAY, sprintId]);\r\n\r\n  useEffect(() => {\r\n    setCurrentDay(curDay);\r\n  }, [sprintId, curDay]);\r\n\r\n  useEffect(() => {\r\n    setTaskDate(currentDay);\r\n  }, [sprintDay, setTaskDate, currentDay]);\r\n\r\n  useEffect(() => {\r\n    const body = document.querySelector('body');\r\n    body.style.overflow = showModal ? 'hidden' : 'auto';\r\n  }, [showModal]);\r\n\r\n  const onDecrement = () => {\r\n    setCurrentDay(prev => prev - _MS_PER_DAY);\r\n    setSprintDay(prev => prev - 1);\r\n  };\r\n\r\n  const onIncrement = () => {\r\n    setCurrentDay(prev => prev + _MS_PER_DAY);\r\n    setSprintDay(prev => prev + 1);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.headerWrapper}>\r\n      <section className={styles.sprintHeader}>\r\n        <div className={styles.controlAndSearchBlock}>\r\n          <div className={styles.controlPanel}>\r\n            {!!sprintDay && !!duration && Date.parse(startDate) <= currentDay && (\r\n              <div className={styles.switch}>\r\n                {new Date(startDate).getDate() !==\r\n                new Date(currentDay).getDate() ? (\r\n                  <button\r\n                    type=\"button\"\r\n                    className={styles.leftArrow}\r\n                    onClick={onDecrement}\r\n                  >\r\n                    &#5176;\r\n                  </button>\r\n                ) : (\r\n                  <span className={styles.invisibleArrow}></span>\r\n                )}\r\n\r\n                <span className={styles.day}>{sprintDay}</span>\r\n                <span className={styles.separator}>/</span>\r\n                <span className={styles.totalDays}>{duration}</span>\r\n\r\n                {new Date(endDate).getDate() !==\r\n                new Date(currentDay).getDate() ? (\r\n                  <button\r\n                    type=\"button\"\r\n                    className={styles.rightArrow}\r\n                    onClick={onIncrement}\r\n                  >\r\n                    &#5171;\r\n                  </button>\r\n                ) : (\r\n                  <span className={styles.invisibleArrow}></span>\r\n                )}\r\n              </div>\r\n            )}\r\n            <span className={styles.date}>\r\n              {new Date(currentDay)\r\n                .toJSON()\r\n                .slice(0, 10)\r\n                .split('-')\r\n                .reverse()\r\n                .join('.')}\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div className={styles.control}>\r\n          <div className={styles.baseWrapper}>\r\n            <ChangeTitle />\r\n          </div>\r\n          <div className={styles.buttonBox}>\r\n            <RoundButton onClick={() => setShowModal(true)} />\r\n            <p className={styles.buttonDescription}>Create task</p>\r\n          </div>\r\n        </div>\r\n\r\n        <div className={styles.tasksHeader}>\r\n          <p className={styles.tasksHeaderText}>Task</p>\r\n          <p className={styles.tasksHeaderText}>\r\n            Scheduled <br />\r\n            hours\r\n          </p>\r\n          <p className={styles.tasksHeaderText}>Hours spent / per day </p>\r\n          <p className={styles.tasksHeaderText}>Hours spent</p>\r\n\r\n          <TaskFilter />\r\n        </div>\r\n      </section>\r\n      <MainModal\r\n        showModal={showModal}\r\n        setShowModal={setShowModal}\r\n        onClose={() => setShowModal(false)}\r\n      >\r\n        <TaskForm onClose={() => setShowModal('')} />\r\n      </MainModal>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}