{"ast":null,"code":"var _jsxFileName = \"/home/bogdan/project-manager-app/src/components/graph/modal/ChartModal.jsx\";\nimport React, { Component } from 'react';\nimport styles from './ChartModal.module.css';\nimport Chart from '../Chart';\nimport sprite from \"../../../icons/symbol-defs.svg\";\nimport { connect } from 'react-redux';\nimport { getTasks } from '../../../redux/tasks/task-selectors';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Modal extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      modal: false\n    };\n\n    this.toggleModal = () => {\n      this.setState(({\n        modal\n      }) => ({\n        modal: !modal\n      }));\n    };\n\n    this.handlekeydown = e => {\n      if (e.code === 'Escape') {\n        this.toggleModal();\n      }\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('keydown', this.handlekeydown);\n  }\n\n  componentDidUpdate() {\n    const body = document.querySelector('body');\n    body.style.overflow = this.state.modal ? 'hidden' : 'auto';\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handlekeydown);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [this.props.tasks.length > 2 && /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: styles.buttonAdd,\n        onClick: this.toggleModal,\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          className: styles.icon,\n          children: /*#__PURE__*/_jsxDEV(\"use\", {\n            href: sprite + '#icon-analytics'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), this.state.modal && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.Overlay,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.Modal,\n          children: /*#__PURE__*/_jsxDEV(Chart, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  tasks: getTasks(state)\n});\n\nexport default connect(mapStateToProps)(Modal);","map":{"version":3,"sources":["/home/bogdan/project-manager-app/src/components/graph/modal/ChartModal.jsx"],"names":["React","Component","styles","Chart","connect","getTasks","Modal","state","modal","toggleModal","setState","handlekeydown","e","code","componentDidMount","window","addEventListener","componentDidUpdate","body","document","querySelector","style","overflow","componentWillUnmount","removeEventListener","render","props","tasks","length","buttonAdd","icon","sprite","Overlay","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,KAAP,MAAkB,UAAlB;;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,qCAAzB;;;;AAEA,MAAMC,KAAN,SAAoBL,SAApB,CAA8B;AAAA;AAAA;AAAA,SAC5BM,KAD4B,GACpB;AACNC,MAAAA,KAAK,EAAE;AADD,KADoB;;AAAA,SAgB5BC,WAhB4B,GAgBd,MAAM;AAClB,WAAKC,QAAL,CAAc,CAAC;AAAEF,QAAAA;AAAF,OAAD,MAAgB;AAAEA,QAAAA,KAAK,EAAE,CAACA;AAAV,OAAhB,CAAd;AACD,KAlB2B;;AAAA,SAmB5BG,aAnB4B,GAmBZC,CAAC,IAAI;AACnB,UAAIA,CAAC,CAACC,IAAF,KAAW,QAAf,EAAyB;AACvB,aAAKJ,WAAL;AACD;AACF,KAvB2B;AAAA;;AAI5BK,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,MAAM,CAACC,gBAAP,CAAwB,SAAxB,EAAmC,KAAKL,aAAxC;AACD;;AAEDM,EAAAA,kBAAkB,GAAG;AACnB,UAAMC,IAAI,GAAGC,QAAQ,CAACC,aAAT,CAAuB,MAAvB,CAAb;AACAF,IAAAA,IAAI,CAACG,KAAL,CAAWC,QAAX,GAAsB,KAAKf,KAAL,CAAWC,KAAX,GAAmB,QAAnB,GAA8B,MAApD;AACD;;AAEDe,EAAAA,oBAAoB,GAAG;AACrBR,IAAAA,MAAM,CAACS,mBAAP,CAA2B,SAA3B,EAAsC,KAAKb,aAA3C;AACD;;AASDc,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,iBACG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,GAA0B,CAA1B,iBACC;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,SAAS,EAAE1B,MAAM,CAAC2B,SAFpB;AAGE,QAAA,OAAO,EAAE,KAAKpB,WAHhB;AAAA,+BAKE;AAAK,UAAA,SAAS,EAAEP,MAAM,CAAC4B,IAAvB;AAAA,iCACE;AAAK,YAAA,IAAI,EAAEC,MAAM,GAAG;AAApB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,cAFJ,EAaG,KAAKxB,KAAL,CAAWC,KAAX,iBACC;AAAK,QAAA,SAAS,EAAEN,MAAM,CAAC8B,OAAvB;AAAA,+BACE;AAAK,UAAA,SAAS,EAAE9B,MAAM,CAACI,KAAvB;AAAA,iCACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAdJ;AAAA,oBADF;AAuBD;;AAhD2B;;AAmD9B,MAAM2B,eAAe,GAAG1B,KAAK,KAAK;AAChCoB,EAAAA,KAAK,EAAEtB,QAAQ,CAACE,KAAD;AADiB,CAAL,CAA7B;;AAIA,eAAeH,OAAO,CAAC6B,eAAD,CAAP,CAAyB3B,KAAzB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport styles from './ChartModal.module.css';\nimport Chart from '../Chart';\nimport sprite from '../../../icons/symbol-defs.svg';\nimport { connect } from 'react-redux';\nimport { getTasks } from '../../../redux/tasks/task-selectors';\n\nclass Modal extends Component {\n  state = {\n    modal: false,\n  };\n  componentDidMount() {\n    window.addEventListener('keydown', this.handlekeydown);\n  }\n\n  componentDidUpdate() {\n    const body = document.querySelector('body');\n    body.style.overflow = this.state.modal ? 'hidden' : 'auto';\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handlekeydown);\n  }\n  toggleModal = () => {\n    this.setState(({ modal }) => ({ modal: !modal }));\n  };\n  handlekeydown = e => {\n    if (e.code === 'Escape') {\n      this.toggleModal();\n    }\n  };\n  render() {\n    return (\n      <>\n        {this.props.tasks.length > 2 && (\n          <button\n            type=\"button\"\n            className={styles.buttonAdd}\n            onClick={this.toggleModal}\n          >\n            <svg className={styles.icon}>\n              <use href={sprite + '#icon-analytics'}></use>\n            </svg>\n          </button>\n        )}\n\n        {this.state.modal && (\n          <div className={styles.Overlay}>\n            <div className={styles.Modal}>\n              <Chart />\n            </div>\n          </div>\n        )}\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  tasks: getTasks(state),\n});\n\nexport default connect(mapStateToProps)(Modal);\n"]},"metadata":{},"sourceType":"module"}