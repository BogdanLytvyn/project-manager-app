{"ast":null,"code":"import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport { persistStore, persistReducer, FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport authReducer from './auth/auth-reducers';\nimport projects from './projects/projects-reducers';\nimport sprints from './sprints/sprints-reducers';\nimport tasksReducer from './tasks/task-reducers';\nconst middleware = [...getDefaultMiddleware({\n  serializableCheck: {\n    ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n  }\n})];\nconst authPersistConfig = {\n  key: 'auth',\n  storage,\n  whitelist: ['token']\n};\nconst store = configureStore({\n  reducer: {\n    auth: persistReducer(authPersistConfig, authReducer),\n    projects: projects,\n    sprints: sprints,\n    tasks: tasksReducer\n  },\n  middleware\n});\nconst persistor = persistStore(store);\nexport { store, persistor };","map":{"version":3,"sources":["/home/bogdan/project-manager-app/src/redux/store.js"],"names":["configureStore","getDefaultMiddleware","persistStore","persistReducer","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","storage","authReducer","projects","sprints","tasksReducer","middleware","serializableCheck","ignoredActions","authPersistConfig","key","whitelist","store","reducer","auth","tasks","persistor"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,oBAAzB,QAAqD,kBAArD;AACA,SACEC,YADF,EAEEC,cAFF,EAGEC,KAHF,EAIEC,SAJF,EAKEC,KALF,EAMEC,OANF,EAOEC,KAPF,EAQEC,QARF,QASO,eATP;AAWA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,OAAOC,QAAP,MAAqB,8BAArB;AACA,OAAOC,OAAP,MAAoB,4BAApB;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AAEA,MAAMC,UAAU,GAAG,CACjB,GAAGd,oBAAoB,CAAC;AACtBe,EAAAA,iBAAiB,EAAE;AACjBC,IAAAA,cAAc,EAAE,CAACb,KAAD,EAAQC,SAAR,EAAmBC,KAAnB,EAA0BC,OAA1B,EAAmCC,KAAnC,EAA0CC,QAA1C;AADC;AADG,CAAD,CADN,CAAnB;AAQA,MAAMS,iBAAiB,GAAG;AACxBC,EAAAA,GAAG,EAAE,MADmB;AAExBT,EAAAA,OAFwB;AAGxBU,EAAAA,SAAS,EAAE,CAAC,OAAD;AAHa,CAA1B;AAMA,MAAMC,KAAK,GAAGrB,cAAc,CAAC;AAC3BsB,EAAAA,OAAO,EAAE;AACPC,IAAAA,IAAI,EAAEpB,cAAc,CAACe,iBAAD,EAAoBP,WAApB,CADb;AAEPC,IAAAA,QAAQ,EAAEA,QAFH;AAGPC,IAAAA,OAAO,EAAEA,OAHF;AAIPW,IAAAA,KAAK,EAAEV;AAJA,GADkB;AAO3BC,EAAAA;AAP2B,CAAD,CAA5B;AAUA,MAAMU,SAAS,GAAGvB,YAAY,CAACmB,KAAD,CAA9B;AAEA,SAASA,KAAT,EAAgBI,SAAhB","sourcesContent":["import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\n\nimport storage from 'redux-persist/lib/storage';\nimport authReducer from './auth/auth-reducers';\nimport projects from './projects/projects-reducers';\nimport sprints from './sprints/sprints-reducers';\nimport tasksReducer from './tasks/task-reducers';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n];\n\nconst authPersistConfig = {\n  key: 'auth',\n  storage,\n  whitelist: ['token'],\n};\n\nconst store = configureStore({\n  reducer: {\n    auth: persistReducer(authPersistConfig, authReducer),\n    projects: projects,\n    sprints: sprints,\n    tasks: tasksReducer,\n  },\n  middleware,\n});\n\nconst persistor = persistStore(store);\n\nexport { store, persistor };\n"]},"metadata":{},"sourceType":"module"}