{"ast":null,"code":"var _jsxFileName = \"/home/bogdan/project-manager-app/src/components/taskPageContent/sprintListSideBar/SprintListSideBar.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport RoundButton from '../../../shared/roundButton/RoundButton';\nimport styles from './SprintListSideBar.module.css';\nimport MainModal from '../../../shared/mainModal/MainModal';\nimport 小reateSprintForm from '../../createSprintForm/CreateSprintForm';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getSprintsSelector, loaderSelector } from '../../../redux/sprints/sprints-selectors';\nimport { fetchSprints } from '../../../redux/sprints/sprints-operations';\nimport { useParams, Link, NavLink } from 'react-router-dom';\nimport ButtonShow from '../../../shared/buttonShow/ButtonShow';\nimport Loader from '../../loader/Loader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SprintList = () => {\n  _s();\n\n  const [showModal, setShowModal] = useState(false);\n  const sprintsList = useSelector(getSprintsSelector);\n  const isLoading = useSelector(loaderSelector);\n  const params = useParams();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchSprints(params.projectId));\n  }, [dispatch, params.projectId, params.history]);\n  useEffect(() => {\n    const body = document.querySelector('body');\n    body.style.overflow = showModal ? 'hidden' : 'auto';\n  }, [showModal]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.sprintsContainer,\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      className: styles.sprintsButtonBackContainer,\n      to: `/projects/${params.projectId}`,\n      children: [/*#__PURE__*/_jsxDEV(ButtonShow, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.showProject,\n        children: \"Show sprints\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.leftPanelSprintsContainer,\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: styles.sprintsList,\n        children: isLoading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this) : sprintsList.map(({\n          title,\n          _id\n        }) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(NavLink, {\n            className: styles.item,\n            activeClassName: styles.activeItem,\n            to: `${_id}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.sprintIcon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 17\n          }, this)\n        }, _id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.sideButtonBox,\n      children: [/*#__PURE__*/_jsxDEV(RoundButton, {\n        onClick: () => setShowModal(true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.buttonTag,\n        children: \"Create sprint\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MainModal, {\n        showModal: showModal,\n        setShowModal: setShowModal,\n        onClose: () => setShowModal(false),\n        children: /*#__PURE__*/_jsxDEV(小reateSprintForm, {\n          onClose: () => setShowModal(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SprintList, \"D5ZC3Rpph8+uMP6I27Zwzsi5L3U=\", false, function () {\n  return [useSelector, useSelector, useParams, useDispatch];\n});\n\n_c = SprintList;\nexport default SprintList;\n\nvar _c;\n\n$RefreshReg$(_c, \"SprintList\");","map":{"version":3,"sources":["/home/bogdan/project-manager-app/src/components/taskPageContent/sprintListSideBar/SprintListSideBar.jsx"],"names":["React","useState","useEffect","RoundButton","styles","MainModal","小reateSprintForm","useSelector","useDispatch","getSprintsSelector","loaderSelector","fetchSprints","useParams","Link","NavLink","ButtonShow","Loader","SprintList","showModal","setShowModal","sprintsList","isLoading","params","dispatch","projectId","history","body","document","querySelector","style","overflow","sprintsContainer","sprintsButtonBackContainer","showProject","leftPanelSprintsContainer","map","title","_id","item","activeItem","sprintIcon","sideButtonBox","buttonTag"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport RoundButton from '../../../shared/roundButton/RoundButton';\r\nimport styles from './SprintListSideBar.module.css';\r\nimport MainModal from '../../../shared/mainModal/MainModal';\r\nimport 小reateSprintForm from '../../createSprintForm/CreateSprintForm';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n  getSprintsSelector,\r\n  loaderSelector,\r\n} from '../../../redux/sprints/sprints-selectors';\r\nimport { fetchSprints } from '../../../redux/sprints/sprints-operations';\r\nimport { useParams, Link, NavLink } from 'react-router-dom';\r\nimport ButtonShow from '../../../shared/buttonShow/ButtonShow';\r\nimport Loader from '../../loader/Loader';\r\n\r\nconst SprintList = () => {\r\n  const [showModal, setShowModal] = useState(false);\r\n  const sprintsList = useSelector(getSprintsSelector);\r\n  const isLoading = useSelector(loaderSelector);\r\n\r\n  const params = useParams();\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchSprints(params.projectId));\r\n  }, [dispatch, params.projectId, params.history]);\r\n\r\n  useEffect(() => {\r\n    const body = document.querySelector('body');\r\n    body.style.overflow = showModal ? 'hidden' : 'auto';\r\n  }, [showModal]);\r\n\r\n  return (\r\n    <div className={styles.sprintsContainer}>\r\n      <Link\r\n        className={styles.sprintsButtonBackContainer}\r\n        to={`/projects/${params.projectId}`}\r\n      >\r\n        <ButtonShow />\r\n        <p className={styles.showProject}>Show sprints</p>\r\n      </Link>\r\n\r\n      <div className={styles.leftPanelSprintsContainer}>\r\n        <ul className={styles.sprintsList}>\r\n          {isLoading ? (\r\n            <Loader />\r\n          ) : (\r\n            sprintsList.map(({ title, _id }) => (\r\n              <li key={_id}>\r\n                <NavLink\r\n                  className={styles.item}\r\n                  activeClassName={styles.activeItem}\r\n                  to={`${_id}`}\r\n                >\r\n                  <div className={styles.sprintIcon}></div>\r\n                  <p>{title}</p>\r\n                </NavLink>\r\n              </li>\r\n            ))\r\n          )}\r\n        </ul>\r\n      </div>\r\n      <div className={styles.sideButtonBox}>\r\n        <RoundButton onClick={() => setShowModal(true)} />\r\n\r\n        <p className={styles.buttonTag}>Create sprint</p>\r\n        <MainModal\r\n          showModal={showModal}\r\n          setShowModal={setShowModal}\r\n          onClose={() => setShowModal(false)}\r\n        >\r\n          <小reateSprintForm onClose={() => setShowModal(false)} />\r\n        </MainModal>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SprintList;\r\n"]},"metadata":{},"sourceType":"module"}