{"ast":null,"code":"import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport { addSprintRequest, addSprintSucces, addSprintError, deleteSprintRequest, deleteSprintSucces, deleteSprintError, fetchSprintsRequest, fetchSprintsSucces, changeTitleSuccess, fetchSprintsError } from './sprints-actions';\nconst sprintsReducer = createReducer([], {\n  [changeTitleSuccess]: (state, {\n    payload\n  }) => {\n    const idx = state.findIndex(item => item._id === payload.sprintId);\n    const sprint = state[idx];\n    return [...state.slice(0, idx), { ...sprint,\n      title: payload.title\n    }, ...state.slice(idx + 1)];\n  },\n  [fetchSprintsSucces]: (_, {\n    payload\n  }) => payload,\n  [addSprintSucces]: (state, {\n    payload\n  }) => [...state, payload],\n  [deleteSprintSucces]: (state, {\n    payload\n  }) => state.filter(item => item._id !== payload)\n});\nconst loading = createReducer(false, {\n  [addSprintRequest]: () => true,\n  [addSprintSucces]: () => false,\n  [addSprintError]: () => false,\n  [deleteSprintRequest]: () => true,\n  [deleteSprintSucces]: () => false,\n  [deleteSprintError]: () => false,\n  [fetchSprintsRequest]: () => true,\n  [fetchSprintsSucces]: () => false,\n  [fetchSprintsError]: () => false\n});\n\nconst handleError = (_, {\n  payload\n}) => {\n  var _payload$response;\n\n  return payload === null || payload === void 0 ? void 0 : (_payload$response = payload.response) === null || _payload$response === void 0 ? void 0 : _payload$response.data;\n};\n\nconst clearError = () => null;\n\nconst error = createReducer(null, {\n  [fetchSprintsRequest]: clearError,\n  [fetchSprintsError]: handleError,\n  [addSprintRequest]: clearError,\n  [addSprintError]: handleError,\n  [deleteSprintRequest]: clearError,\n  [deleteSprintError]: handleError\n}); // const error = createReducer(null, {});\n\nexport default combineReducers({\n  sprintsReducer,\n  loading,\n  error\n});","map":{"version":3,"sources":["/home/bogdan/project-manager-app/src/redux/sprints/sprints-reducers.js"],"names":["combineReducers","createReducer","addSprintRequest","addSprintSucces","addSprintError","deleteSprintRequest","deleteSprintSucces","deleteSprintError","fetchSprintsRequest","fetchSprintsSucces","changeTitleSuccess","fetchSprintsError","sprintsReducer","state","payload","idx","findIndex","item","_id","sprintId","sprint","slice","title","_","filter","loading","handleError","response","data","clearError","error"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,SACEC,gBADF,EAEEC,eAFF,EAGEC,cAHF,EAIEC,mBAJF,EAKEC,kBALF,EAMEC,iBANF,EAOEC,mBAPF,EAQEC,kBARF,EASEC,kBATF,EAUEC,iBAVF,QAWO,mBAXP;AAaA,MAAMC,cAAc,GAAGX,aAAa,CAAC,EAAD,EAAK;AACvC,GAACS,kBAAD,GAAsB,CAACG,KAAD,EAAQ;AAAEC,IAAAA;AAAF,GAAR,KAAwB;AAC5C,UAAMC,GAAG,GAAGF,KAAK,CAACG,SAAN,CAAgBC,IAAI,IAAIA,IAAI,CAACC,GAAL,KAAaJ,OAAO,CAACK,QAA7C,CAAZ;AACA,UAAMC,MAAM,GAAGP,KAAK,CAACE,GAAD,CAApB;AACA,WAAO,CACL,GAAGF,KAAK,CAACQ,KAAN,CAAY,CAAZ,EAAeN,GAAf,CADE,EAEL,EAAE,GAAGK,MAAL;AAAaE,MAAAA,KAAK,EAAER,OAAO,CAACQ;AAA5B,KAFK,EAGL,GAAGT,KAAK,CAACQ,KAAN,CAAYN,GAAG,GAAG,CAAlB,CAHE,CAAP;AAKD,GATsC;AAUvC,GAACN,kBAAD,GAAsB,CAACc,CAAD,EAAI;AAAET,IAAAA;AAAF,GAAJ,KAAoBA,OAVH;AAWvC,GAACX,eAAD,GAAmB,CAACU,KAAD,EAAQ;AAAEC,IAAAA;AAAF,GAAR,KAAwB,CAAC,GAAGD,KAAJ,EAAWC,OAAX,CAXJ;AAYvC,GAACR,kBAAD,GAAsB,CAACO,KAAD,EAAQ;AAAEC,IAAAA;AAAF,GAAR,KACpBD,KAAK,CAACW,MAAN,CAAaP,IAAI,IAAIA,IAAI,CAACC,GAAL,KAAaJ,OAAlC;AAbqC,CAAL,CAApC;AAgBA,MAAMW,OAAO,GAAGxB,aAAa,CAAC,KAAD,EAAQ;AACnC,GAACC,gBAAD,GAAoB,MAAM,IADS;AAEnC,GAACC,eAAD,GAAmB,MAAM,KAFU;AAGnC,GAACC,cAAD,GAAkB,MAAM,KAHW;AAInC,GAACC,mBAAD,GAAuB,MAAM,IAJM;AAKnC,GAACC,kBAAD,GAAsB,MAAM,KALO;AAMnC,GAACC,iBAAD,GAAqB,MAAM,KANQ;AAOnC,GAACC,mBAAD,GAAuB,MAAM,IAPM;AAQnC,GAACC,kBAAD,GAAsB,MAAM,KARO;AASnC,GAACE,iBAAD,GAAqB,MAAM;AATQ,CAAR,CAA7B;;AAYA,MAAMe,WAAW,GAAG,CAACH,CAAD,EAAI;AAAET,EAAAA;AAAF,CAAJ;AAAA;;AAAA,SAAoBA,OAApB,aAAoBA,OAApB,4CAAoBA,OAAO,CAAEa,QAA7B,sDAAoB,kBAAmBC,IAAvC;AAAA,CAApB;;AACA,MAAMC,UAAU,GAAG,MAAM,IAAzB;;AAEA,MAAMC,KAAK,GAAG7B,aAAa,CAAC,IAAD,EAAO;AAChC,GAACO,mBAAD,GAAuBqB,UADS;AAEhC,GAAClB,iBAAD,GAAqBe,WAFW;AAGhC,GAACxB,gBAAD,GAAoB2B,UAHY;AAIhC,GAACzB,cAAD,GAAkBsB,WAJc;AAKhC,GAACrB,mBAAD,GAAuBwB,UALS;AAMhC,GAACtB,iBAAD,GAAqBmB;AANW,CAAP,CAA3B,C,CASA;;AAEA,eAAe1B,eAAe,CAAC;AAC7BY,EAAAA,cAD6B;AAE7Ba,EAAAA,OAF6B;AAG7BK,EAAAA;AAH6B,CAAD,CAA9B","sourcesContent":["import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  addSprintRequest,\r\n  addSprintSucces,\r\n  addSprintError,\r\n  deleteSprintRequest,\r\n  deleteSprintSucces,\r\n  deleteSprintError,\r\n  fetchSprintsRequest,\r\n  fetchSprintsSucces,\r\n  changeTitleSuccess,\r\n  fetchSprintsError,\r\n} from './sprints-actions';\r\n\r\nconst sprintsReducer = createReducer([], {\r\n  [changeTitleSuccess]: (state, { payload }) => {\r\n    const idx = state.findIndex(item => item._id === payload.sprintId);\r\n    const sprint = state[idx];\r\n    return [\r\n      ...state.slice(0, idx),\r\n      { ...sprint, title: payload.title },\r\n      ...state.slice(idx + 1),\r\n    ];\r\n  },\r\n  [fetchSprintsSucces]: (_, { payload }) => payload,\r\n  [addSprintSucces]: (state, { payload }) => [...state, payload],\r\n  [deleteSprintSucces]: (state, { payload }) =>\r\n    state.filter(item => item._id !== payload),\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [addSprintRequest]: () => true,\r\n  [addSprintSucces]: () => false,\r\n  [addSprintError]: () => false,\r\n  [deleteSprintRequest]: () => true,\r\n  [deleteSprintSucces]: () => false,\r\n  [deleteSprintError]: () => false,\r\n  [fetchSprintsRequest]: () => true,\r\n  [fetchSprintsSucces]: () => false,\r\n  [fetchSprintsError]: () => false,\r\n});\r\n\r\nconst handleError = (_, { payload }) => payload?.response?.data;\r\nconst clearError = () => null;\r\n\r\nconst error = createReducer(null, {\r\n  [fetchSprintsRequest]: clearError,\r\n  [fetchSprintsError]: handleError,\r\n  [addSprintRequest]: clearError,\r\n  [addSprintError]: handleError,\r\n  [deleteSprintRequest]: clearError,\r\n  [deleteSprintError]: handleError,\r\n});\r\n\r\n// const error = createReducer(null, {});\r\n\r\nexport default combineReducers({\r\n  sprintsReducer,\r\n  loading,\r\n  error,\r\n});\r\n"]},"metadata":{},"sourceType":"module"}