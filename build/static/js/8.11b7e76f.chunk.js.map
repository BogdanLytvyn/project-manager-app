{"version":3,"sources":["shared/button/Button.jsx","shared/roundButton/RoundButton.jsx","shared/cancelButton/CancelButton.jsx","shared/mainModal/MainModal.jsx","shared/button/Button.module.css","redux/projects/projects-selectors.js","container.module.css","shared/roundButton/RoundButton.module.css","shared/mainModal/MainModal.module.css","shared/cancelButton/CancelButton.module.css","components/projectForm/ProjectForm.jsx","components/projectForm/ProjectForm.module.css","components/projectsList/ProjectsList.module.css","components/projectsList/projectItem/ProjectItem.module.css","pages/projectsPage/ProjectsPage.module.css","components/projectsList/projectItem/ProjectItem.jsx","components/projectsList/ProjectsList.jsx","pages/projectsPage/ProjectsPage.jsx"],"names":["Button","children","type","className","styles","button","RoundButton","onClick","buttonAdd","icon","href","sprite","CancelButton","onClose","style","cancelBtn","modalRoot","document","querySelector","MainModal","showModal","setShowModal","modalRef","useRef","createPortal","mainModal","ref","evt","target","current","container","closeBtn","module","exports","getProjectsSelector","state","projects","getProjectLoading","loading","formSchema","Yup","shape","title","min","required","description","ProjectForm","dispatch","useDispatch","formContainer","titleForm","initialValues","validationSchema","onSubmit","values","createProject","form","inputName","name","placeholder","errorName","component","inputDescription","errorDescription","ProjectItem","item","match","useRouteMatch","projectItem","waveBox","projectLink","to","url","_id","id","buttonDelete","deleteProject","deleteIcon","ProjectsList","useSelector","isLoading","box","Loader","length","emptyMessageBox","emptyMessage","projectList","map","ProjectsPage","useState","useEffect","overflow","pageBox","pageCreate","pageTitle","buttonBox","pageText"],"mappings":"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","file":"static/js/8.11b7e76f.chunk.js","sourcesContent":["import React from 'react';\nimport styles from './Button.module.css';\n\nconst Button = ({ children }) => {\n  return (\n    <button type=\"submit\" className={styles.button}>\n      {children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from 'react';\nimport styles from './RoundButton.module.css';\nimport sprite from '../../icons/symbol-defs.svg';\n\nconst RoundButton = ({ onClick }) => {\n  return (\n    <>\n      <button type=\"button\" className={styles.buttonAdd} onClick={onClick}>\n        <svg className={styles.icon}>\n          <use href={sprite + '#icon-add-plus'}></use>\n        </svg>\n      </button>\n    </>\n  );\n};\n\nexport default RoundButton;\n","import React from 'react';\nimport style from './CancelButton.module.css';\n\nconst CancelButton = ({ onClose }) => {\n  return (\n    <button type=\"button\" className={style.cancelBtn} onClick={() => onClose()}>\n      Cancel\n    </button>\n  );\n};\n\nexport default CancelButton;\n","import React, { useRef } from 'react';\nimport { createPortal } from \"react-dom\";\nimport styles from './MainModal.module.css';\nimport sprite from '../../icons/symbol-defs.svg';\nimport CancelButton from '../cancelButton/CancelButton';\n\nconst modalRoot  = document.querySelector(\"#modal_root\")\n\nconst MainModal = ({ children, showModal, onClose, setShowModal }) => {\n  const modalRef = useRef();\n\n  const closeModal = evt => {\n    if (evt.target === modalRef.current) {\n      setShowModal(false);\n    }\n  };\n\n  return createPortal(\n    showModal && (\n      <div className={styles.mainModal} ref={modalRef} onClick={closeModal}>\n        <div className={styles.container}>\n          <button\n            type=\"button\"\n            className={styles.closeBtn}\n            onClick={() => onClose()}\n          >\n            <svg className={styles.icon}>\n              <use href={sprite + '#icon-cross'} />\n            </svg>\n          </button>\n          {children}\n\n          <CancelButton onClose={onClose} />\n        </div>\n      </div>\n    ), modalRoot\n  );\n};\n\nexport default MainModal;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"accentColor\":\"#FF6B08\",\"greyColor\":\"rgba(24, 28, 39, 0.6)\",\"button\":\"Button_button__1csGM\"};","export const getProjectsSelector = state => state.projects.projects;\nexport const getProjectLoading = state => state.projects.loading;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"container_container__3gKmY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonAdd\":\"RoundButton_buttonAdd__3unmk\",\"icon\":\"RoundButton_icon__CqCfn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainModal\":\"MainModal_mainModal__3SbSP\",\"container\":\"MainModal_container__3B2_h\",\"closeBtn\":\"MainModal_closeBtn__1S1H9\",\"icon\":\"MainModal_icon__2kBcJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cancelBtn\":\"CancelButton_cancelBtn__2DQf9\"};","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport styles from './ProjectForm.module.css';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { createProject } from '../../redux/projects/projects-operations';\nimport Button from '../../shared/button/Button';\n\nconst formSchema = Yup.object().shape({\n  title: Yup.string()\n    .min(3, 'Too short!')\n    .required('* Project Name is a required field'),\n  description: Yup.string()\n    .min(4, 'Too short!')\n    .required('* Description is a required field'),\n});\n\nconst ProjectForm = ({ onClose }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <div className={styles.formContainer}>\n      <h2 className={styles.titleForm}>Create new project</h2>\n      <Formik\n        initialValues={{\n          title: '',\n          description: '',\n        }}\n        validationSchema={formSchema}\n        onSubmit={values => {\n          createProject(values);\n          dispatch(createProject(values));\n          onClose();\n        }}\n      >\n        <Form className={styles.form}>\n          <Field\n            className={styles.inputName}\n            name=\"title\"\n            type=\"text\"\n            placeholder=\"Project name\"\n          />\n          <ErrorMessage\n            className={styles.errorName}\n            component=\"span\"\n            name=\"title\"\n          />\n\n          <Field\n            className={styles.inputDescription}\n            name=\"description\"\n            type=\"text\"\n            placeholder=\"Project description\"\n          />\n\n          <ErrorMessage\n            className={styles.errorDescription}\n            component=\"span\"\n            name=\"description\"\n          />\n          <Button type=\"submit\">Done</Button>\n        </Form>\n      </Formik>\n    </div>\n  );\n};\n\nexport default ProjectForm;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"accentColor\":\"#FF6B08\",\"greyColor\":\"rgba(24, 28, 39, 0.6)\",\"titleForm\":\"ProjectForm_titleForm__bCDh-\",\"inputName\":\"ProjectForm_inputName__dWgUA\",\"inputDescription\":\"ProjectForm_inputDescription__2_-cW\",\"errorName\":\"ProjectForm_errorName__YD2lV\",\"errorDescription\":\"ProjectForm_errorDescription__1uU2q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"emptyMessageBox\":\"ProjectsList_emptyMessageBox__eFW3F\",\"emptyMessage\":\"ProjectsList_emptyMessage__2AUIx\",\"projectList\":\"ProjectsList_projectList__FJK7t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"projectItem\":\"ProjectItem_projectItem__1F9-R\",\"projectLink\":\"ProjectItem_projectLink__2YWaO\",\"buttonDelete\":\"ProjectItem_buttonDelete__FRtjj\",\"title\":\"ProjectItem_title__3YKpq\",\"description\":\"ProjectItem_description__3vUXL\",\"deleteIcon\":\"ProjectItem_deleteIcon__3nr8w\",\"scale-up-center\":\"ProjectItem_scale-up-center__2BWFR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageBox\":\"ProjectsPage_pageBox__2CtL7\",\"icon\":\"ProjectsPage_icon__25v80\",\"pageTitle\":\"ProjectsPage_pageTitle__3LQhO\",\"pageText\":\"ProjectsPage_pageText__2yF_o\",\"buttonBox\":\"ProjectsPage_buttonBox__3ukHX\",\"pageCreate\":\"ProjectsPage_pageCreate__1XC1B\"};","import React from 'react';\nimport styles from './ProjectItem.module.css';\nimport sprite from '../../../icons/symbol-defs.svg';\nimport { useDispatch } from 'react-redux';\nimport { Link, useRouteMatch } from 'react-router-dom';\nimport { deleteProject } from '../../../redux/projects/projects-operations';\n\nconst ProjectItem = ({ item }) => {\n  const dispatch = useDispatch();\n  const deleteItem = () => dispatch(deleteProject(item._id));\n  const match = useRouteMatch();\n  return (\n    <li className={styles.projectItem}>\n      <div className={styles.waveBox}>\n        <Link\n          className={styles.projectLink}\n          to={`${match.url}/${item._id}`}\n          id={item._id}\n        >\n          <h3 className={styles.title}>{item.title}</h3>\n          <p className={styles.description}>{item.description}</p>\n        </Link>\n        <button\n          type=\"button\"\n          className={styles.buttonDelete}\n          onClick={deleteItem}\n        >\n          <svg className={styles.deleteIcon}>\n            <use href={sprite + '#icon-delete-bin'}></use>\n          </svg>\n        </button>\n      </div>\n    </li>\n  );\n};\n\nexport default ProjectItem;\n","import React from 'react';\nimport styles from './ProjectsList.module.css';\nimport ProjectItem from './projectItem/ProjectItem';\nimport { useSelector } from 'react-redux';\nimport {\n  getProjectsSelector,\n  getProjectLoading,\n} from '../../redux/projects/projects-selectors';\nimport Loader from '../loader/Loader';\n\nconst ProjectsList = () => {\n  const projects = useSelector(getProjectsSelector);\n  const isLoading = useSelector(getProjectLoading);\n\n  return (\n    <div className={styles.box}>\n      {isLoading ? (\n        <Loader />\n      ) : (\n        !projects.length && (\n          <div className={styles.emptyMessageBox}>\n            <h2 className={styles.emptyMessage}>\n              Your project collection is empty, use the \"Create project\" button.\n            </h2>\n          </div>\n        )\n      )}\n      {!!projects.length && (\n        <ul className={styles.projectList}>\n          {projects.map(item => (\n            <ProjectItem key={item._id} item={item} />\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default ProjectsList;\n","import React, { useEffect, useState } from 'react';\nimport ProjectsList from '../../components/projectsList/ProjectsList';\nimport styles from './ProjectsPage.module.css';\nimport RoundButton from '../../shared/roundButton/RoundButton';\nimport MainModal from '../../shared/mainModal/MainModal';\nimport ProjectForm from '../../components/projectForm/ProjectForm';\nimport { container } from '../../container.module.css';\n\nconst ProjectsPage = () => {\n  const [showModal, setShowModal] = useState(false);\n\n  useEffect(() => {\n    const body = document.querySelector('body');\n    body.style.overflow = showModal ? 'hidden' : 'auto';\n  }, [showModal]);\n\n  return (\n    <div className={container}>\n      <div className={styles.pageBox}>\n        <div className={styles.pageCreate}>\n          <h2 className={styles.pageTitle}>PROJECTS</h2>\n          <div className={styles.buttonBox}>\n            <RoundButton onClick={() => setShowModal(true)} />\n            <p className={styles.pageText}>Create project</p>\n          </div>\n        </div>\n        <ProjectsList />\n        <MainModal\n          showModal={showModal}\n          setShowModal={setShowModal}\n          onClose={() => setShowModal(false)}\n        >\n          <ProjectForm onClose={() => setShowModal(false)} />\n        </MainModal>\n      </div>\n    </div>\n  );\n};\n\nexport default ProjectsPage;\n"],"sourceRoot":""}