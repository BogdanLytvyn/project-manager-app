{"version":3,"sources":["components/taskPageContent/taskList/TaskList.module.css","components/taskListItem/TaskListItem.module.css","components/graph/modal/ChartModal.module.css","components/graph/Chart.module.css","components/taskPageContent/taskHeader/TaskHeader.module.css","components/taskForm/TaskForm.module.css","components/titleEditor/TitleEditor.module.css","components/taskPageContent/taskFilter/TaskFilter.module.css","components/taskPageContent/sprintListSideBar/SprintListSideBar.module.css","redux/tasks/task-operations.js","components/taskListItem/TaskListItem.jsx","redux/tasks/task-selectors.js","components/graph/Chart.jsx","components/graph/modal/ChartModal.jsx","components/taskPageContent/taskList/TaskList.jsx","components/taskForm/TaskForm.jsx","components/titleEditor/TitleEditor.jsx","components/taskPageContent/taskFilter/TaskFilter.jsx","components/taskPageContent/taskHeader/TaskHeader.jsx","components/taskPageContent/sprintListSideBar/SprintListSideBar.jsx","pages/tasksPage/TasksPage.jsx"],"names":["module","exports","axios","defaults","baseURL","fetchTasks","sprintId","dispatch","a","fetchTaskRequest","get","data","fetchTaskSuccess","constructor","name","fetchTaskError","message","refreshTemplate","createTask","task","createTaskRequest","post","createTaskSuccess","_id","id","createTaskError","deleteTask","taskId","deleteTaskRequest","delete","deleteTaskSuccess","deleteTaskError","changeTask","hoursWasted","currentDay","changeTaskRequest","patch","date","hours","changeTaskSuccess","day","singleHoursWasted","newWastedHours","changeTaskError","TaskListItem","item","taskDate","useDispatch","useState","setHours","useEffect","hoursWastedPerDay","find","Date","getDate","className","styles","card","title","list","itemName","hoursPlanned","input","type","onChange","e","Number","target","value","onBlur","preventDefault","getFullYear","getMonth","toString","padStart","onClick","button","icon","href","sprite","getTasks","state","tasks","getFilter","filter","getCurrentDay","getLoading","loading","getVisibleTasks","createSelector","normalizedFilter","toLowerCase","includes","LineDemo","getAll","useSelector","months","sumRedLine","reduce","cnt","labels","map","i","arr","split","replace","datasets","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","multipleHoursWasted","_","flattenDeep","groupBy","sumBy","otherDaysBlueLine","sumAllRedLine","length","push","otherDaysRedLine","chartContainer","graphcontainer","width","height","options","maintainAspectRatio","Modal","modal","toggleModal","setState","handlekeydown","code","window","addEventListener","this","document","querySelector","style","overflow","removeEventListener","props","buttonAdd","Overlay","Chart","Component","connect","TaskList","useParams","isLoading","Loader","emptyMessageBox","emptyMessage","taskList","taskCard","ChartModal","formSchema","Yup","shape","required","lessThan","positive","integer","TaskForm","onClose","formContainer","titleForm","initialValues","validationSchema","onSubmit","values","form","inputName","placeholder","errorName","component","inputTime","errorTime","Button","ChangeTitle","setInput","isUpdate","setUpdate","sprint","getSprintsSelector","isActive","setActive","onChangeTitle","onFormSubmit","editTitle","wrapper","sprintTitle","changeTitleButton","AutosizeInput","maxLength","inputClassName","titleChangeInput","autoFocus","autoComplete","changeTitleButton2","TaskFilter","handleChange","event","changeFilter","searchContainer","searchInputActive","searchBtn","iconSearch","SprintHeader","setTaskDate","showModal","setShowModal","sprints","startDate","duration","endDate","_MS_PER_DAY","now","setCurrentDay","sprintDay","setSprintDay","curDay","result","parse","Math","floor","headerWrapper","sprintHeader","controlAndSearchBlock","controlPanel","switch","leftArrow","prev","invisibleArrow","separator","totalDays","rightArrow","toJSON","slice","reverse","join","control","baseWrapper","buttonBox","RoundButton","buttonDescription","tasksHeader","tasksHeaderText","MainModal","SprintList","sprintsList","loaderSelector","params","fetchSprints","projectId","history","sprintsContainer","sprintsButtonBackContainer","to","ButtonShow","showProject","leftPanelSprintsContainer","activeClassName","activeItem","sprintIcon","sideButtonBox","buttonTag","TasksPage","MainPageContainer","LeftBar","SprintListSideBar","RightBar","RightItemBar"],"mappings":"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","file":"static/js/9.8fc060b2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"emptyMessageBox\":\"TaskList_emptyMessageBox__2aLsM\",\"emptyMessage\":\"TaskList_emptyMessage__3ePiI\",\"taskList\":\"TaskList_taskList__3kmhD\",\"taskCard\":\"TaskList_taskCard__vep3D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"accentColor\":\"#FF6B08\",\"card\":\"TaskListItem_card__11Qo2\",\"title\":\"TaskListItem_title__2GYsL\",\"item\":\"TaskListItem_item__1NRye\",\"input\":\"TaskListItem_input__20exu\",\"button\":\"TaskListItem_button__19Wic\",\"icon\":\"TaskListItem_icon__1KF7b\",\"list\":\"TaskListItem_list__1_ekI\",\"itemName\":\"TaskListItem_itemName__lZbjY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"ChartModal_Overlay__XKolv\",\"Modal\":\"ChartModal_Modal__1CeDF\",\"CastModalImg\":\"ChartModal_CastModalImg__1C1uT\",\"buttonAdd\":\"ChartModal_buttonAdd__s_LQV\",\"icon\":\"ChartModal_icon__utZTT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chartContainer\":\"Chart_chartContainer__1VUy_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sprintHeader\":\"TaskHeader_sprintHeader__26o-q\",\"baseWrapper\":\"TaskHeader_baseWrapper__uegdt\",\"controlPanel\":\"TaskHeader_controlPanel__3sktY\",\"switch\":\"TaskHeader_switch__BWbZN\",\"separator\":\"TaskHeader_separator__fOIdp\",\"input\":\"TaskHeader_input__10Hx9\",\"buttonDescription\":\"TaskHeader_buttonDescription__2cAzK\",\"control\":\"TaskHeader_control__1Ne0w\",\"titleBlock\":\"TaskHeader_titleBlock__3WRst\",\"title\":\"TaskHeader_title__sr3-Y\",\"totalDays\":\"TaskHeader_totalDays__NZUl-\",\"date\":\"TaskHeader_date__Tjvka\",\"day\":\"TaskHeader_day__FqwEy\",\"leftArrow\":\"TaskHeader_leftArrow__ESfNv\",\"rightArrow\":\"TaskHeader_rightArrow__38Ge4\",\"controlAndSearchBlock\":\"TaskHeader_controlAndSearchBlock__2ekyf\",\"inputWrapper\":\"TaskHeader_inputWrapper__xG6vh\",\"edit\":\"TaskHeader_edit__2DcMZ\",\"focused\":\"TaskHeader_focused__24bL_\",\"invisibleArrow\":\"TaskHeader_invisibleArrow__2eGgr\",\"tasksHeaderText\":\"TaskHeader_tasksHeaderText__5Sq5G\",\"buttonBox\":\"TaskHeader_buttonBox__2Vs6R\",\"searchBtn\":\"TaskHeader_searchBtn__2DGDa\",\"searchInput\":\"TaskHeader_searchInput__2aS5K\",\"tasksHeader\":\"TaskHeader_tasksHeader__L9JdR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"accentColor\":\"#FF6B08\",\"greyColor\":\"rgba(24, 28, 39, 0.6)\",\"titleForm\":\"TaskForm_titleForm__T451b\",\"inputName\":\"TaskForm_inputName__3WxHy\",\"inputTime\":\"TaskForm_inputTime__3f_Te\",\"errorName\":\"TaskForm_errorName__oITl3\",\"errorTime\":\"TaskForm_errorTime__ZPQNO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"titleChangeInput\":\"TitleEditor_titleChangeInput__1jNX1\",\"wrapper\":\"TitleEditor_wrapper__cSngD\",\"btn\":\"TitleEditor_btn__3EiQt\",\"iconPencil\":\"TitleEditor_iconPencil__ZBr1j\",\"iconSave\":\"TitleEditor_iconSave__1Ej96\",\"changeTitleButton\":\"TitleEditor_changeTitleButton__3MZA-\",\"changeTitleButton2\":\"TitleEditor_changeTitleButton2__1-OIn\",\"sprintTitle\":\"TitleEditor_sprintTitle__lohd0\",\"inputWrapper\":\"TitleEditor_inputWrapper__OG4R9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"iconSearch\":\"TaskFilter_iconSearch__22pgr\",\"searchBtn\":\"TaskFilter_searchBtn__NnvN2\",\"searchLabel\":\"TaskFilter_searchLabel__k8too\",\"searchContainer\":\"TaskFilter_searchContainer__3xFNu\",\"searchInputActive\":\"TaskFilter_searchInputActive__1h0Dz\",\"searchInput\":\"TaskFilter_searchInput__3tw0y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sprintsButtonBackContainer\":\"SprintListSideBar_sprintsButtonBackContainer__lW4Tr\",\"buttonBack\":\"SprintListSideBar_buttonBack__1w2kS\",\"showProject\":\"SprintListSideBar_showProject__2njdi\",\"iconBack\":\"SprintListSideBar_iconBack__3keJA\",\"sprintsButtonCreateContainer\":\"SprintListSideBar_sprintsButtonCreateContainer__2JMDS\",\"sprintsList\":\"SprintListSideBar_sprintsList__2wlXH\",\"leftPanelSprintssContainer\":\"SprintListSideBar_leftPanelSprintssContainer__1SC2M\",\"item\":\"SprintListSideBar_item__1XG6X\",\"sprintIcon\":\"SprintListSideBar_sprintIcon__1rm3c\",\"sideButtonBox\":\"SprintListSideBar_sideButtonBox__9x-DH\",\"leftPanelSprintsContainer\":\"SprintListSideBar_leftPanelSprintsContainer__2BaXB\",\"activeItem\":\"SprintListSideBar_activeItem__2fONZ\",\"buttonTag\":\"SprintListSideBar_buttonTag__2xvuY\"};","import axios from 'axios';\nimport { refreshTemplate } from '../projects/projects-operations.js';\nimport {\n  fetchTaskRequest,\n  fetchTaskSuccess,\n  fetchTaskError,\n  createTaskRequest,\n  createTaskSuccess,\n  createTaskError,\n  deleteTaskRequest,\n  deleteTaskSuccess,\n  deleteTaskError,\n  changeTaskRequest,\n  changeTaskSuccess,\n  changeTaskError,\n} from './task-actions.js';\n\naxios.defaults.baseURL = 'https://sbc-backend.goit.global';\n\nconst fetchTasks = sprintId => async dispatch => {\n  dispatch(fetchTaskRequest());\n  try {\n    const { data } = await axios.get(`/task/${sprintId}`);\n    dispatch(fetchTaskSuccess(data.constructor.name === 'Array' ? data : []));\n  } catch (error) {\n    dispatch(fetchTaskError(error?.message));\n    refreshTemplate(() => fetchTasks(sprintId), error, dispatch);\n  }\n};\n\nconst createTask = (task, sprintId) => async dispatch => {\n  dispatch(createTaskRequest());\n  try {\n    const { data } = await axios.post(`/task/${sprintId}`, task);\n    dispatch(createTaskSuccess({ ...data, _id: data.id }));\n  } catch (error) {\n    dispatch(createTaskError(error?.message));\n    refreshTemplate(() => createTask(task, sprintId), error, dispatch);\n  }\n};\n\nconst deleteTask = taskId => async dispatch => {\n  dispatch(deleteTaskRequest());\n  try {\n    await axios.delete(`/task/${taskId}`);\n    dispatch(deleteTaskSuccess(taskId));\n  } catch (error) {\n    dispatch(deleteTaskError(error?.message));\n    refreshTemplate(() => deleteTask(taskId), error, dispatch);\n  }\n};\n\nconst changeTask = (hoursWasted, taskId, currentDay) => async dispatch => {\n  dispatch(changeTaskRequest());\n  try {\n    const { data } = await axios.patch(`/task/${taskId}`, {\n      date: currentDay,\n      hours: hoursWasted,\n    });\n    dispatch(\n      changeTaskSuccess({\n        currentDay: data.day.currentDay,\n        singleHoursWasted: data.day.singleHoursWasted,\n        hoursWasted: data.newWastedHours,\n        taskId,\n      }),\n    );\n  } catch (error) {\n    dispatch(changeTaskError(error?.message));\n    refreshTemplate(\n      () => changeTask(hoursWasted, taskId, currentDay),\n      error,\n      dispatch,\n    );\n  }\n};\n\nexport { fetchTasks, createTask, deleteTask, changeTask };\n","import React, { useEffect, useState } from 'react';\nimport styles from './TaskListItem.module.css';\nimport sprite from '../../icons/symbol-defs.svg';\nimport { useDispatch } from 'react-redux';\nimport { deleteTask, changeTask } from '../../redux/tasks/task-operations.js';\n\nconst TaskListItem = ({ item, taskDate }) => {\n  const dispatch = useDispatch();\n  const deleteItem = () => dispatch(deleteTask(item._id));\n  const [hours, setHours] = useState(0);\n\n  useEffect(() => {\n    setHours(\n      item.hoursWastedPerDay.find(\n        item =>\n          new Date(item.currentDay).getDate() === new Date(taskDate).getDate(),\n      )?.singleHoursWasted,\n    );\n  }, [taskDate, item]);\n\n  const onHandleChange = e => {\n    const hours = Number(e.target.value);\n    if (hours > 8) return;\n\n    if (hours) {\n      setHours(hours);\n    }\n  };\n\n  const onHandleSubmit = e => {\n    e.preventDefault();\n    const date = new Date(taskDate);\n    const day = `${date.getFullYear()}-${(date.getMonth() + 1)\n      .toString()\n      .padStart(2, '0')}-${date.getDate().toString().padStart(2, '0')}`;\n    dispatch(changeTask(hours, item._id, day));\n  };\n\n  return (\n    <div className={styles.card}>\n      <h2 className={styles.title}>{item.title}</h2>\n      <ul className={styles.list}>\n        <li className={styles.item}>\n          <span className={styles.itemName}>Scheduled hours</span>\n          <span>{item.hoursPlanned}</span>\n        </li>\n        <li className={styles.item}>\n          <span className={styles.itemName}>Hours spent / per day</span>\n          {new Date(item?.hoursWastedPerDay[0].currentDay).getDate() >\n          new Date(taskDate).getDate() ? (\n            <span className={styles.itemName}>0</span>\n          ) : (\n            <input\n              className={styles.input}\n              type=\"number\"\n              onChange={onHandleChange}\n              onBlur={onHandleSubmit}\n              value={hours}\n            />\n          )}\n        </li>\n        <li className={styles.item}>\n          <span className={styles.itemName}>Hours spent</span>\n          <span>{item.hoursWasted}</span>\n        </li>\n        <li className={styles.item}>\n          <span></span>\n          <button onClick={deleteItem} className={styles.button} type=\"button\">\n            <svg className={styles.icon}>\n              <use href={sprite + '#icon-delete-bin'} />\n            </svg>\n          </button>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default TaskListItem;\n","import { createSelector } from 'reselect';\n\nconst getTasks = state => state.tasks.tasks;\nconst getFilter = state => state.tasks.filter;\nconst getCurrentDay = state => state.tasks.currentDay;\nconst getLoading = state => state.tasks.loading;\n\n\nconst getVisibleTasks = createSelector(\n  [getTasks, getFilter],\n  (tasks, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    return tasks.filter(item =>\n      item.title.toLowerCase().includes(normalizedFilter),\n    );\n  },\n);\n\nexport { getTasks, getFilter, getCurrentDay, getVisibleTasks, getLoading };\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { getTasks } from '../../redux/tasks/task-selectors';\nimport styles from './Chart.module.css';\nimport { Line } from 'react-chartjs-2';\nimport _ from 'lodash';\n\nfunction LineDemo() {\n  const getAll = useSelector(getTasks);\n  const months = [\n    '',\n    'JAN',\n    'FEB',\n    'MAR',\n    'APR',\n    'MAY',\n    'JUN',\n    'JUL',\n    'AUG',\n    'SEP',\n    'OCT',\n    'NOV',\n    'DEC',\n  ];\n\n  const sumRedLine = getAll.reduce(function (cnt, getAll) {\n    return cnt + getAll.hoursPlanned;\n  }, 0);\n\n  const otherDaysRedLine = () => {\n    let arr = [];\n    let sumAllRedLine = sumRedLine;\n\n    for (let i = 0; i <= getAll[0].hoursWastedPerDay.length; i++) {\n      sumAllRedLine -= sumRedLine / getAll[0].hoursWastedPerDay.length;\n      arr.push(sumAllRedLine);\n    }\n    return arr;\n  };\n\n  const otherDaysBlueLine = () => {\n    let arrBlueLine = [];\n    let multipleHoursWasted = _.flattenDeep(_.map(getAll, 'hoursWastedPerDay'));\n    multipleHoursWasted = _.groupBy(multipleHoursWasted, 'currentDay');\n    arrBlueLine = _.map(multipleHoursWasted, i => {\n      return _.sumBy(i, i => i.singleHoursWasted);\n    });\n    return arrBlueLine;\n  };\n\n  const labelsDate = getAll[0].hoursWastedPerDay.map(i => i.currentDay);\n\n  const result = labelsDate.map(day => {\n    const arr = day.split('-');\n    return `${arr[2]} ${months[arr[1].replace(/(^|\\s)0/g, '$1')]}`;\n  });\n  const data = {\n    labels: result,\n    datasets: [\n      {\n        label: 'Actual remaining labor in hours',\n        fill: false,\n        lineTension: 0.1,\n        backgroundColor: 'rgba(75,192,192,0.4)',\n        borderColor: 'blue',\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: 'miter',\n        pointBorderColor: 'rgba(75,192,192,1)',\n        pointBackgroundColor: '#fff',\n        pointBorderWidth: 1,\n        pointHoverRadius: 5,\n        pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n        pointHoverBorderColor: 'rgba(220,220,220,1)',\n        pointHoverBorderWidth: 2,\n        pointRadius: 3,\n        pointHitRadius: 10,\n        data: [sumRedLine, ...otherDaysBlueLine()],\n      },\n      {\n        label: 'Planned remaining work in hours',\n        fill: false,\n        lineTension: 0.1,\n        backgroundColor: 'rgba(150,150,0,0.4)',\n        borderColor: 'red',\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: 'miter',\n        pointBorderColor: 'rgba(75,192,192,1)',\n        pointBackgroundColor: '#fff',\n        pointBorderWidth: 1,\n        pointHoverRadius: 5,\n        pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n        pointHoverBorderColor: 'rgba(220,220,220,1)',\n        pointHoverBorderWidth: 2,\n        pointRadius: 3,\n        pointHitRadius: 10,\n        data: [sumRedLine, ...otherDaysRedLine()],\n      },\n    ],\n  };\n\n  return (\n    <div className={styles.chartContainer}>\n      <h2>Burndown Chart (Calendar Team)</h2>\n      <div className={styles.graphcontainer}>\n        <Line\n          data={data}\n          // (windows.width = 1200 ? 900 : 500)\n          width={900}\n          height={460}\n          options={{ maintainAspectRatio: false }}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default LineDemo;\n","import React, { Component } from 'react';\nimport styles from './ChartModal.module.css';\nimport Chart from '../Chart';\nimport sprite from '../../../icons/symbol-defs.svg';\nimport { connect } from 'react-redux';\nimport { getTasks } from '../../../redux/tasks/task-selectors';\n\nclass Modal extends Component {\n  state = {\n    modal: false,\n  };\n  componentDidMount() {\n    window.addEventListener('keydown', this.handlekeydown);\n  }\n\n  componentDidUpdate() {\n    const body = document.querySelector('body');\n    body.style.overflow = this.state.modal ? 'hidden' : 'auto';\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handlekeydown);\n  }\n  toggleModal = () => {\n    this.setState(({ modal }) => ({ modal: !modal }));\n  };\n  handlekeydown = e => {\n    if (e.code === 'Escape') {\n      this.toggleModal();\n    }\n  };\n  render() {\n    return (\n      <>\n        {this.props.tasks.length > 2 && (\n          <button\n            type=\"button\"\n            className={styles.buttonAdd}\n            onClick={this.toggleModal}\n          >\n            <svg className={styles.icon}>\n              <use href={sprite + '#icon-analytics'}></use>\n            </svg>\n          </button>\n        )}\n\n        {this.state.modal && (\n          <div className={styles.Overlay}>\n            <div className={styles.Modal}>\n              <Chart />\n            </div>\n          </div>\n        )}\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  tasks: getTasks(state),\n});\n\nexport default connect(mapStateToProps)(Modal);\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport styles from './TaskList.module.css';\r\nimport TaskListItem from '../../../components/taskListItem/TaskListItem';\r\nimport {\r\n  getLoading,\r\n  getVisibleTasks,\r\n} from '../../../redux/tasks/task-selectors';\r\nimport { fetchTasks } from '../../../redux/tasks/task-operations';\r\nimport { useParams } from 'react-router-dom';\r\nimport ChartModal from '../../graph/modal/ChartModal';\r\nimport Loader from '../../loader/Loader';\r\n\r\nconst TaskList = ({ taskDate }) => {\r\n  const { sprintId } = useParams();\r\n  const tasks = useSelector(getVisibleTasks);\r\n  const isLoading = useSelector(getLoading);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchTasks(sprintId));\r\n  }, [dispatch, sprintId]);\r\n  return (\r\n    <>\r\n      {isLoading ? (\r\n        <Loader />\r\n      ) : (\r\n        !tasks.length && (\r\n          <div className={styles.emptyMessageBox}>\r\n            <h2 className={styles.emptyMessage}>\r\n              Your task collection is empty, use the \"Create task\" button.\r\n            </h2>\r\n          </div>\r\n        )\r\n      )}\r\n      {!!tasks.length && (\r\n        <ul className={styles.taskList}>\r\n          {tasks.map(item => (\r\n            <li key={item._id} className={styles.taskCard}>\r\n              <TaskListItem item={item} taskDate={taskDate} />\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n      <ChartModal />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TaskList;\r\n","import React from 'react';\nimport styles from './TaskForm.module.css';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { createTask } from '../../redux/tasks/task-operations';\nimport Button from '../../shared/button/Button';\nimport { useParams } from 'react-router-dom';\n\nconst formSchema = Yup.object().shape({\n  title: Yup.string().required('Task name is a required field'),\n  hoursPlanned: Yup.number('Planned hours must be a number')\n    .lessThan(9, 'Must be less or iqual to 8h')\n    .required('Planned hours  is a required field')\n    .positive('Planned hours  must be a positive number')\n    .integer('Planned hours  must be an integer'),\n});\n\nconst TaskForm = ({ onClose }) => {\n  const { sprintId } = useParams();\n  const dispatch = useDispatch();\n\n  return (\n    <div className={styles.formContainer}>\n      <h2 className={styles.titleForm}>Create new task</h2>\n      <Formik\n        initialValues={{\n          title: '',\n          hoursPlanned: '',\n        }}\n        validationSchema={formSchema}\n        onSubmit={values => {\n          createTask(values, sprintId);\n          dispatch(createTask(values, sprintId));\n          onClose();\n        }}\n      >\n        <Form className={styles.form}>\n          <Field\n            className={styles.inputName}\n            name=\"title\"\n            type=\"text\"\n            placeholder=\"Task name\"\n          />\n          <ErrorMessage\n            className={styles.errorName}\n            component=\"span\"\n            name=\"title\"\n          />\n\n          <Field\n            className={styles.inputTime}\n            name=\"hoursPlanned\"\n            type=\"number\"\n            placeholder=\"Planned hours \"\n          />\n\n          <ErrorMessage\n            className={styles.errorTime}\n            component=\"span\"\n            name=\"hoursPlanned\"\n          />\n          <Button type=\"submit\">Done</Button>\n        </Form>\n      </Formik>\n    </div>\n  );\n};\n\nexport default TaskForm;\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport styles from './TitleEditor.module.css';\nimport sprite from '../../icons/symbol-defs.svg';\nimport { editTitle } from '../../redux/sprints/sprints-operations';\nimport { getSprintsSelector } from '../../redux/sprints/sprints-selectors';\nimport AutosizeInput from './AutosizeInput';\n\n\nexport default function ChangeTitle() {\n  const dispatch = useDispatch();\n  const [input, setInput] = useState();\n  const [isUpdate, setUpdate] = useState(true);\n  const { sprintId } = useParams();\n  const sprints = useSelector(getSprintsSelector);\n  const sprint = sprints.find(sprint => sprint._id === sprintId);\n  const [isActive, setActive] = useState(true);\n\n\n  const onChangeTitle = e => {\n    setActive(() => setActive(false));\n    setUpdate(!isUpdate);\n    setInput(sprint.title);\n  };\n\n  const onHandleChange = e => {\n    setInput(e.target.value);\n  };\n\n  const onFormSubmit = e => {\n    e.preventDefault();\n    dispatch(editTitle(sprintId, input));\n    setUpdate(!isUpdate);\n    setActive(() => setActive(true));\n  };\n\n  if (isActive) {\n    return (\n      <div className={styles.wrapper}>\n\n        <h1 className={styles.sprintTitle} onClick={onChangeTitle}>\n          {sprint?.title}\n        </h1>\n        <button\n          type=\"button\"\n          onClick={onChangeTitle}\n          className={styles.changeTitleButton}\n        >\n          <svg className={styles.changeTitleButton}>\n            <use href={sprite + '#icon-pencil'}></use>\n          </svg>\n        </button>\n        </div>\n    );\n  }\n\n  if (!isActive) {\n    return (\n      <>\n        <form className={styles.wrapper}>\n          <AutosizeInput\n            type=\"text\"\n            name=\"edit\"\n            value={input}\n            onChange={onHandleChange}\n            onBlur={onFormSubmit}\n            maxLength=\"22\"\n            inputClassName={styles.titleChangeInput}\n            autoFocus\n            autoComplete=\"off\"\n          />\n          <button\n            className={styles.changeTitleButton}\n            type=\"submit\"\n            onClick={onFormSubmit}\n          >\n            <svg className={styles.changeTitleButton2}>\n              <use href={sprite + '#icon-save'}></use>\n            </svg>\n          </button>\n        </form>\n      </>\n    );\n  }\n}\n","import { useDispatch, useSelector } from 'react-redux';\nimport { changeFilter } from '../../../redux/tasks/task-actions';\nimport { getFilter } from '../../../redux/tasks/task-selectors';\nimport styles from './TaskFilter.module.css';\nimport sprite from '../../../icons/symbol-defs.svg';\n\nconst TaskFilter = ({ handleChange }) => {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n  handleChange = event => {\n    event.preventDefault();\n    dispatch(changeFilter(event.target.value));\n  };\n\n  return (\n    <div className={styles.searchContainer}>\n      <input\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={handleChange}\n        className={styles.searchInputActive}\n      />\n      <button type=\"submit\" className={styles.searchBtn}>\n        <svg className={styles.iconSearch}>\n          <use href={sprite + '#icon-search'}></use>\n        </svg>\n      </button>\n    </div>\n  );\n};\n\nexport default TaskFilter;\n","import React, { useEffect, useState } from 'react';\r\nimport styles from './TaskHeader.module.css';\r\nimport MainModal from '../../../shared/mainModal/MainModal';\r\nimport TaskForm from '../../taskForm/TaskForm';\r\nimport ChangeTitle from '../../titleEditor/TitleEditor';\r\nimport RoundButton from '../../../shared/roundButton/RoundButton';\r\nimport TaskFilter from '../taskFilter/TaskFilter';\r\nimport { useSelector } from 'react-redux';\r\nimport { getSprintsSelector } from '../../../redux/sprints/sprints-selectors';\r\nimport { useParams } from 'react-router-dom';\r\nimport { getCurrentDay } from '../../../redux/tasks/task-selectors';\r\n\r\nexport default function SprintHeader({ setTaskDate }) {\r\n  const [showModal, setShowModal] = useState(false);\r\n  const sprints = useSelector(getSprintsSelector);\r\n  const { sprintId } = useParams();\r\n  const startDate = sprints.find(item => item._id === sprintId)?.startDate;\r\n  const duration = sprints.find(item => item._id === sprintId)?.duration;\r\n  const endDate = sprints.find(item => item._id === sprintId)?.endDate;\r\n  const _MS_PER_DAY = 1000 * 60 * 60 * 24;\r\n  const [currentDay, setCurrentDay] = useState(Date.now());\r\n  const [sprintDay, setSprintDay] = useState(0);\r\n  const curDay = useSelector(getCurrentDay);\r\n\r\n  useEffect(() => {\r\n    const result = (Date.now() - Date.parse(startDate)) / _MS_PER_DAY;\r\n    setSprintDay(Math.floor(result + 1));\r\n  }, [startDate, _MS_PER_DAY, sprintId]);\r\n\r\n  useEffect(() => {\r\n    setCurrentDay(curDay);\r\n  }, [sprintId, curDay]);\r\n\r\n  useEffect(() => {\r\n    setTaskDate(currentDay);\r\n  }, [sprintDay, setTaskDate, currentDay]);\r\n\r\n  useEffect(() => {\r\n    const body = document.querySelector('body');\r\n    body.style.overflow = showModal ? 'hidden' : 'auto';\r\n  }, [showModal]);\r\n\r\n  const onDecrement = () => {\r\n    setCurrentDay(prev => prev - _MS_PER_DAY);\r\n    setSprintDay(prev => prev - 1);\r\n  };\r\n\r\n  const onIncrement = () => {\r\n    setCurrentDay(prev => prev + _MS_PER_DAY);\r\n    setSprintDay(prev => prev + 1);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.headerWrapper}>\r\n      <section className={styles.sprintHeader}>\r\n        <div className={styles.controlAndSearchBlock}>\r\n          <div className={styles.controlPanel}>\r\n            {!!sprintDay && !!duration && Date.parse(startDate) <= currentDay && (\r\n              <div className={styles.switch}>\r\n                {new Date(startDate).getDate() !==\r\n                new Date(currentDay).getDate() ? (\r\n                  <button\r\n                    type=\"button\"\r\n                    className={styles.leftArrow}\r\n                    onClick={onDecrement}\r\n                  >\r\n                    &#5176;\r\n                  </button>\r\n                ) : (\r\n                  <span className={styles.invisibleArrow}></span>\r\n                )}\r\n\r\n                <span className={styles.day}>{sprintDay}</span>\r\n                <span className={styles.separator}>/</span>\r\n                <span className={styles.totalDays}>{duration}</span>\r\n\r\n                {new Date(endDate).getDate() !==\r\n                new Date(currentDay).getDate() ? (\r\n                  <button\r\n                    type=\"button\"\r\n                    className={styles.rightArrow}\r\n                    onClick={onIncrement}\r\n                  >\r\n                    &#5171;\r\n                  </button>\r\n                ) : (\r\n                  <span className={styles.invisibleArrow}></span>\r\n                )}\r\n              </div>\r\n            )}\r\n            <span className={styles.date}>\r\n              {new Date(currentDay)\r\n                .toJSON()\r\n                .slice(0, 10)\r\n                .split('-')\r\n                .reverse()\r\n                .join('.')}\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div className={styles.control}>\r\n          <div className={styles.baseWrapper}>\r\n            <ChangeTitle />\r\n          </div>\r\n          <div className={styles.buttonBox}>\r\n            <RoundButton onClick={() => setShowModal(true)} />\r\n            <p className={styles.buttonDescription}>Create task</p>\r\n          </div>\r\n        </div>\r\n\r\n        <div className={styles.tasksHeader}>\r\n          <p className={styles.tasksHeaderText}>Task</p>\r\n          <p className={styles.tasksHeaderText}>\r\n            Scheduled <br />\r\n            hours\r\n          </p>\r\n          <p className={styles.tasksHeaderText}>Hours spent / per day </p>\r\n          <p className={styles.tasksHeaderText}>Hours spent</p>\r\n\r\n          <TaskFilter />\r\n        </div>\r\n      </section>\r\n      <MainModal\r\n        showModal={showModal}\r\n        setShowModal={setShowModal}\r\n        onClose={() => setShowModal(false)}\r\n      >\r\n        <TaskForm onClose={() => setShowModal('')} />\r\n      </MainModal>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport RoundButton from '../../../shared/roundButton/RoundButton';\r\nimport styles from './SprintListSideBar.module.css';\r\nimport MainModal from '../../../shared/mainModal/MainModal';\r\nimport СreateSprintForm from '../../createSprintForm/CreateSprintForm';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n  getSprintsSelector,\r\n  loaderSelector,\r\n} from '../../../redux/sprints/sprints-selectors';\r\nimport { fetchSprints } from '../../../redux/sprints/sprints-operations';\r\nimport { useParams, Link, NavLink } from 'react-router-dom';\r\nimport ButtonShow from '../../../shared/buttonShow/ButtonShow';\r\nimport Loader from '../../loader/Loader';\r\n\r\nconst SprintList = () => {\r\n  const [showModal, setShowModal] = useState(false);\r\n  const sprintsList = useSelector(getSprintsSelector);\r\n  const isLoading = useSelector(loaderSelector);\r\n\r\n  const params = useParams();\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchSprints(params.projectId));\r\n  }, [dispatch, params.projectId, params.history]);\r\n\r\n  useEffect(() => {\r\n    const body = document.querySelector('body');\r\n    body.style.overflow = showModal ? 'hidden' : 'auto';\r\n  }, [showModal]);\r\n\r\n  return (\r\n    <div className={styles.sprintsContainer}>\r\n      <Link\r\n        className={styles.sprintsButtonBackContainer}\r\n        to={`/projects/${params.projectId}`}\r\n      >\r\n        <ButtonShow />\r\n        <p className={styles.showProject}>Show sprints</p>\r\n      </Link>\r\n\r\n      <div className={styles.leftPanelSprintsContainer}>\r\n        <ul className={styles.sprintsList}>\r\n          {isLoading ? (\r\n            <Loader />\r\n          ) : (\r\n            sprintsList.map(({ title, _id }) => (\r\n              <li key={_id}>\r\n                <NavLink\r\n                  className={styles.item}\r\n                  activeClassName={styles.activeItem}\r\n                  to={`${_id}`}\r\n                >\r\n                  <div className={styles.sprintIcon}></div>\r\n                  <p>{title}</p>\r\n                </NavLink>\r\n              </li>\r\n            ))\r\n          )}\r\n        </ul>\r\n      </div>\r\n      <div className={styles.sideButtonBox}>\r\n        <RoundButton onClick={() => setShowModal(true)} />\r\n\r\n        <p className={styles.buttonTag}>Create sprint</p>\r\n        <MainModal\r\n          showModal={showModal}\r\n          setShowModal={setShowModal}\r\n          onClose={() => setShowModal(false)}\r\n        >\r\n          <СreateSprintForm onClose={() => setShowModal(false)} />\r\n        </MainModal>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SprintList;\r\n","import React, { useState } from 'react';\r\nimport TaskList from '../../components/taskPageContent/taskList/TaskList';\r\nimport TaskHeader from '../../components/taskPageContent/taskHeader/TaskHeader';\r\nimport MainPageContainer from '../../components/taskPageContainer/mainPageContainer/MainPageContainer';\r\nimport LeftBar from '../../components/taskPageContainer/leftBar/LeftBar';\r\nimport RightBar from '../../components/taskPageContainer/rightBar/RightBar';\r\nimport RightItemBar from '../../components/taskPageContainer/rightItemBar/RightItemBar';\r\nimport SprintListSideBar from '../../components/taskPageContent/sprintListSideBar/SprintListSideBar';\r\n\r\nconst TasksPage = () => {\r\n  const [taskDate, setTaskDate] = useState(Date.now());\r\n  return (\r\n    <MainPageContainer>\r\n      <LeftBar>\r\n        <SprintListSideBar />\r\n      </LeftBar>\r\n      <RightBar>\r\n        <TaskHeader setTaskDate={setTaskDate} />\r\n        <RightItemBar>\r\n          <TaskList taskDate={taskDate} />\r\n        </RightItemBar>\r\n      </RightBar>\r\n    </MainPageContainer>\r\n  );\r\n};\r\n\r\nexport default TasksPage;\r\n"],"sourceRoot":""}