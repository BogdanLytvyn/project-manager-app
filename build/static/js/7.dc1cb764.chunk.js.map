{"version":3,"sources":["redux/projects/projects-selectors.js","components/projectForm/ProjectForm.jsx","components/projectForm/ProjectForm.module.css","components/sprintsPageContent/sprintsHeader/SprintsHeader.module.css","components/membersList/MembersList.module.css","components/membersListItem/MembersListItem.module.css","shared/deleteButton/DeleteButton.module.css","components/addMember/AddMember.module.css","components/sprintsPageContent/editTitle/EditTitle.module.css","components/sprintsPageContent/sprintsList/SprintsList.module.css","components/sprintsPageContent/sprintsList/sprintsListItem/SprintsListItem.module.css","components/sprintsPageContent/sprintsListSide/SprintsListSide.module.css","components/sprintsPageContent/projectSideBar/ProjectSideBar.module.css","components/sprintsPageContent/projectSideBarList/ProjectSideBarList.module.css","shared/deleteButton/DeleteButton.jsx","components/membersListItem/MembersListItem.jsx","components/membersList/MembersList.jsx","components/addMember/AddMember.jsx","components/sprintsPageContent/editTitle/EditTitle.jsx","components/sprintsPageContent/sprintsHeader/SprintsHeader.jsx","components/sprintsPageContent/sprintsList/sprintsListItem/SprintsListItem.jsx","components/sprintsPageContent/sprintsList/SprintsList.jsx","components/sprintsPageContent/sprintsListSide/SprintsListSide.jsx","components/sprintsPageContent/projectSideBarList/ProjectSideBarList.jsx","components/sprintsPageContent/projectSideBar/ProjectSideBar.jsx","pages/sprintsPage/SprintsPage.jsx"],"names":["getProjectsSelector","state","projects","getProjectLoading","loading","formSchema","Yup","shape","title","min","required","description","ProjectForm","onClose","dispatch","useDispatch","className","styles","formContainer","titleForm","initialValues","validationSchema","onSubmit","values","createProject","form","inputName","name","type","placeholder","errorName","component","inputDescription","errorDescription","module","exports","DeleteButton","deleteBtn","deleteIcon","href","sprite","MembersListItem","member","id","membersListItem","memberEmail","MembersList","members","container","addedMembers","length","membersList","map","idx","email","AddMember","projectId","useParams","useSelector","find","item","_id","a","resetForm","addMember","memberForm","input","error","Button","EditTitle","useState","setInput","isUpdate","setUpdate","isLoading","project","active","setActive","onHandleSubmit","evt","preventDefault","editTitle","box","current","Loader","pageTitle","onClick","buttonFix","iconPencil","edit","editForm","AutosizeInput","value","autoComplete","onChange","target","onBlur","inputClassName","editInput","maxLength","autoFocus","buttonSave","iconSave","SprintsHeader","showModal","setShowModal","useEffect","document","querySelector","style","overflow","boxBack","to","boxBackLink","ButtonShow","showProject","boxHead","head","titleBox","buttonBox","RoundButton","pageText","addPeopleBox","buttonAddPeople","iconAddPeople","addPeopleText","MainModal","CreateSprintForm","SprintListItem","months","match","useRouteMatch","duration","endDate","startDate","dateStart","split","monthStart","replace","dateEnd","padStart","monthEnd","start","end","sprintListItem","projectLink","url","date","cardTitle","cardDateContainer","cardDate","buttonDelete","deleteSprint","SprintsList","params","sprints","getSprintsSelector","loaderSelector","history","useHistory","fetchSprints","getResult","emptyMessage","sprintList","SprintsListItem","SprintsListSide","ProjectSideBarList","sideLeftList","sideItem","activeClassName","avtive","sideItemLink","sideItemName","ProjectSideBar","projectSideBar","boxBackAvtive","sideButtonBox","sidePlusText","SprintsPage","MainPageContainer","LeftBar","RightBar","RightItemBar"],"mappings":"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","file":"static/js/7.dc1cb764.chunk.js","sourcesContent":["export const getProjectsSelector = state => state.projects.projects;\nexport const getProjectLoading = state => state.projects.loading;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport styles from './ProjectForm.module.css';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { createProject } from '../../redux/projects/projects-operations';\nimport Button from '../../shared/button/Button';\n\nconst formSchema = Yup.object().shape({\n  title: Yup.string()\n    .min(3, 'Too short!')\n    .required('* Project Name is a required field'),\n  description: Yup.string()\n    .min(4, 'Too short!')\n    .required('* Description is a required field'),\n});\n\nconst ProjectForm = ({ onClose }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <div className={styles.formContainer}>\n      <h2 className={styles.titleForm}>Create new project</h2>\n      <Formik\n        initialValues={{\n          title: '',\n          description: '',\n        }}\n        validationSchema={formSchema}\n        onSubmit={values => {\n          createProject(values);\n          dispatch(createProject(values));\n          onClose();\n        }}\n      >\n        <Form className={styles.form}>\n          <Field\n            className={styles.inputName}\n            name=\"title\"\n            type=\"text\"\n            placeholder=\"Project name\"\n          />\n          <ErrorMessage\n            className={styles.errorName}\n            component=\"span\"\n            name=\"title\"\n          />\n\n          <Field\n            className={styles.inputDescription}\n            name=\"description\"\n            type=\"text\"\n            placeholder=\"Project description\"\n          />\n\n          <ErrorMessage\n            className={styles.errorDescription}\n            component=\"span\"\n            name=\"description\"\n          />\n          <Button type=\"submit\">Done</Button>\n        </Form>\n      </Formik>\n    </div>\n  );\n};\n\nexport default ProjectForm;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"accentColor\":\"#FF6B08\",\"greyColor\":\"rgba(24, 28, 39, 0.6)\",\"titleForm\":\"ProjectForm_titleForm__bCDh-\",\"inputName\":\"ProjectForm_inputName__dWgUA\",\"inputDescription\":\"ProjectForm_inputDescription__2_-cW\",\"errorName\":\"ProjectForm_errorName__YD2lV\",\"errorDescription\":\"ProjectForm_errorDescription__1uU2q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"SprintsHeader_title__1eeFT\",\"buttonAddPeople\":\"SprintsHeader_buttonAddPeople__3ZZei\",\"addPeopleText\":\"SprintsHeader_addPeopleText__1GFye\",\"description\":\"SprintsHeader_description__3knIb\",\"showProject\":\"SprintsHeader_showProject__2dpB5\",\"titleBox\":\"SprintsHeader_titleBox__3k_jL\",\"boxBack\":\"SprintsHeader_boxBack__QFYlq\",\"iconAddPeople\":\"SprintsHeader_iconAddPeople__33MgY\",\"head\":\"SprintsHeader_head__1rnMS\",\"buttonBox\":\"SprintsHeader_buttonBox__2Eh0T\",\"pageText\":\"SprintsHeader_pageText__10ht1\",\"boxBackLink\":\"SprintsHeader_boxBackLink__i-dSk\",\"boxHead\":\"SprintsHeader_boxHead__24GRx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addedMembers\":\"MembersList_addedMembers__1C6bW\",\"message\":\"MembersList_message__1u9r4\",\"membersList\":\"MembersList_membersList__2BJvE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"membersListItem\":\"MembersListItem_membersListItem__v4_H4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"deleteBtn\":\"DeleteButton_deleteBtn__2G6xm\",\"deleteIcon\":\"DeleteButton_deleteIcon__1SsuQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"accentColor\":\"#FF6B08\",\"greyColor\":\"rgba(24, 28, 39, 0.6)\",\"memberForm\":\"AddMember_memberForm__2ZBTH\",\"titleForm\":\"AddMember_titleForm__PTT1f\",\"input\":\"AddMember_input__3ZWWV\",\"error\":\"AddMember_error__3yt-2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"EditTitle_box__3BZXP\",\"current\":\"EditTitle_current__2xF3l\",\"edit\":\"EditTitle_edit__3WbN6\",\"editForm\":\"EditTitle_editForm__1Z7oz\",\"editInput\":\"EditTitle_editInput__3YkcY\",\"buttonFix\":\"EditTitle_buttonFix__2Wrhw\",\"buttonSave\":\"EditTitle_buttonSave__2ZgE7\",\"iconPencil\":\"EditTitle_iconPencil__26Q1z\",\"iconSave\":\"EditTitle_iconSave__1Sx5R\",\"pageTitle\":\"EditTitle_pageTitle__3Zhsb\",\"boxEdit\":\"EditTitle_boxEdit__Yv4cw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sprintList\":\"SprintsList_sprintList__3RNAC\",\"emptyMessage\":\"SprintsList_emptyMessage__1jiB-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sprintListItem\":\"SprintsListItem_sprintListItem__20LQk\",\"projectLink\":\"SprintsListItem_projectLink__1MpXC\",\"buttonDelete\":\"SprintsListItem_buttonDelete__3RYSF\",\"deleteIcon\":\"SprintsListItem_deleteIcon__3TaZc\",\"cardTitle\":\"SprintsListItem_cardTitle__3npp3\",\"cardDateContainer\":\"SprintsListItem_cardDateContainer__3ZnK3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"SprintsListSide_box__3KoBX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"projectSideBar\":\"ProjectSideBar_projectSideBar__7Bzkb\",\"boxBack\":\"ProjectSideBar_boxBack__sWM3c\",\"boxBackLink\":\"ProjectSideBar_boxBackLink__lZLnl\",\"sideButtonBox\":\"ProjectSideBar_sideButtonBox__3947i\",\"sidePlusText\":\"ProjectSideBar_sidePlusText__MVoWK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"ProjectSideBarList_box__3wpVs\",\"sideLeftList\":\"ProjectSideBarList_sideLeftList__3xi8l\",\"sideItemBox\":\"ProjectSideBarList_sideItemBox__2W0XG\",\"sideItem\":\"ProjectSideBarList_sideItem__2r-Qa\",\"sideItemLink\":\"ProjectSideBarList_sideItemLink__3coKz\",\"avtive\":\"ProjectSideBarList_avtive__3f8c7\",\"sideItemName\":\"ProjectSideBarList_sideItemName__1oA1z\"};","import sprite from '../../icons/symbol-defs.svg';\nimport styles from './DeleteButton.module.css';\n\nconst DeleteButton = () => {\n  return (\n    <button type=\"button\" className={styles.deleteBtn}>\n      <svg className={styles.deleteIcon}>\n        <use href={sprite + '#icon-delete-bin'}></use>\n      </svg>\n    </button>\n  );\n};\n\nexport default DeleteButton;\n","import styles from './MembersListItem.module.css';\nimport DeleteButton from '../../shared/deleteButton/DeleteButton';\n\nconst MembersListItem = ({ member, id }) => {\n  return (\n    <li className={styles.membersListItem} key={id}>\n      <p className={styles.memberEmail}> {member}</p>\n      <DeleteButton />\n    </li>\n  );\n};\n\nexport default MembersListItem;\n","import React from 'react';\nimport styles from './MembersList.module.css';\nimport MembersListItem from '../membersListItem/MembersListItem';\n\nconst MembersList = ({ members }) => {\n  return (\n    <div className={styles.container}>\n      <p className={styles.addedMembers}> Total members: {members.length}</p>\n      <ul className={styles.membersList}>\n        {members.map((member, idx) => (\n          <MembersListItem member={member} key={idx} />\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default MembersList;\n","import MembersList from '../membersList/MembersList';\nimport styles from './AddMember.module.css';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { addMember } from '../../redux/projects/projects-operations';\nimport { useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getProjectsSelector } from '../../redux/projects/projects-selectors';\nimport Button from '../../shared/button/Button';\n\nconst formSchema = Yup.object().shape({\n  email: Yup.string()\n    .required('* Email is a required field')\n    .email('* Email must be valid'),\n});\n\nconst AddMember = () => {\n  const { projectId } = useParams();\n  const dispatch = useDispatch();\n  const projects = useSelector(getProjectsSelector);\n  const members = projects.find(item => item._id === projectId).members;\n\n  return (\n    <div>\n      <div className={styles.formContainer}>\n        <h2 className={styles.titleForm}>Add new project member</h2>\n        <Formik\n          initialValues={{ email: '' }}\n          validationSchema={formSchema}\n          onSubmit={async (values, { resetForm }) => {\n            addMember(values);\n            dispatch(addMember(values, projectId));\n            resetForm({});\n          }}\n        >\n          <Form className={styles.memberForm}>\n            <Field\n              className={styles.input}\n              name=\"email\"\n              type=\"text\"\n              placeholder=\"E-mail\"\n            />\n\n            <ErrorMessage\n              className={styles.error}\n              component=\"span\"\n              name=\"email\"\n            />\n            <MembersList members={members} />\n            <Button id=\"form\">Done</Button>\n          </Form>\n        </Formik>\n      </div>\n    </div>\n  );\n};\n\nexport default AddMember;\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport styles from './EditTitle.module.css';\nimport sprite from '../../../icons/symbol-defs.svg';\nimport { editTitle } from '../../../redux/projects/projects-operations';\nimport { getProjectLoading, getProjectsSelector } from '../../../redux/projects/projects-selectors';\nimport AutosizeInput from '../../titleEditor/AutosizeInput';\nimport Loader from '../../loader/Loader';\n\n\nconst EditTitle = () => {\n  const dispatch = useDispatch();\n  const [input, setInput] = useState();\n  const [isUpdate, setUpdate] = useState(true);\n  const { projectId } = useParams();\n  const projects = useSelector(getProjectsSelector);\n  const isLoading = useSelector(getProjectLoading);\n  const project = projects.find(item => item._id === projectId);\n  const [active, setActive] = useState(true);\n\n  const onEditTitle = () => {\n    setActive(() => setActive(false));\n    setUpdate(!isUpdate);\n    setInput(project.title);\n  };\n\n  const onHandleChange = evt => {\n    setInput(evt.target.value);\n  };\n\n  const onHandleSubmit = evt => {\n    evt.preventDefault();\n    dispatch(editTitle(projectId, input));\n    setUpdate(!isUpdate);\n    setActive(() => setActive(true));\n  };\n\n  if (active) {\n    return (\n      <div className={styles.box}>\n        <div className={styles.current}>\n          {isLoading ? (\n              <Loader />\n          ) : (\n            <>\n              <h2 className={styles.pageTitle}>{project?.title}</h2>\n              <button\n                onClick={onEditTitle}\n                type=\"button\"\n                className={styles.buttonFix}\n              >\n                <svg className={styles.iconPencil}>\n                  <use href={sprite + '#icon-pencil'}></use>\n                </svg>\n              </button>\n            </>\n          )}\n        </div>\n        <p className={styles.description}>{project?.description}</p>\n      </div>\n    );\n  }\n\n  if (!active) {\n    return (\n      <div className={styles.box}>\n        <div className={styles.edit}>\n          <form className={styles.editForm}>\n            <AutosizeInput\n              type=\"text\"\n              name=\"edit\"\n              value={input}\n              autoComplete=\"off\"\n              onChange={onHandleChange}\n              onBlur={onHandleSubmit}\n              inputClassName={styles.editInput}\n              maxLength=\"30\"\n              autoFocus\n            />\n            <button\n              className={styles.buttonSave}\n              onClick={onHandleSubmit}\n              type=\"submit\"\n            >\n              <svg className={styles.iconSave}>\n                <use href={sprite + '#icon-save'}></use>\n              </svg>\n            </button>\n          </form>\n        </div>\n        <p className={styles.description}>{project?.description}</p>\n      </div>\n    );\n  }\n};\n\nexport default EditTitle;\n","import React, { useEffect, useState } from 'react';\nimport styles from './SprintsHeader.module.css';\nimport sprite from '../../../icons/symbol-defs.svg';\nimport RoundButton from '../../../shared/roundButton/RoundButton';\nimport ButtonShow from '../../../shared/buttonShow/ButtonShow';\nimport MainModal from '../../../shared/mainModal/MainModal';\nimport AddMember from '../../addMember/AddMember';\nimport CreateSprintForm from '../../createSprintForm/CreateSprintForm';\nimport EditTitle from '../editTitle/EditTitle';\nimport { NavLink } from 'react-router-dom';\n\nconst SprintsHeader = () => {\n  const [showModal, setShowModal] = useState(false);\n  useEffect(() => {\n    const body = document.querySelector('body');\n    body.style.overflow = showModal ? 'hidden' : 'auto';\n  }, [showModal]);\n  return (\n    <>\n      <div className={styles.boxBack}>\n        <NavLink to=\"/projects\" className={styles.boxBackLink}>\n          <ButtonShow />\n          <p className={styles.showProject}>Show projects</p>\n        </NavLink>\n      </div>\n      <div className={styles.boxHead}>\n        <div className={styles.head}>\n          <div className={styles.titleBox}>\n            <div className={styles.title}>\n              <EditTitle />\n            </div>\n            <div className={styles.buttonBox}>\n              <RoundButton onClick={() => setShowModal('createSprint')} />\n              <p className={styles.pageText}>Create sprint</p>\n            </div>\n          </div>\n        </div>\n        <div className={styles.addPeopleBox}>\n          <button\n            onClick={() => setShowModal('addPeople')}\n            type=\"button\"\n            className={styles.buttonAddPeople}\n          >\n            <svg className={styles.iconAddPeople}>\n              <use href={sprite + '#icon-add-group'}></use>\n            </svg>\n            <p className={styles.addPeopleText}>Add people</p>\n          </button>\n          <MainModal\n            showModal={showModal}\n            setShowModal={setShowModal}\n            onClose={() => setShowModal('')}\n          >\n            {showModal === 'addPeople' && (\n              <AddMember onClose={() => setShowModal('')} />\n            )}\n            {showModal === 'createSprint' && (\n              <CreateSprintForm onClose={() => setShowModal('')} />\n            )}\n          </MainModal>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default SprintsHeader;\n","import React from 'react';\r\nimport styles from './SprintsListItem.module.css';\r\nimport { Link, useRouteMatch } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport { deleteSprint } from '../../../../redux/sprints/sprints-operations';\r\nimport sprite from '../../../../icons/symbol-defs.svg';\r\n\r\nconst SprintListItem = ({ item }) => {\r\n  const months = [\r\n    '',\r\n    'JAN',\r\n    'FEB',\r\n    'MAR',\r\n    'APR',\r\n    'MAY',\r\n    'JUN',\r\n    'JUL',\r\n    'AUG',\r\n    'SEP',\r\n    'OCT',\r\n    'NOV',\r\n    'DEC',\r\n  ];\r\n\r\n  const match = useRouteMatch();\r\n  const dispatch = useDispatch();\r\n  const deleteItem = () => dispatch(deleteSprint(item._id));\r\n  const { title, duration, endDate, startDate } = item;\r\n\r\n  const dateStart = startDate.split('-')[2];\r\n  const monthStart = months[startDate.split('-')[1].replace(/(^|\\s)0/g, '$1')];\r\n\r\n  const dateEnd = endDate.split('-')[2].padStart(2, '0');\r\n  const monthEnd = months[endDate.split('-')[1]];\r\n\r\n  const start = `${dateStart} ${monthStart}`;\r\n  const end = `${dateEnd} ${monthEnd}`;\r\n\r\n  return (\r\n    <div>\r\n      <li className={styles.sprintListItem}>\r\n        <Link\r\n          className={styles.projectLink}\r\n          to={`${match.url}/sprints/${item._id}`}\r\n          id={item._id}\r\n        >\r\n          <div className={styles.date}>\r\n            <h3 className={styles.cardTitle}>{title}</h3>\r\n            <p className={styles.cardDateContainer}>\r\n              Start date <span className={styles.cardDate}>{start}</span>\r\n            </p>\r\n            <p className={styles.cardDateContainer}>\r\n              End date <span className={styles.cardDate}>{end}</span>\r\n            </p>\r\n            <p className={styles.cardDateContainer}>\r\n              Duration <span className={styles.cardDate}>{duration}</span>\r\n            </p>\r\n          </div>\r\n        </Link>\r\n        <button\r\n          type=\"button\"\r\n          className={styles.buttonDelete}\r\n          onClick={deleteItem}\r\n        >\r\n          <svg className={styles.deleteIcon}>\r\n            <use href={sprite + '#icon-delete-bin'}></use>\r\n          </svg>\r\n        </button>\r\n      </li>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SprintListItem;\r\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styles from './SprintsList.module.css';\nimport SprintsListItem from './sprintsListItem/SprintsListItem';\nimport {\n  getSprintsSelector,\n  loaderSelector,\n} from '../../../redux/sprints/sprints-selectors';\nimport { fetchSprints } from '../../../redux/sprints/sprints-operations';\nimport { useParams, useHistory } from 'react-router-dom';\nimport Loader from '../../loader/Loader';\n\nconst SprintsList = () => {\n  const params = useParams();\n  const sprints = useSelector(getSprintsSelector);\n  const isLoading = useSelector(loaderSelector);\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  useEffect(() => {\n    const getResult = async () => {\n      await dispatch(fetchSprints(params.projectId));\n    };\n    getResult();\n  }, [dispatch, params.projectId, history]);\n\n  return (\n    <div>\n      <div>\n        {isLoading ? (\n          <Loader />\n        ) : (\n          !sprints.length && (\n            <h2 className={styles.emptyMessage}>\n              Your sprint collection is empty, use the \"Create sprint\" button.\n            </h2>\n          )\n        )}\n        {!!sprints.length && (\n          <ul className={styles.sprintList}>\n            {sprints.map((item, idx) => (\n              <SprintsListItem item={item} key={idx} />\n            ))}\n          </ul>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default SprintsList;\n","import React from 'react';\nimport SprintsHeader from '../sprintsHeader/SprintsHeader';\nimport SprintsList from '../sprintsList/SprintsList';\nimport styles from './SprintsListSide.module.css'\nconst SprintsListSide = () => {\n  return (\n    <div className={styles.box}>\n      <SprintsHeader />\n      <SprintsList />\n    </div>\n  );\n};\n\nexport default SprintsListSide;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport styles from './ProjectSideBarList.module.css';\nimport { getProjectsSelector } from '../../../redux/projects/projects-selectors';\nimport { useSelector } from 'react-redux';\n\nconst ProjectSideBarList = () => {\n  const projects = useSelector(getProjectsSelector);\n\n  return (\n    <div className={styles.box}>\n      <ul className={styles.sideLeftList}>\n        {projects.map(({ title, _id }) => (\n          <li key={_id} className={styles.sideItem}>\n            <NavLink\n              activeClassName={styles.avtive}\n              className={styles.sideItemLink}\n              to={`${_id}`}\n              id={_id}\n            >\n              <p className={styles.sideItemName}>{title}</p>\n            </NavLink>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default ProjectSideBarList;\n","import React, { useEffect, useState } from 'react';\nimport styles from './ProjectSideBar.module.css';\nimport RoundButton from '../../../shared/roundButton/RoundButton';\nimport ButtonShow from '../../../shared/buttonShow/ButtonShow';\nimport ProjectSideBarList from '../projectSideBarList/ProjectSideBarList';\nimport { NavLink } from 'react-router-dom';\nimport MainModal from '../../../shared/mainModal/MainModal';\nimport ProjectForm from '../../projectForm/ProjectForm';\n\nconst ProjectSideBar = () => {\n  const [showModal, setShowModal] = useState(false);\n  useEffect(() => {\n    const body = document.querySelector('body');\n    body.style.overflow = showModal ? 'hidden' : 'auto';\n  }, [showModal]);\n  return (\n    <div className={styles.projectSideBar}>\n      <div className={styles.boxBack}>\n        <NavLink\n          to=\"/projects\"\n          className={styles.boxBackLink}\n          activeClassName={styles.boxBackAvtive}\n        >\n          <ButtonShow />\n          <p className={styles.showProject}>Show projects</p>\n        </NavLink>\n      </div>\n      <ProjectSideBarList />\n      <div className={styles.sideButtonBox}>\n        <RoundButton onClick={() => setShowModal(true)} />\n        <p className={styles.sidePlusText}>Create project</p>\n        <MainModal\n          showModal={showModal}\n          setShowModal={setShowModal}\n          onClose={() => setShowModal(false)}\n        >\n          <ProjectForm onClose={() => setShowModal(false)} />\n        </MainModal>\n      </div>\n    </div>\n  );\n};\n\nexport default ProjectSideBar;\n","import React from 'react';\nimport MainPageContainer from '../../components/taskPageContainer/mainPageContainer/MainPageContainer';\nimport LeftBar from '../../components/taskPageContainer/leftBar/LeftBar';\nimport RightBar from '../../components/taskPageContainer/rightBar/RightBar';\nimport SprintsListSide from '../../components/sprintsPageContent/sprintsListSide/SprintsListSide';\n\nimport RightItemBar from '../../components/taskPageContainer/rightItemBar/RightItemBar';\nimport ProjectSideBar from '../../components/sprintsPageContent/projectSideBar/ProjectSideBar';\n\nimport { container } from '../../container.module.css';\n\nconst SprintsPage = () => {\n  return (\n    <div className={container}>\n      <MainPageContainer>\n        <LeftBar>\n          <ProjectSideBar />\n        </LeftBar>\n        <RightBar>\n          <RightItemBar>\n            <SprintsListSide />\n          </RightItemBar>\n        </RightBar>\n      </MainPageContainer>\n    </div>\n  );\n};\n\nexport default SprintsPage;\n"],"sourceRoot":""}